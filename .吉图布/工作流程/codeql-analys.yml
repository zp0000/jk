4ÁåÜ   h  nut scripts/vscripts challenge_0fun2 Tg?  Ô£µ[? ÁûÅ  Ô£µÔ£µchallenge_0fun tbÂ™∑  Ô£µÀá ÁØã  Ô£µÔ£µ0fun_update Á∑íd? Ô£µw? *  Ô£µÔ£µ0fun_shieldbug Ê°¥Óú£  Ô£µË∂Æ ?  Ô£µÔ£µ0fun_script ÂæÆL  Ô£µ+4 Áñª  Ô£µÔ£µ0fun_ranger È±ö?  Ô£µ? A  Ô£µÔ£µ0fun_random_green ,qM? Ô£µ. ?  Ô£µÔ£µ0fun_queen )rp? Ô£µ? 2&  Ô£µÔ£µ0fun_precache ÈØ∑? Ô£µ‰Ωú 
  Ô£µÔ£µ0fun_player_say 8?  Ô£µi? n  Ô£µÔ£µ0fun_particlespawn h?? Ô£µ‰ø± ?  Ô£µÔ£µ0fun_parasite ÁäÄÁ∫∞  Ô£µÊàá -  Ô£µÔ£µ0fun_ontakedamage ÊµòË§ô  Ô£µs Â∑ê  Ô£µÔ£µ0fun_ongameevent Âó¢Ô£µ  Ô£µÓàì T? Ô£µÔ£µ0fun_mortarbug ?ÈÉ°  Ô£µU? Z  Ô£µÔ£µ0fun_harvester „Ñï? Ô£µÊ®£ ?  Ô£µÔ£µ0fun_grenade_cluster /?? Ô£µÂÇ• ?  Ô£µÔ£µ0fun_fun_power_kill vÊæ£? Ô£µËØû $  Ô£µÔ£µ0fun_fun_power_damage xlÂ§ø  Ô£µVL _b  Ô£µÔ£µ0fun_drone_yellow ?+3  Ô£µÈ∞Ω _
  Ô£µÔ£µ0fun_drone_pink `?"  Ô£µ< ?  Ô£µÔ£µ0fun_drone_green 	ay  Ô£µ? I  Ô£µÔ£µ0fun_drone_giant ÂΩù? Ô£µ+ ?  Ô£µÔ£µ0fun_drone_explosive C^Hx  Ô£µ6$ ?  Ô£µÔ£µ0fun_drone_brown Ê∑ç^  Ô£µ? ?  Ô£µÔ£µ0fun_declaration ÁêîËæú  Ô£µ ?  Ô£µÔ£µ0fun_cvars j? Ô£µ ? ?  Ô£µÔ£µ0fun_buzzer V?  Ô£µW? ?  Ô£µÔ£µ0fun_boomer zË•º  Ô£µÓèÉ  [  Ô£µÔ£µ0fun_bfg ÂößÁπé  Ô£µe? ?  Ô£µÔ£µ0fun_asw_health_bar ??  Ô£µÈÄò  ?  Ô£µÔ£µ0fun_antlionguard_cavern ?Ë†ò  Ô£µÁ¨°  &  Ô£µÔ£µ0fun_alien_spawn_changer Èâ∫t  Ô£µÈ´Æ  ?  Ô£µÔ£µ0fun_adrenaline "È™ç	  Ô£µ(a  ?  Ô£µÔ£µ0fun2_update „ÇÅ? Ô£µ0B  ?  Ô£µÔ£µ  txt resource/challenges 0fun2 Âã£  Ô£µ>  *  Ô£µÔ£µ0fun m
Q  Ô£µ$:  ?  Ô£µÔ£µ resource alien_selection_0fun2 ‰πåcD  Ô£µ    Ô£µÔ£µalien_selection_0fun FË∑ã$  Ô£µ      Ô£µÔ£µ   // See the comment in alien_selection.txt for information on how to create spawn sets.

"SpawnSet" {
	"Name" "[0fun]"
	"Map" "*"
	"MinSkill" "1"
	"MaxSkill" "5"
	"MinHordeSize" "10"
	"MaxHordeSize" "20"
	"MinWanderers" "30"
	"MaxWanderers" "40"
	"MinHordeWanderers" "2"
	"MaxHordeWanderers" "4"
	"MinPrespawn" "10"
	"MaxPrespawn" "20"
	"MinPacks" "10"
	"MaxPacks" "20"

	"HORDE" {
		"SelectionWeight" "12"
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.8"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.9"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.1"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.2"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.7"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.7"
		}
	}
	"WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_giant"
		}
	}
	"HORDE_WANDERER" {
		"SelectionWeight" "0.75"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_giant"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_buzzer"
			"VScript" "0fun_buzzer.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "0fun_antlionguard_cavern"			
		}
	}
	"WANDERER" {
		"SelectionWeight" "0.75"
		"NPC" {
			"AlienClass" "asw_queen"
			"SpawnChance" "0.2"
			"VScript" "0fun_queen.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight"	"1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_green"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_explosive.nut"
		}
	}	
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_pink"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_yellow"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "2"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_brown"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_harvester"
			"VScript" "0fun_harvester.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_boomer"
			"VScript" "0fun_boomer.nut"
		}
	}
	"WANDERER" {
		"SelectionWeight" "17"
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.3"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.7"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.0"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.7"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_shieldbug"
			"VScript" "0fun_shieldbug.nut"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "0fun_antlionguard_cavern.nut"
		}
	}
	"PACK" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "0fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "0fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "0fun_ranger"
		}
	}
	"PACK" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug.nut"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug.nut"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug.nut"
		}
	}
	"PACK" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_parasite"
			"SizeScale" "0.6"
			"VScript" "0fun_parasite.nut"
		}
	}
}
//mid
"SpawnSet" {
	"Name" "[0fun] Lana's Sewer"
	"Map" "rd-lan2_sewer"
	"MinSkill" "1"
	"MaxSkill" "5"
	"MinHordeSize" "10"
	"MaxHordeSize" "20"
	"MinWanderers" "20"
	"MaxWanderers" "40"
	"MinHordeWanderers" "2"
	"MaxHordeWanderers" "4"
	"MinPrespawn" "10"
	"MaxPrespawn" "20"
	"MinPacks" "10"
	"MaxPacks" "20"

	"HORDE" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.9"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.7"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.2"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.8"
		}
	}
	"WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_giant"
		}
	}
	"HORDE_WANDERER" {
		"SelectionWeight" "0.75"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_giant"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_buzzer"
			"VScript" "0fun_buzzer.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "0fun_antlionguard_cavern.nut"			
		}
	}
	"WANDERER" {
		"SelectionWeight" "0.75"
		"NPC" {
			"AlienClass" "asw_queen"
			"SpawnChance" "0.2"
			"VScript" "0fun_queen.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight"	"1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_green"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_explosive.nut"
		}
	}	
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_pink"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_yellow"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "2"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "0fun_drone_brown"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_harvester"
			"VScript" "0fun_harvester.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_boomer"
			"VScript" "0fun_boomer.nut"
		}
	}
	"WANDERER" {
		"SelectionWeight" "17"
		"NPC" {
			"AlienClass" "asw_drone"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_shieldbug"
			"VScript" "0fun_shieldbug.nut"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "0fun_antlionguard_cavern.nut"
		}
	}
	"PACK" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "0fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "0fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "0fun_ranger"
		}
	}
	"PACK" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "0fun_mortarbug"
		}
	}
	"PACK" {
		"SelectionWeight" "1"
		"NPC" {
			"AlienClass" "asw_parasite"
			"SizeScale" "1.0"
			"VScript" "0fun_parasite"
		}
	}
}// See the comment in alien_selection.txt for information on how to create spawn sets.

"SpawnSet" {
	"Name" "[4fun2]+[Give Me the Power]"
	"Map" "*"
	"MinSkill" "1"
	"MaxSkill" "5"
	"MinHordeSize" "10"
	"MaxHordeSize" "20"
	"MinWanderers" "30"
	"MaxWanderers" "40"
	"MinHordeWanderers" "2"
	"MaxHordeWanderers" "4"
	"MinPrespawn" "10"
	"MaxPrespawn" "20"
	"MinPacks" "10"
	"MaxPacks" "20"

	"HORDE" {
		"SelectionWeight" "40"
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.0"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.8"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.4"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.7"
		}
	}
	"WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_giant"
		}
	}
	"HORDE_WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_giant"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_buzzer"
			"VScript" "4fun_buzzer.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "4fun_antlionguard_cavern"			
		}
	}
	"WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_queen"
			"SpawnChance" "0.3"
			"VScript" "4fun_queen.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight"	"10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_green"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_explosive.nut"
		}
	}	
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_pink"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_yellow"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_brown"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_harvester"
			"VScript" "4fun_harvester.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_boomer"
			"VScript" "4fun_boomer.nut"
		}
	}
	"WANDERER" {
		"SelectionWeight" "40"
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.0"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.8"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.4"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "0.7"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_shieldbug"
			"VScript" "4fun_shieldbug.nut"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "4fun_antlionguard_cavern.nut"
		}
	}
	"PACK" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "4fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "4fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "4fun_ranger"
		}
	}
	"PACK" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug.nut"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug.nut"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug.nut"
		}
	}
	"PACK" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_parasite"
			"SizeScale" "0.7"
			"VScript" "4fun_parasite.nut"
		}
	}
}
//mid
"SpawnSet" {
	"Name" "[4fun] Lana's Sewer"
	"Map" "rd-lan2_sewer"
	"MinSkill" "1"
	"MaxSkill" "5"
	"MinHordeSize" "10"
	"MaxHordeSize" "20"
	"MinWanderers" "20"
	"MaxWanderers" "40"
	"MinHordeWanderers" "2"
	"MaxHordeWanderers" "4"
	"MinPrespawn" "10"
	"MaxPrespawn" "20"
	"MinPacks" "10"
	"MaxPacks" "20"

	"HORDE" {
		"SelectionWeight" "40"
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.0"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.8"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1.4"
		}
		"NPC" {
			"AlienClass" "asw_drone"
			"SizeScale" "1"
		}
	}
	"WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_giant"
		}
	}
	"HORDE_WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_giant"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_buzzer"
			"VScript" "4fun_buzzer.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "4fun_antlionguard_cavern.nut"			
		}
	}
	"WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_queen"
			"SpawnChance" "0.3"
			"VScript" "4fun_queen.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight"	"10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_green"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_explosive.nut"
		}
	}	
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_pink"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_yellow"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_drone"
			"VScript" "4fun_drone_brown"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "8"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_harvester"
			"VScript" "4fun_harvester.nut"
		}
	}
	"WANDERER+HORDE_WANDERER" {
		"SelectionWeight" "3"
		"NPC" {
			"AlienClass" "asw_boomer"
			"VScript" "4fun_boomer.nut"
		}
	}
	"WANDERER" {
		"SelectionWeight" "50"
		"NPC" {
			"AlienClass" "asw_drone"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_shieldbug"
			"VScript" "4fun_shieldbug.nut"
		}
	}
	"PRESPAWN" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "npc_antlionguard_cavern"
			"VScript" "4fun_antlionguard_cavern.nut"
		}
	}
	"PACK" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "4fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "4fun_ranger"
		}
		"NPC" {
			"AlienClass" "asw_ranger"
			"VScript" "4fun_ranger"
		}
	}
	"PACK" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug"
		}
		"NPC" {
			"AlienClass" "asw_mortarbug"
			"VScript" "4fun_mortarbug"
		}
	}
	"PACK" {
		"SelectionWeight" "10"
		"NPC" {
			"AlienClass" "asw_parasite"
			"SizeScale" "0.7"
			"VScript" "4fun_parasite"
		}
		"NPC" {
			"AlienClass" "asw_parasite"
			"SizeScale" "1.3"
			"VScript" "4fun_parasite"
		}
	}
}"CHALLENGE" {
	"name"	"[4fun]+[Give Me the Power]"
	"description"	"Âßù„ÇÜƒÅÁºÅÂã≠Êï±Èêú‚ïÅÓÜç<ÈçóÊ•ÅÊüü>ÈçöÂ†ùËãü,Èêú‚ïÅÓÜç<J K>ÊµºÊ®∫ÂØ≤ÈäÜÂÇöÓõßÈèàÂ§êÊ£∂Ê£∞Ê®øÓá¨ÈçôÂ∂âÓõ≠Èîõ?

	"convars" {
		rd_spawn_ammo					"0"
		//rd_weapon_on_ground_time          	  	"360"
		rd_weapons_regular_allowed "4 6 8 16"
		rd_weapons_regular_allowed_inverted 0
		rd_weapons_extra_allowed "1 2 4 13"
		rd_weapons_extra_allowed_inverted 0
		rd_weapon_requirement_override 1
		rd_techreq 0
		rd_hackall 1
		rd_weapons_regular_class_unrestricted "1 2 3 15"
		rd_weapons_extra_class_unrestricted 11
		"rd_biomass_ignite_from_explosions"		"1"
		rd_weapons_show_hidden                                    "0"
		"sk_max_asw_rg"					"2"
		//"rd_biomass_ignite_from_flares"			"1"
		rd_ready_mark_override 1
		//"rd_weapon_on_ground_time"          	  	"10"
		asw_max_alien_batch			"100"
		"rm_destroy_empty_weapon"                       "0"
		//asw_wanderer_override   1   //ÈêöÊ∂ôÊïæ
		asw_marine_ff_absorption 0 //ÈçôÂ¨©ÊøÄ		
	}
}
"CHALLENGE" {
	"name"	"[4fun2]+[Give Me the Power]"
	"description"	"Âßù„ÇÜƒÅÁºÅÂã≠Êï±Èêú‚ïÅÓÜç<ÈçóÊ•ÅÊüü>ÈçöÂ†ùËãü,Èêú‚ïÅÓÜç<J K>ÊµºÊ®∫ÂØ≤ÈäÜÂÇöÓõßÈèàÂ§êÊ£∂Ê£∞Ê®øÓá¨ÈçôÂ∂âÓõ≠Èîõ?

	"convars" {
                 rd_spawn_ammo					"0"
	 rd_weapon_on_ground_time          	  	"10"
		rd_ready_mark_override 1
		rd_weapons_regular_allowed "4 6 8 16"
		rd_weapons_regular_allowed_inverted 0
		rd_weapons_extra_allowed "1 2 4 13"
		rd_weapons_extra_allowed_inverted 0
		rd_weapon_requirement_override 1
		rd_techreq 0
		rd_hackall 1
		rd_weapons_regular_class_unrestricted "1 2 3 15"
		rd_weapons_show_hidden                                   "0"
		"rd_biomass_ignite_from_explosions"		"1"
		"sk_max_asw_rg"					"2"
		//"rd_biomass_ignite_from_flares"			"1"
		//"rd_weapon_on_ground_time"          	  	"20"
		asw_max_alien_batch			"100"
		"rm_destroy_empty_weapon"                       "0"
		//asw_wanderer_override   1   //ÈêöÊ∂ôÊïæ
		asw_marine_ff_absorption 0 //ÈçôÂ¨©ÊøÄ	


		//Ê∂ìÂ≠òÊ§ÇÂ®¥Â¨≠ÁòØ
		//rd_weapons_regular_allowed "1"
		//rd_weapons_regular_allowed_inverted 1		
	}
}
function Update()
{
	local time = Time();
	foreach (classname in ammoEntities){
		local ammo = null;
		while ((ammo = Entities.FindByClassname(ammo, classname)) != null){
			if (!(GetMapName() == "rd-ad4_forbidden_outpost" && classname == "asw_weapon_jump_jet"))
				ammo.Destroy();
		}
	}
	
	if (hWildcat && (wildcatInvisibility + 5 <= time || !IsExtraEquipped("asw_weapon_buff_grenade", hWildcat)))
		toggleWildcatInvis(hWildcat, AiTable, 1, -1);
	
	if (hWolfe && wolfeDouble + 50 <= time){
		hWolfe = null;
	}

	radiancedMobs <- {};
	foreach (marine in marinesTable){
		local hActiveWeapon = NetProps.GetPropEntity(marine, "m_hActiveWeapon");
		if (incDelayTable.rawin(marine)){ //timer for invulnerability after revive
			if (noInstaDeathAfterReviveTable[marine] && incDelayTable[marine] + 2 < time)
				noInstaDeathAfterReviveTable[marine] <- 0;
		}
		
        for (local weapon = marine.FirstMoveChild(); weapon != null; weapon = weapon.NextMovePeer()){
			weaponClassname <- weapon.GetClassname();
			switch(weaponClassname){
				case "asw_weapon_grenade_launcher":
					if (weapon.Clip1() > 1)
						weapon.SetClip1(1);
					break;
				case "asw_weapon_healamp_gun":
				case "asw_weapon_heal_gun":
					if (weapon.Clip1() < weapon.GetMaxClip1() && (!medGuns.rawin(weapon) || medGuns[weapon] + 60 < time)){
						weapon.SetClip1(weapon.GetMaxClip1());
						medGuns[weapon] <- time;
					} else if (weapon.Clip1() == weapon.GetMaxClip1())
						medGuns[weapon] <- time;
					break;
				case "asw_weapon_medrifle":
					if (weapon.Clip2() < weapon.GetMaxClip2() && (!medGuns.rawin(weapon) || medGuns[weapon] + 60 < time)){
						weapon.SetClip2(weapon.GetMaxClip2());
						medGuns[weapon] <- time;
					} else if (weapon.Clip2() == weapon.GetMaxClip2())
						medGuns[weapon] <- time;
					break;
				case "asw_weapon_sniper_rifle":
					if (weapon.GetClips() < 1)
						weapon.SetClips(1);
					break;
				case "asw_weapon_normal_armor":
					if (!(ArmorParticleTable.rawin(marine))){
						ArmorParticleTable[marine] <- ParticleSpawn("", 0, 0, 0, "", "powerup_freeze_bullets", "", "", marine, 0, "Center", 0, "", "");
						ArmorParticleTable[marine].SetOwner(marine);
						local armorScope = GetScrScope(ArmorParticleTable[marine]);
						armorScope.ArmorParticleTable <- ArmorParticleTable;
						armorScope.IsExtraEquipped <- IsExtraEquipped;
						armorScope.Armor <- function(){
							if (self && self.IsValid()){
								local marine = self.GetOwner();
								if (!IsExtraEquipped("asw_weapon_normal_armor", marine)){
									ArmorParticleTable.rawdelete(marine);
									g_ModeScript.ArmorParticleTable <- ArmorParticleTable;
									self.Destroy();
								}
							}
							return 0.5;
						}
						armorScope.Rotate <- function(){
							self.SetLocalAngles(-180, 0, 0);
							self.SetLocalOrigin(Vector(0,0,15));
							self.DisconnectOutput("OnUser1", "Rotate");
						}
						ArmorParticleTable[marine].ConnectOutput("OnUser1", "Rotate");
						EntFireByHandle(ArmorParticleTable[marine], "FireUser1", "", 0, self, self);
						ArmorParticleTable[marine].Spawn();
						ArmorParticleTable[marine].Activate();
						AddThinkToEnt(ArmorParticleTable[marine], "Armor");
					}
					break;
				case "asw_weapon_flashlight":
					if (marinesTable.rawin(marine) && isFlashlightActive.rawin(weapon) && isFlashlightActive[weapon] && radianceCD + 1 < time){
						local hNearEnt = null;
						local marineOrigin = marine.GetOrigin() + Vector(0,0,30);
						while ((hNearEnt = Entities.FindInSphere(hNearEnt, marineOrigin, 400)) != null){
							if (hNearEnt.IsValid() && hNearEnt.IsAlien()){
								if (TraceLine(marineOrigin, hNearEnt.GetOrigin(), null) >= 1){
									radiancedMobs[hNearEnt] <- hNearEnt;
								}
							}
						}
						ParticleSpawn(1, 0, 0, 0, "", "mortar_grenade_open_radius", "", "", marine, 0, "Center", 0, "", "");
					}
					break;
				case "asw_weapon_medkit":
					if (weapon.Clip1() == 1 && isawaliable.rawin(weapon) && !(isawaliable[weapon]))
						isawaliable[weapon] <- true;
					break;
				case "asw_weapon_stim":
					if (weapon.Clip1() == 1 && isawaliable.rawin(weapon) && !(isawaliable[weapon]))
						isawaliable[weapon] <- true;
					break;
				default: break;
			}
			
			//----------------------------------WEAPONS REGEN-------------------------------------|
			if (!("GetMaxClip1" in weapon))
				continue;
			
			local maxClip1 = 0;
			if (weaponClassname in ammoCount)
				maxClip1 = ammoCount[weaponClassname];
			else maxClip1 = weapon.GetMaxClip1();
			
			if (weapon.Clip1() > maxClip1)
				weapon.SetClip1(maxClip1);

			if (maxClip1 <= 0)
				continue;
			
			if (weaponClassname in infWeapon && weapon.Clip1() < maxClip1){
				weapon.SetClip1(maxClip1);
			}
			
            if (weaponClassname in regenInterval1 && weapon.Clip1() < maxClip1){
                if (!(regenWeaponTable1.rawin(weapon)) || !(lastClip1.rawin(weapon)) || weapon.Clip1() != lastClip1[weapon]){
                    regenWeaponTable1[weapon] <- time;
					lastClip1[weapon] <- weapon.Clip1();
				}
				
				local interval1 = regenInterval1[weaponClassname];
				if (weaponClassname == "asw_weapon_buff_grenade" && lastAmp.rawin(weapon)){
					interval1 = regenInterval1[lastAmp[weapon]];
				}
				
                if (weapon.Clip1() < maxClip1 && regenWeaponTable1[weapon] + interval1 < time){
                    weapon.SetClip1(weapon.Clip1() + 1);
					regenWeaponTable1[weapon] <- time;
                    lastClip1[weapon] <- weapon.Clip1();
					if (weaponClassname == "asw_weapon_buff_grenade"){
						lastAmp.rawdelete(weapon);
					}
                }
            }
			
			//-----------------------------------UNDERSLUNG REGEN--------------------------------------|
			if (!("GetMaxClip2" in weapon))
				continue;

			local maxClip2 = 0;
			if (weaponClassname in undCount)
				maxClip2 = undCount[weaponClassname];
			else maxClip2 = weapon.GetMaxClip2();

			if (weapon.Clip2() > maxClip2)
				weapon.SetClip2(maxClip2);
			
			if (maxClip2 <= 0)
				continue;
			
			if (weaponClassname in regenInterval2 && weapon.Clip2() < maxClip2){
				if (!(regenWeaponTable2.rawin(weapon)) || !(lastClip2.rawin(weapon)) || weapon.Clip2() != lastClip2[weapon]){
					regenWeaponTable2[weapon] <- time;
					lastClip2[weapon] <- weapon.Clip2();
				}
				
				local interval2 = regenInterval2[weaponClassname];
				
				if (weapon.Clip2() < maxClip2 && regenWeaponTable2[weapon] + interval2 < time){
					weapon.SetClip2(weapon.Clip2() + 1);
					regenWeaponTable2[weapon] <- time;
					lastClip2[weapon] = weapon.Clip2();
				}
			}
        }
		
		//-------------------------------------CHAINSAW------------------------------------------|

		if (chainsaw.rawin(marine) && ((hActiveWeapon && hActiveWeapon.GetClassname() == "asw_weapon_chainsaw"
			&& NetProps.GetPropInt(hActiveWeapon, "m_fireState") == 0)
			|| (!hActiveWeapon) || (hActiveWeapon && hActiveWeapon.GetClassname() != "asw_weapon_chainsaw"))){
			chainsaw[marine].StopSound("ASW_Chainsaw.attackOn");
			chainsaw[marine].EmitSound("ASW_Chainsaw.Stop");
			DoEntFire("!self", "Kill", "", 0, null, particleChainsawTable[chainsaw[marine]]);
			particleChainsawTable.rawdelete(chainsaw[marine]);
			DoEntFire("!self", "Kill", "", 0, null, chainsaw[marine]);
			chainsaw.rawdelete(marine);
		}
    }
	//-------------------------------------FLASHLIGHT------------------------------------------|
	if (radianceCD + 1 < time){
		if (radiancedMobs.len() > 0){
			foreach (alien in radiancedMobs){
				alien.Ignite(1.5);
				if(alien.GetClassname() == "asw_drone"){
					alien.TakeDamage(15, 8, null);
				} else alien.TakeDamage(alien.GetMaxHealth()/40, 8, null);
			}
		}
		radianceCD <- time;
	}
	
	return 0.5;
}/*
local target = Entities.CreateByClassname("info_target");
target.SetOwner(marine);
target.SetName("0fun_mortarthink");
local targetScope = GetScrScope(target);
targetScope.LaunchVector <- LaunchVector;
targetScope.bAttackedByShieldbug <- bAttackedByShieldbug;
targetScope.hMortarProp <- hMortarProp;
targetScope.delay <- Time() - 1.8;
targetScope.max <- max;
targetScope.mortarShot <- mortarShot;
AddThinkToEnt(target, "mortarShot");
*/
function mortarShot(){
	if (!self || !self.IsValid())
		return;

	local marine = self.GetOwner();
	if (marine && marine.IsValid()){
		if (!marine.IsInhabited()){
			local flHealth = ((marine.GetHealth().tofloat()*100)/marine.GetMaxHealth().tofloat())/100;
			marine.SetMaxHealth(marine.GetMaxHealth()/2);
			marine.SetHealth(marine.GetMaxHealth().tofloat()*flHealth);
			if (isawaliable[marine] == "male")
				marine.SetModel("models/swarm/marine/marine.mdl");
			else marine.SetModel("models/swarm/marine/femalemarine.mdl");
			marine.SetSize(Vector(-13,-13,0), Vector(13,13,72));
			NetProps.SetPropFloat(marine, "m_flModelScale", 1);

			if (hMortarProp.rawin(marine)){
				hMortarProp[marine].Destroy();
				hMortarProp.rawdelete(marine);
				NetProps.SetPropInt(marine, "movetype", 3);
			}

			self.Destroy();
			return;
		}

		if (marine.GetModelName() != "models/aliens/mortar/mortar.mdl"){
			self.Destroy();
			return;
		}

		local hWeapon = NetProps.GetPropEntity(marine, "m_hActiveWeapon");
		local isSpacePressed = NetProps.GetPropInt(marine, "m_bFaceMeleeYaw");
		local isShiftPressed = NetProps.GetPropInt(marine, "m_bWalking");

		if (hWeapon && marine.GetModelName() == "models/aliens/mortar/mortar.mdl"){
			marine.DropWeapon(0);
			marine.DropWeapon(1);
		}

		if (isShiftPressed && delay + 1.21 <= Time() && !isSpacePressed && !hMortarProp.rawin(marine)){
			NetProps.SetPropFloat(marine, "m_flModelScale", 0);
			NetProps.SetPropInt(marine, "movetype", 0);

			hMortarProp[marine] <- Entities.CreateByClassname("asw_mortarbug");//prop_dynamic "in" +300 and visual issures
			g_ModeScript.hMortarProp <- hMortarProp;
			DoEntFire("!self", "SetMoveClone", "!activator", 0,  marine, hMortarProp[marine]);
			hMortarProp[marine].__KeyValueFromString("spawnflags", "4096");
			local uniqueString = UniqueString();
			hMortarProp[marine].__KeyValueFromString("targetname", uniqueString);

			local scripted_sequence = Entities.CreateByClassname("scripted_sequence");
			scripted_sequence.__KeyValueFromString("spawnflags", "192");
			scripted_sequence.__KeyValueFromString("m_iszEntity", uniqueString);
			scripted_sequence.__KeyValueFromString("m_iszPlay", "mortar_death_elec");
			scripted_sequence.__KeyValueFromString("m_iszPostIdle", "Idle");
			EntFireByHandle(scripted_sequence, "BeginSequence", "", 0, self, self);
			DoEntFire("!self", "Kill", "", 1.2,  null, scripted_sequence);

			hMortarProp[marine].Spawn();
			hMortarProp[marine].SetSize(Vector(0,0,0), Vector(0,0,0));
			hMortarProp[marine].SetOrigin(marine.GetOrigin());
			NetProps.SetPropFloat(hMortarProp[marine], "m_flModelScale", (marine.GetMaxHealth().tofloat()/100)/2 + 0.2);
			hMortarProp[marine].SetOwner(marine);
			local angles = marine.GetAngles();
			hMortarProp[marine].SetAngles(angles.x, angles.y, angles.z);
			hMortarProp[marine].ValidateScriptScope();
			local propScope = hMortarProp[marine].GetScriptScope();
			propScope.hMortarProp <- hMortarProp;
			propScope.StopAnimation <- function(){
				if (self && self.IsValid()){
					if (self.GetOwner() && self.GetOwner().IsValid()){
						marine <- self.GetOwner();
						NetProps.SetPropFloat(marine, "m_flModelScale", (marine.GetMaxHealth().tofloat()/100)/2 + 0.2);
						if (marine.IsInhabited()){
							NetProps.SetPropInt(marine, "movetype", 2);
						} else NetProps.SetPropInt(marine, "movetype", 3);
					}
					hMortarProp.rawdelete(self.GetOwner());
					g_ModeScript.hMortarProp <- hMortarProp;
					self.Destroy();
				}
			}
			hMortarProp[marine].ConnectOutput("OnUser1", "StopAnimation");
			EntFireByHandle(hMortarProp[marine], "FireUser1", "", 1.2, self, self);
			delay <- Time();
			hMortarProp[marine].EmitSound("ASW_MortarBug.OnFire");
			local particle = Entities.CreateByClassname("info_particle_system");
			particle.__KeyValueFromString("effect_name", "impact_mortar_preattack");
			particle.__KeyValueFromString("start_active", "1");
			DoEntFire("!self", "SetParent", "!activator", 0, hMortarProp[marine], particle);
			DoEntFire("!self", "SetParentAttachment", "attach_spit", 0, hMortarProp[marine], particle);
			DoEntFire("!self", "Kill", "", 1, null, particle);
			particle.Spawn();
			particle.Activate();
			//To do
		}

		if (isSpacePressed && !isShiftPressed){
			NetProps.SetPropInt(marine, "m_bFaceMeleeYaw", 0);
			if (bAttackedByShieldbug){
				bAttackedByShieldbug <- false;
				g_ModeScript.bAttackedByShieldbug <- bAttackedByShieldbug;
				return 0.1;
			}
			if (delay + 1.8 <= Time()){
				NetProps.SetPropFloat(marine, "m_flModelScale", 0);
				NetProps.SetPropInt(marine, "movetype", 0);

				hMortarProp[marine] <- Entities.CreateByClassname("asw_mortarbug");
				g_ModeScript.hMortarProp <- hMortarProp;
				DoEntFire("!self", "SetMoveClone", "!activator", 0,  marine, hMortarProp[marine]);
				hMortarProp[marine].__KeyValueFromString("spawnflags", "4096");
				local uniqueString = UniqueString();
				hMortarProp[marine].__KeyValueFromString("targetname", uniqueString);

				local scripted_sequence = Entities.CreateByClassname("scripted_sequence");
				scripted_sequence.__KeyValueFromString("spawnflags", "192");
				scripted_sequence.__KeyValueFromString("m_iszEntity", uniqueString);
				scripted_sequence.__KeyValueFromString("m_iszPlay", "spit");
				scripted_sequence.__KeyValueFromString("m_iszPostIdle", "Idle");
				EntFireByHandle(scripted_sequence, "BeginSequence", "", 0, self, self);
				DoEntFire("!self", "Kill", "", 1.7,  null, scripted_sequence);

				hMortarProp[marine].Spawn();
				hMortarProp[marine].SetSize(Vector(0,0,0), Vector(0,0,0));
				hMortarProp[marine].SetOrigin(marine.GetOrigin());
				NetProps.SetPropFloat(hMortarProp[marine], "m_flModelScale", (marine.GetMaxHealth().tofloat()/100)/2 + 0.2);
				hMortarProp[marine].SetOwner(marine);
				local angles = marine.GetAngles();
				hMortarProp[marine].SetAngles(angles.x, angles.y, angles.z);
				hMortarProp[marine].ValidateScriptScope();
				local propScope = hMortarProp[marine].GetScriptScope();
				propScope.LaunchVector <- LaunchVector;
				propScope.target <- self;
				propScope.hMortarProp <- hMortarProp;
				propScope.max <- max;
				propScope.Shot <- function(){
					if (self && self.IsValid()){
						if (self.GetOwner() && self.GetOwner().IsValid()){
							local marine = self.GetOwner();
							marine.EmitSound("ASW_MortarBug.Spit");

							local GrenadeSpawn = function(marine){
								local hGrenadeCluster = Entities.CreateByClassname("asw_mortarbug_shell");
								hGrenadeCluster.SetOrigin(marine.GetOrigin() + marine.GetForwardVector()*10 + Vector(0, 0, 120));
								hGrenadeCluster.Spawn();
								hGrenadeCluster.Activate();
								hGrenadeCluster.SetForwardVector(marine.GetForwardVector());
								NetProps.SetPropFloat(hGrenadeCluster, "m_flModelScale", 2);
								hGrenadeCluster.SetName("0fun_stim_mutation_mortarbug_shell");
								hGrenadeCluster.SetOwner(marine);
								return hGrenadeCluster;
							}

							local TrueExplosion = function(grenade){
								local explosion = Entities.CreateByClassname("env_explosion");
								explosion.SetOwner(grenade.GetOwner());
								explosion.__KeyValueFromInt("iMagnitude", 100);
								explosion.__KeyValueFromInt("spawnflags", 1916);
								explosion.__KeyValueFromString("targetname", "0fun_mortar_explosion");
								explosion.__KeyValueFromInt("iRadiusOverride", 350);
								DoEntFire("!self", "Kill", "", 10, null, explosion);
								return explosion;
							}

							local SetThinkFunc = function(explosion, hGrenadeCluster){
								explosion.ValidateScriptScope();
								local explosionScope = explosion.GetScriptScope();
								explosionScope.hGrenadeCluster <- hGrenadeCluster;
								explosionScope.bTrue <- true;
								explosionScope.func <- function(){
									if (!bTrue)
										return;
									if (hGrenadeCluster && hGrenadeCluster.IsValid()){
										if (hGrenadeCluster.GetOrigin() + Vector(0, 0, 25) != self.GetOrigin())
											self.SetOrigin(hGrenadeCluster.GetOrigin() + Vector(0, 0, 25));
									} else {
										DoEntFire("!self", "Explode", "", 0, null, self);
										DoEntFire("!self", "Kill", "", 0.5, null, self);
										bTrue = false;
									}
									return 0.1;
								}
								AddThinkToEnt(explosion, "func");
								return explosion;
							}

							local player = null;
							local VecCrosshairOrigin = null;
							while((player = Entities.FindByClassname(player, "player")) != null){
								local m_hMarine = NetProps.GetPropEntity(player, "m_hMarine");
								if (m_hMarine != null && m_hMarine == marine)
									VecCrosshairOrigin = NetProps.GetPropVector(player, "m_vecCrosshairTracePos");
							}

							local marinePos = marine.GetOrigin();
							local hGrenadeCluster = GrenadeSpawn(marine);
							local hGrenadeCluster2 = GrenadeSpawn(marine);
							local hGrenadeCluster3 = GrenadeSpawn(marine);
							local explosion = TrueExplosion(hGrenadeCluster);
							local explosion2 = TrueExplosion(hGrenadeCluster2);
							local explosion3 = TrueExplosion(hGrenadeCluster3);

							SetThinkFunc(explosion, hGrenadeCluster);
							SetThinkFunc(explosion2, hGrenadeCluster2);
							SetThinkFunc(explosion3, hGrenadeCluster3);

							hGrenadeCluster.SetVelocity(LaunchVector(marinePos, VecCrosshairOrigin, 400.0, 1.2));
							hGrenadeCluster2.SetVelocity(LaunchVector(marinePos, VecCrosshairOrigin, 300.0, 1.4));
							hGrenadeCluster3.SetVelocity(LaunchVector(marinePos, VecCrosshairOrigin, 500.0, 1.0));
						}

						self.DisconnectOutput("OnUser1", "Shot");
					}
				}

				propScope.StopAnimation <- function()
				{
					if (self && self.IsValid()){
						if (self.GetOwner() && self.GetOwner().IsValid()){
							local marine = self.GetOwner();
							NetProps.SetPropFloat(marine, "m_flModelScale", (marine.GetMaxHealth().tofloat()/100)/2 + 0.2);
							if (marine.IsInhabited()){
								NetProps.SetPropInt(marine, "movetype", 2);
							} else NetProps.SetPropInt(marine, "movetype", 3);
						}
						self.DisconnectOutput("OnUser2", "Shot");
						hMortarProp.rawdelete(self.GetOwner());
						g_ModeScript.hMortarProp <- hMortarProp;
						self.Destroy();
					}
				}

				hMortarProp[marine].ConnectOutput("OnUser1", "Shot");
				hMortarProp[marine].ConnectOutput("OnUser2", "StopAnimation");
				EntFireByHandle(hMortarProp[marine], "FireUser1", "", 0.65, self, self);
				EntFireByHandle(hMortarProp[marine], "FireUser2", "", 1.75, self, self);
				delay <- Time();
			}
		}
	} else self.Destroy();

	return 0.1;
}
function Delay(){
	arrIncludeScriptClasses <- ["asw_ranger", "asw_parasite", "asw_harvester", "asw_mortarbug", "asw_shieldbug", "asw_boomer", "npc_antlionguard_cavern"];
	foreach (classname in arrIncludeScriptClasses){ //does't work with parasite?
		IncludeScriptToPrespawnedAliens(classname);
	}
	
	local hAlien = null;
	while ((hAlien = Entities.FindByClassname(hAlien, "asw_drone_uber")) != null){
		hAlien.ValidateScriptScope();
		local string = "";
		switch(RandomInt(0,5)){
			case 0:
				string = "0fun_drone_brown"
				break;
			case 1:
				string = "0fun_drone_explosive"
				break;
			case 2:
				string = "0fun_drone_giant"
				break;
			case 3:
				string = "0fun_drone_green"
				break;
			case 4:
				string = "0fun_drone_pink"
				break;
			case 5:
				string = "0fun_drone_yellow"
				break;
			default: break;
		}
		hAlien.GetScriptScope().IncludeScript(string);
	}
	
	self.Destroy();
	return;
}

Timer(1, Delay).IncludeScriptToPrespawnedAliens <- function(sClass){
	local alien = null;
	while ((alien = Entities.FindByClassname(alien, sClass)) != null){
		alien.ValidateScriptScope();
		alien.GetScriptScope().IncludeScript("0fun_" + alien.GetClassname().slice(4));
	}
	return;
}

local hSpawner = null;
while ((hSpawner = Entities.FindByClassname(hSpawner, "asw_spawner")) != null){
	local sAlienClass = hSpawner.GetKeyValue("AlienClass");
	switch(sAlienClass){
		case "0":
		case "1":
			hSpawner.ValidateScriptScope();
			hSpawner.GetScriptScope().RandomSize <- function(){
				if (self)
					self.__KeyValueFromString("sizescalesp", RandomFloat(0.8, 1.4).tostring());
				return;
			}
			hSpawner.ConnectOutput("OnSpawned", "RandomSize");
			break;
		case "2":
		case "7":	
			hSpawner.ValidateScriptScope();
			hSpawner.GetScriptScope().RandomSize <- function(){
				if (self)
					self.__KeyValueFromString("sizescalesp", RandomFloat(0.7, 0.9).tostring());
				return;
			}
			hSpawner.ConnectOutput("OnSpawned", "RandomSize");
			break;
		case "3":	
			hSpawner.__KeyValueFromString("alien_vscripts", "0fun_shieldbug.nut");
			break;
		case "5":
			if (map == "rd-lan2_sewer"){
				hSpawner.__KeyValueFromString("healthbonussp", "1000");
				hSpawner.__KeyValueFromString("speedscalesp", "0.3");
				hSpawner.__KeyValueFromString("sizescalesp", RandomFloat(2.4, 2.6).tostring());
			} else {
				hSpawner.ValidateScriptScope();
				hSpawner.GetScriptScope().RandomSize <- function(){
					if (self)
						self.__KeyValueFromString("sizescalesp", RandomFloat(0.8, 1.4).tostring());
					return;
				}
				hSpawner.ConnectOutput("OnSpawned", "RandomSize");
			}
			break;
		case "6":	
			hSpawner.__KeyValueFromString("alien_vscripts", "0fun_harvester.nut");
			break;
		case "9":	
			hSpawner.__KeyValueFromString("alien_vscripts", "0fun_boomer.nut");
			break;
		case "10":	
			hSpawner.__KeyValueFromString("alien_vscripts", "0fun_ranger.nut");
			break;
		case "11":	
			hSpawner.__KeyValueFromString("alien_vscripts", "0fun_mortarbug.nut");
			break;
		case "13":	
			local string = "";
			switch(RandomInt(0,5)){
				case 0:
					string = "0fun_drone_brown.nut"
					break;
				case 1:
					string = "0fun_drone_explosive.nut"
					break;
				case 2:
					string = "0fun_drone_giant.nut"
					break;
				case 3:
					string = "0fun_drone_green.nut"
					break;
				case 4:
					string = "0fun_drone_pink.nut"
					break;
				case 5:
					string = "0fun_drone_yellow.nut"
					break;
				default: break;
			}
			hSpawner.__KeyValueFromString("alien_vscripts", string);
			break;
		case "14":
		case "15":
			hSpawner.__KeyValueFromString("alien_vscripts", "0fun_antlionguard_cavern.nut");
			break;
		default: break;
	}
}if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

hp <- 6000;
size <- 1.6;
healthbarSize <- "2";
up <- 150;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

if (self.GetName() != ""){
	hp = 9000;
	size = 2;
	up = 200;
	healthbarSize = "4";
}

function Delay(){
	self.SetHealth(hp);
	self.SetMaxHealth(hp);
	self.__KeyValueFromString("flinchable", "0");
	self.__KeyValueFromString("speedscale", "0.6");
	EntFireByHandle(self, "Color", "114 84 23", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "0 170 85 210", healthbarSize, "0", "1", "", 0, 0, up);function AddHealthBar(hEntitie, sColor, sScale, sStartDisabled, sHideatfullhealth, sAttachment, x, y, z){
	local healthbar = Entities.CreateByClassname("asw_health_bar");
	healthbar.__KeyValueFromString("color", sColor);
	healthbar.__KeyValueFromString("StartDisabled", sStartDisabled);
	healthbar.__KeyValueFromString("scale", sScale);
	healthbar.__KeyValueFromString("hideatfullhealth", sHideatfullhealth);
	healthbar.Spawn();
	healthbar.Activate();
	DoEntFire("!self", "SetParent", "!activator", 0, hEntitie, healthbar);
	if (sAttachment != ""){
		DoEntFire("!self", "SetParentAttachment", sAttachment, 0, hEntitie, healthbar);
		if (x || y || z){
			healthbar.ValidateScriptScope();
			local hbScope = healthbar.GetScriptScope();
			hbScope.x <- x;
			hbScope.y <- y;
			hbScope.z <- z;
			hbScope.rotate <- function(){
				self.SetLocalOrigin(Vector(x,y,z));
				self.DisconnectOutput("OnUser4", "rotate");
				return;
			}
			healthbar.ConnectOutput("OnUser4", "rotate");
			EntFireByHandle(healthbar, "FireUser4", "", 0, self, self);
		}
	} else healthbar.SetOrigin(hEntitie.GetOrigin() + Vector(x,y,z));
	return healthbar;
}function MoveForward(){
	local selfOrigin = self.GetOrigin();
	local hNearEnt = null;
	while ((hNearEnt = Entities.FindInSphere(hNearEnt, selfOrigin, 55)) != null){
		local name = hNearEnt.GetName();
		if (name != "" && (name == "hangerdoor_Right" || name == "hangerdoor_Left" 
			|| name == "hangerdoor_Left_top" || name == "hangerdoor_Right_top" || hNearEnt.GetClassname() == "asw_door")){
			StopLoop(self);
			return 1;
		}
	}
	
	local hNearEnt = null;
	while ((hNearEnt = Entities.FindInSphere(hNearEnt, selfOrigin, 270)) != null){
		if (hNearEnt.IsAlien() || hNearEnt.GetClassname() == "prop_physics")
			hNearEnt.TakeDamage(2000, 256, attacker);
	}
	
	if ((TraceLine(selfOrigin, selfOrigin + step, null) != 1)){
		StopLoop(self);
		return 1;
	}

	self.SetOrigin(selfOrigin + step);
	
	return 0.1;
}

function smokeTrailSetOrigin(){
	if (self && self.IsValid()){
		self.SetLocalOrigin(Vector(9,0,2));
		self.SetLocalAngles(-90,0,0);
		self.DisconnectOutput("OnUser1", "smokeTrailSetOrigin");
	}
	return;
}

function ReloadParticle(sEffectName, bSmoke, sAttachName, hAttachHandle){
	if (smokeTrail && smokeTrail.IsValid())
		smokeTrail.Destroy();
	smokeTrail = Entities.CreateByClassname("info_particle_system");
	smokeTrail.__KeyValueFromString("effect_name", sEffectName);
	smokeTrail.__KeyValueFromString("start_active", "1");
	smokeTrail.Spawn();
	smokeTrail.Activate();
	smokeTrail.ValidateScriptScope();
	smokeTrail.GetScriptScope().smokeTrailSetOrigin <- smokeTrailSetOrigin;
	smokeTrail.ConnectOutput("OnUser1", "smokeTrailSetOrigin");
	DoEntFire("!self", "SetParent", "!activator", 0, hAttachHandle, smokeTrail);
	DoEntFire("!self", "SetParentAttachment", sAttachName, 0, hAttachHandle, smokeTrail);
	EntFireByHandle(smokeTrail, "FireUser1", "", 0, self, self);
	smokeTrailspawned = bSmoke;
	return;
}

function BfgReload(){
	if (weapon && weapon.IsValid() && weapon.Clip1() == 0){
		local marine = weapon.GetOwner();
		if (marine && marine.IsValid()){
			if (weaponTime + i < Time()){
				weapon.SetClip1(1);
				weapon.EmitSound("ASW_Rifle.ReloadC");
				StopTimer("BfgReload", smokeTrail);
				return;
			}
			marine.EmitSound("ASWComputer.NumberAligned");
			local hActiveWeapon = NetProps.GetPropEntity(marine, "m_hActiveWeapon");
			if (hActiveWeapon && hActiveWeapon == weapon){
				if (!smokeTrailspawned)
					ReloadParticle("jumpjet_smoke_trail", true, "muzzle", weapon);
			} else if (smokeTrailspawned || !smokeTrail)
				ReloadParticle("grenade_freeze_main_trail", false, "jump_jet_r", marine);
		} else StopTimer("BfgReload", smokeTrail);
	} else StopTimer("BfgReload", smokeTrail);
	return;
}

function StopTimer(sOutput, hToDestroy){
	if (hToDestroy && hToDestroy.IsValid())
		hToDestroy.Destroy();
	self.DisconnectOutput("OnTimer", sOutput);
	self.Destroy();
	return;
}

function BfgRecharging(weapon, time){
	local timerScope = Timer(0.3, BfgReload);
	timerScope.weapon <- weapon;
	timerScope.weaponTime <- Time();
	timerScope.smokeTrail <- null;
	timerScope.i <- time;
	timerScope.smokeTrailspawned <- false;
	timerScope.ReloadParticle <- ReloadParticle;
	timerScope.smokeTrailSetOrigin <- smokeTrailSetOrigin;
	timerScope.StopTimer <- StopTimer;
	return;
}

function StopLoop(self){
	self.StopSound("ASW_Tesla_Laser.Loop");
	self.EmitSound("ASW_Tesla_Laser.Stop");
	DoEntFire("!self", "Kill", "", 0, null, self);
	return;
}

function BfgShot(){
	if (weapon && marine && marine.IsValid()){
		local hActiveWeapon = NetProps.GetPropEntity(marine, "m_hActiveWeapon");
		if (!hActiveWeapon || hActiveWeapon != weapon){
			StopTimer("BfgShot", bfgBall);
			return;
		}
	} else {
		StopTimer("BfgShot", bfgBall);
		return;
	}
	
	if (flStartFire < 0.6){
		flStartFire += 0.1;
		return;
	}
	IncludeScript("0fun_ParticleSpawn.nut");
	local vecWeaponOrigin = weapon.GetOrigin();
	local particle = ParticleSpawn("", 0, 0, 0, "", "stungrenade_core_copy", "ASW_Tesla_Laser.Loop", "", "", 0, "", 0, "", "");
	local angles = MarineAngles(marine);
	particle.SetAngles(angles.x, angles.y, 0);
	local fv = particle.GetForwardVector();
	particle.SetOrigin(vecWeaponOrigin + fv*150 + Vector(0, 0, 50));
	particle.ValidateScriptScope();
	local particleScope = particle.GetScriptScope();
	particleScope.attacker <- marine;
	particleScope.StopLoop <- StopLoop;
	particleScope.MoveForward <- MoveForward;
	particleScope.step <- fv*40;
	AddThinkToEnt(particle, "MoveForward");
	
	ParticleSpawn(1, 0, 0, 0, particle, "vindicator_grenade_warp", "Weapon_CombineGuard.Special1", "", "", 0, "", 0, "", "");
	
	marine.EmitSound("NPC_SScanner.DeployMine");
	marine.Knockdown(Vector(0,0,200) - marine.GetForwardVector()*200);
	weapon.EmitSound("NPC_SScanner.Die");
	StopTimer("BfgShot", bfgBall);
	return;
}

function EntSetLocalOrigin(){
	if (!self)
		return;
	self.SetLocalOrigin(Vector(7,0,3));
	self.DisconnectOutput("OnUser1", "EntSetLocalOrigin");
	return;
}if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

hp <- 26000;
size <- RandomFloat(1.2,1.4);
healthbarSize <- "3";
up <- 10;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 18000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 20000;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 22000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 23000;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 25000;
}

if (self.GetName() != ""){
	hp = 28000;
	size = 1.6;
	up = 20;
	healthbarSize = "4";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.8");
	self.__KeyValueFromString("flinchable", "0");
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "255 255 128 210", healthbarSize, "0", "1", "attach_top", 0, up, 0);
if (!self || !self.IsValid())
	return;

IncludeScript("0fun_ParticleSpawn.nut");
IncludeScript("0fun_asw_health_bar");

function BurnFunc(){
	if (self && self.IsValid()){
		local i = 0;
		local selfOrigin = self.GetOrigin();
		if (self.GetKeyValue("rendercolor") != "255 47 250 255"){
			local hMarineTarget = null;
			while((hMarineTarget = Entities.FindByClassnameWithin(hMarineTarget, "asw_marine", selfOrigin, 300)) != null){
				if (hMarineTarget.IsValid()){
					if (i == 2)
						break;
					if ((hMarineTarget.GetMarineName() == "Wildcat" && NetProps.GetPropFloat(hMarineTarget, "m_flModelScale") == 0) 
						|| ((TraceLine(selfOrigin, hMarineTarget.GetOrigin(), null) != 1)))
						continue;
					hMarineTarget.TakeDamage(5, 8, self);
					local hParticleTarget = Entities.CreateByClassname("info_target");
					hParticleTarget.__KeyValueFromString("spawnflags", "2");
					DoEntFire("!self", "SetParent", "!activator", 0, hMarineTarget, hParticleTarget);
					if (hMarineTarget.GetModelName() == "models/aliens/mortar/mortar.mdl")
						DoEntFire("!self", "SetParentAttachment", "attach_spit", 0, hMarineTarget, hParticleTarget);
					else DoEntFire("!self", "SetParentAttachment", "Center", 0, hMarineTarget, hParticleTarget);
					DoEntFire("!self", "Kill", "", 0.4, null, hParticleTarget);
					ParticleSpawn(0.3, 0, 0, 0, self, "vortigaunt_beam", "NPC_Antlion.Distracted", "NPC_Antlion.Distracted", self, 0, "", 0, hParticleTarget, self);
					i += 1;
				}
			}
		} else {
			local hNearEnt = null;
			while ((hNearEnt = Entities.FindInSphere(hNearEnt, self.GetOrigin(), 300)) != null){
				if (hNearEnt.IsValid() && hNearEnt.IsAlien() && hNearEnt != self && hNearEnt.GetHealth() > 0){
					if (i == 4)
						break;
					local hParticleTarget = Entities.CreateByClassname("info_target");
					hParticleTarget.__KeyValueFromString("spawnflags", "2");
					DoEntFire("!self", "SetParent", "!activator", 0, hNearEnt, hParticleTarget);
					
					switch (hNearEnt.GetClassname()){
							case "asw_drone_jumper":
							case "asw_drone_uber":
							case "asw_drone":
								DoEntFire("!self", "SetParentAttachment", "blood_spray", 0, hNearEnt, hParticleTarget);
								break;
							case "asw_buzzer":
								if (hNearEnt.GetModelName() != "models/swarm/buzzer/buzzer.mdl")
									DoEntFire("!self", "SetParentAttachment", "eyes", 0, hNearEnt, hParticleTarget);
								else hParticleTarget.SetOrigin(hNearEnt.GetOrigin());
								break;
							case "asw_shieldbug":
								DoEntFire("!self", "SetParentAttachment", "attach_fountain", 0, hNearEnt, hParticleTarget);
								break;
							case "asw_mortarbug":
								DoEntFire("!self", "SetParentAttachment", "attach_spit", 0, hNearEnt, hParticleTarget);
								break;
							case "asw_shaman":
							case "asw_boomer":
							case "asw_ranger":
								DoEntFire("!self", "SetParentAttachment", "attach_explosion", 0, hNearEnt, hParticleTarget);
								break;
						default: hParticleTarget.SetOrigin(hNearEnt.GetOrigin());
					}
					DoEntFire("!self", "Kill", "", 0.4, null, hParticleTarget);
					ParticleSpawn(0.3, 0, 0, 0, self, "vortigaunt_beam", "NPC_Antlion.Distracted", "NPC_Antlion.Distracted", self, 0, "", 0, hParticleTarget, self);
					i += 1;
					hNearEnt.TakeDamage(1000, 8, self);
				}
			}
		}
	}
	return 0.4;
}

self.SetName("asw_0fun_buzzer");
self.EmitSound("d1_town.LargeFireLoop");
self.EmitSound("d1_town.LargeFireLoop");//volume x2
AddThinkToEnt(self, "BurnFunc");
local particle = ParticleSpawn("", 0, 0, -10, self, "ground_fire_burn2_large", "", "", self, 0, "", 0, "", "");
particle.SetOwner(self);
particle.ValidateScriptScope();
particle.GetScriptScope().thinkFunc <- function(){
	if (self && self.IsValid()){
		local hBuzzer = self.GetOwner();
		DoEntFire("!self", "Stop", "", 1, null, self); //Fix for bug, when particle
		DoEntFire("!self", "Start", "", 0, null, self); //doesn't shows, but it was spawned
		if (hBuzzer && hBuzzer.IsValid()){
			hBuzzer.Ignite(9999);
			hBuzzer.StopSound("ASW_Buzzer.OnFire");
		}
	}
	return 1.01
}
AddThinkToEnt(particle, "thinkFunc");

hp <- 9900;
//size <- 1;
healthbarSize <- "2.5";
up <- 80;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 5000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 6000;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 7000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 8000;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 9000;
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("flinchable", "0");
	self.__KeyValueFromString("flammable", "0");
	self.__KeyValueFromString("freezable", "0");
	self.__KeyValueFromString("teslable", "0");
	self.__KeyValueFromString("speedscale", "0.3");
	EntFireByHandle(self, "Color", "255 250 55", 0, self, self);
	//NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	//self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "255 250 55 210", healthbarSize, "0", "1", "", 0, 0, up);

/*
DoEntFire("!self", "AddOutput", "OnDeath " + sTimerName + ":Kill::0:1", 0, null, self);
DoEntFire("!self", "AddOutput", "OnDeath " + sParticleName + ":Kill::0:1", 0, null, self);
DoEntFire("!self", "AddOutput", "OnDeath " + sParticleTimerName + ":Kill::0:1", 0, null, self);
*/rd_challenge <- Convars.GetStr("rd_challenge");
asw_marine_ff_absorption <- Convars.GetStr("asw_marine_ff_absorption");
asw_blink_charge_time <- 0;

if (rd_challenge == "0fun" || rd_challenge == "0funx" ){
	Convars.SetValue( "rd_medgun_infinite_ammo", 1 );
	Convars.SetValue( "rd_deagle_bigalien_dmg_scale", 1 );
	Convars.SetValue( "asw_skill_vindicator_pellets_base", 25 );
	Convars.SetValue( "asw_skill_accuracy_heavy_rifle_dmg_base", 80 );
	Convars.SetValue( "asw_skill_accuracy_railgun_dmg_base", 20000 );
	Convars.SetValue( "asw_skill_engineering_welding_base", 99 );
	Convars.SetValue( "asw_skill_engineering_sentry_base", 99 );
	Convars.SetValue( "asw_cluster_grenade_child_fuse_max", 1 );
	Convars.SetValue( "asw_skill_grenades_clusters_base", 8 );
	Convars.SetValue( "asw_skill_grenades_cluster_dmg_step", 60 );
	Convars.SetValue( "asw_cluster_grenade_fuse", 5 );
	Convars.SetValue( "asw_cluster_grenade_radius_check_scale", 0.2 );
	Convars.SetValue( "asw_flare_autoaim_radius", 600 );
	Convars.SetValue( "asw_electrified_armor_duration", 60 );
	Convars.SetValue( "asw_marine_fall_damage", 0 );
	Convars.SetValue( "asw_skill_reloading_base", 9 );
	Convars.SetValue( "rd_extinguisher_dmg_amount", 0.1 );
	Convars.SetValue( "rd_extinguisher_freeze_amount", 0.3 );
	Convars.SetValue( "rd_fire_extinguisher_infinite", 1 );
	
	Convars.SetValue( "rd_heavy_rifle_fastfire_duration", 15 );
	Convars.SetValue( "rd_heavy_rifle_fastfire_dmg_scale", 3 );
	
	if (rd_challenge == "0fun"){
		Convars.SetValue( "rd_allow_revive", 1 );
	}else{
		Convars.SetValue( "rd_allow_revive", 1 );
	}
	
	
	if (asw_marine_ff_absorption != "0"){
		Convars.SetValue( "asw_skill_hacking_speed_base", 99 );
		Convars.SetValue( "asw_simple_hacking", 1 );
	} else Convars.SetValue( "rd_marine_ff_fist", 1 );
} else {
	Convars.SetValue( "asw_skill_vindicator_pellets_base", 20 );
	Convars.SetValue( "asw_blink_range", 0 );
	Convars.SetValue( "rd_medgun_infinite_ammo", 1 );
	Convars.SetValue( "asw_skill_accuracy_heavy_rifle_dmg_base", 90 );
	Convars.SetValue( "asw_skill_accuracy_railgun_dmg_base", 99 );
	Convars.SetValue( "asw_skill_engineering_welding_base", 99 );
	Convars.SetValue( "asw_skill_engineering_sentry_base", 99 );
	Convars.SetValue( "asw_skill_engineering_sentry_step", 99 );
	Convars.SetValue( "asw_electrified_armor_duration", 60 );
	Convars.SetValue( "asw_skill_reloading_base", 5 );
	Convars.SetValue( "asw_melee_require_contact", 1 );
	Convars.SetValue( "rd_chainsaw_slows_down", 0 );
	Convars.SetValue( "rd_heavy_rifle_fastfire_duration", 0.1 );
	Convars.SetValue( "rd_heavy_rifle_fastfire_fire_rate_multiplier", 1 );
	Convars.SetValue( "rd_heavy_rifle_fastfire_dmg_scale", 1 );
	Convars.SetValue( "asw_marine_passive_armor_scale", 1 );
	if (asw_marine_ff_absorption == "0"){
		Convars.SetValue( "asw_skill_hacking_speed_base", 5 );
		Convars.SetValue( "asw_skill_hacking_speed_step", 99 );
		Convars.SetValue( "asw_simple_hacking", 99 );
		Convars.SetValue( "rd_health_decrease_interval", 1 );
		Convars.SetValue( "rm_health_decrease_amount", 8 );
		Convars.SetValue("rd_allow_revive", 1);
	}
	if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
		Convars.SetValue( "asw_blink_charge_time", 30 );
		asw_blink_charge_time = 2.2;
	} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
		Convars.SetValue( "asw_blink_charge_time", 30 );
		asw_blink_charge_time = 2.7;
	} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
		Convars.SetValue( "asw_blink_charge_time", 30 );
		asw_blink_charge_time = 3.2;
	} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
		Convars.SetValue( "asw_blink_charge_time", 40 );
		asw_blink_charge_time = 3;
	} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
		Convars.SetValue( "asw_blink_charge_time", 40 );
		asw_blink_charge_time = 3;
	}
}

Convars.SetValue( "rd_hud_hide_clips", 1 );
Convars.SetValue( "rm_destroy_empty_weapon", 0 );
Convars.SetValue( "asw_harvester_new", 0 );
Convars.SetValue( "sk_max_asw_ml", 0 );
Convars.SetValue( "sk_max_asw_p", 0 );
Convars.SetValue( "sk_max_asw_pdw", 0 );
Convars.SetValue( "sk_max_asw_deagle", 0 );
Convars.SetValue( "sk_max_asw_f", 0 );
Convars.SetValue( "sk_max_asw_r", 0 );
Convars.SetValue( "sk_max_asw_asg", 0 );
Convars.SetValue( "sk_max_asw_rg", 0 );
Convars.SetValue( "sk_max_asw_devastator", 0 );
Convars.SetValue( "sk_max_asw_gl", 0 );
Convars.SetValue( "sk_max_asw_tg", 0 );
Convars.SetValue( "sk_max_asw_ag", 0 );
Convars.SetValue( "sk_max_asw_sg", 0 );
Convars.SetValue( "sk_max_asw_hr", 0 );
Convars.SetValue( "sk_max_asw_sniper", 0 );
Convars.SetValue( "sk_max_asw_medrifle", 0 );
Convars.SetValue( "asw_sentry_infinite_ammo", 1 );
Convars.SetValue( "asw_alien_mining_laser_damage_scale", 10 );
Convars.SetValue( "rd_deagle_bigalien_dmg_scale", 0.7 );
Convars.SetValue( "asw_alien_burn_duration", 1.5 );
Convars.SetValue( "asw_fist_passive_damage_scale", 100 );
Convars.SetValue( "asw_skill_autogun_base", 50 );
Convars.SetValue( "asw_skill_accuracy_prifle_dmg_base", 75 );
Convars.SetValue( "asw_skill_accuracy_medrifle_dmg_base", 99 );
Convars.SetValue( "asw_skill_accuracy_pistol_dmg_base", 99 );
Convars.SetValue( "asw_skill_accuracy_pdw_dmg_base", 28 );
Convars.SetValue( "asw_skill_accuracy_deagle_dmg_base", 300 );
Convars.SetValue( "asw_skill_grenades_cluster_dmg_step", 60 );
Convars.SetValue( "asw_night_vision_duration", 5 );
Convars.SetValue( "asw_flare_launch_delay", 0.30 );
Convars.SetValue( "asw_skill_drugs_base", 0 );
Convars.SetValue( "asw_skill_drugs_step", 0 );
Convars.SetValue( "asw_skill_mines_fires_base", 4 );
Convars.SetValue( "asw_skill_mines_fires_step", 0 );
Convars.SetValue( "asw_skill_healing_hps_base", 99 );
Convars.SetValue( "asw_skill_healing_hps_step", 99 );
Convars.SetValue( "asw_skill_mines_duration_base", 40 );
Convars.SetValue( "asw_skill_mines_duration_step", 0 );
Convars.SetValue( "asw_skill_grenades_smart_count_base", 999999 );
Convars.SetValue( "asw_skill_grenades_smart_interval_base", 0.8 );
Convars.SetValue( "asw_skill_grenades_hornet_count_base", 100 );
Convars.SetValue( "asw_skill_grenades_hornet_interval_base", 0.05 );
Convars.SetValue( "rd_alien_instagib", 1 );
Convars.SetValue( "asw_queen_spit_radius", 2800 );
Convars.SetValue( "asw_queen_spit_autoaim_angle", 100 );
Convars.SetValue( "asw_queen_grabber_dmg", -10 );
Convars.SetValue( "asw_queen_grabber_health", 999 );
Convars.SetValue( "sk_asw_boomer_melee_damage_min", 20 );
Convars.SetValue( "sk_asw_boomer_melee_damage_max", 30 );
Convars.SetValue( "sk_asw_boomer_bomb_damage", 70 );
Convars.SetValue( "sk_asw_mortarbug_shell_damage", 70 );
Convars.SetValue( "asw_horde_interval_min", 5 );
Convars.SetValue( "asw_horde_interval_max", 10 );
Convars.SetValue( "asw_batch_interval", 3 );
Convars.SetValue( "asw_max_alien_batch", 3 );
Convars.SetValue( "asw_shaman_aim_ahead_time", 0 );
Convars.SetValue( "asw_shaman_health", 400 );
Convars.SetValue( "rd_alien_speed_scale", 1.66 );
Convars.SetValue( "asw_uber_speed_scale", 1 );
Convars.SetValue( "asw_wanderer_override", 1 );
Convars.SetValue( "asw_parasite_speedboost", 2 );
Convars.SetValue( "asw_harvester_max_critters", 10 );
Convars.SetValue( "asw_harvester_spawn_height", 1 );
Convars.SetValue( "asw_harvester_spawn_interval", 0.1 );
Convars.SetValue( "sk_asw_buzzer_health", 650 );
Convars.SetValue( "asw_shieldbug_speedboost", 2.3 );
Convars.SetValue( "asw_shieldbug_knockdown_force", -10 );
Convars.SetValue( "asw_shieldbug_knockdown_lift", -10 );
Convars.SetValue( "asw_shieldbug_force_defend", 2 );
Convars.SetValue( "asw_shieldbug_defending_speedboost", 2 );
Convars.SetValue( "sk_asw_buzzer_melee_interval", 0 );
Convars.SetValue( "sk_asw_buzzer_melee_dmg", 20 );
Convars.SetValue( "rd_killingspree_time_limit", 99999 );
Convars.SetValue( "asw_marine_death_cam_slowdown", 0 );
Convars.SetValue( "rd_override_allow_rotate_camera", 1 );
Convars.SetValue( "rd_firemine_target_marine", 1 );
Convars.SetValue( "rd_biomass_ignite_from_explosions", 1 );
Convars.SetValue( "rd_hp_regen", 1 );
Convars.SetValue( "asw_skill_reloading_fast_base", 0 );
Convars.SetValue( "asw_skill_reloading_fast_step", 0 );
Convars.SetValue( "asw_skill_reloading_step", 0 );
Convars.SetValue( "asw_marine_death_protection", 0 );
Convars.SetValue( "rm_health_regen_amount", 5 );
Convars.SetValue( "rm_health_regen_interval", 8 );
Convars.SetValue( "rd_bot_strong", 0 );
Convars.SetValue( "asw_sentry_friendly_fire_scale", 0 );
Convars.SetValue( "asw_marine_burn_time_easy", 1 );
Convars.SetValue( "asw_marine_burn_time_hard", 1 );
Convars.SetValue( "asw_marine_burn_time_insane", 1 );
Convars.SetValue( "asw_marine_burn_time_normal", 1 );
Convars.SetValue( "rd_notify_about_out_of_ammo", 0 );
Convars.SetValue( "rd_pistols_min_delay", 0.07 );
Convars.SetValue( "asw_stim_time_scale", 1 );
Convars.SetValue( "asw_difficulty_alien_health_step", 0 );
Convars.SetValue( "asw_difficulty_alien_damage_step", 0.1 );
Convars.SetValue( "asw_adjust_difficulty_by_number_of_marines", 0 );
Convars.SetValue( "asw_queen_health_normal", 80000 );
Convars.SetValue( "asw_queen_health_easy", 70000 );
Convars.SetValue( "asw_queen_health_hard", 90000 );
Convars.SetValue( "asw_queen_health_insane", 100000 );
Convars.SetValue( "rd_sentry_is_attacked_by_aliens", 0 );
Convars.SetValue( "rd_sentry_invincible", 1 );
Convars.SetValue( "rd_queen_hud_suppress_time", 0 );
Convars.SetValue( "rd_slowmo", 0 );
Convars.SetValue( "rd_mininglaser_slows_down", 0 );
Convars.SetValue( "asw_alien_stunned_speed", 0.2 );
Convars.SetValue( "asw_stun_grenade_time", 5 );
Convars.SetValue( "asw_skill_accuracy_heavy_rifle_dmg_step", 0 );
Convars.SetValue( "rd_prespawn_scale", 1 );
Convars.SetValue( "rm_prespawn_num_shieldbugs", 5 );
Convars.SetValue( "rm_prespawn_num_rangers", 10 );
Convars.SetValue( "rm_prespawn_num_mortars", 10 );
Convars.SetValue( "rm_prespawn_num_biomass", 0 );
Convars.SetValue( "rm_prespawn_num_boomers", 5 );
Convars.SetValue( "rm_prespawn_num_uber_drones", 15 );
Convars.SetValue( "rd_allow_afk", 1 );
Convars.SetValue( "rd_carnage_scale", Convars.GetFloat( "asw_skill" ) + 1);

//ÁÅûÁä≥ÊΩÉÁªõÂ§åÈ™á
//local sFileToStringCarnage = FileToString("carnage");
//if (sFileToStringCarnage != "")
	//Convars.SetValue("rd_carnage_scale", sFileToStringCarnage.tointeger());
//else Convars.SetValue( "rd_carnage_scale", 6 );


//Èê™‚ïÇÊ™ø
local sFileToStringBlind = FileToString("blind");
if (sFileToStringBlind == "0")
	Convars.SetValue( "asw_buzzer_poison_duration", 0 );
else Convars.SetValue( "asw_buzzer_poison_duration", 4 );

//Ê∂ì„ÇÜÓÇºÁêöÓÇ£‚Ç¨ÓÅÑÂöÆÈçäÊéîÊÆëÈóÇÊíÆÊÆßÈèÉÂ†ïÊ£ø
// local sFileToStringKnockdown = FileToString("knockdown");
// if (sFileToStringKnockdown == "1")
	// Convars.SetValue( "asw_knockdown_interval", 3 );
// else Convars.SetValue( "asw_knockdown_interval", 0 );

Convars.SetValue( "asw_knockdown_interval", 1.9 );
//ÈçôÂ∂ÑÊøÄ
local sFileToStringFP = FileToString("fp");
if (sFileToStringFP != "" && sFileToStringFP != "0")
	Convars.SetValue("asw_controls", 0);
else if (Convars.GetStr("asw_controls") == "0")
	Convars.SetValue("asw_controls", 1);g_StartTime <- Time();
tProtectionDelay <- g_StartTime + 1;
tScriptDelay <- g_StartTime + 0.2;
radianceCD <- 0;
protectionCD <- 0;
immortalOwner <- null;
vecProtectionBubble <- null;
noff <- false;
bAccess <- true;
bAttackedByShieldbug <- false;
explosedAliensDelay <- g_StartTime;
iDelayKillStucked <- 0;
wildcatInvisibility <- g_StartTime + 5;
wolfeDouble <- g_StartTime + 20;
hWildcat <- null;
hWolfe <- null;
map <- GetMapName();
asw_game_resource <- null;
asw_game_resource = Entities.FindByClassname(asw_game_resource, "asw_game_resource");
bFF <- true;
if (FileToString("ff") == "0")
	bFF = false;

isFlashlightActive <- {};
AiTable <- {};
chainsaw <- {};
particleChainsawTable <- {};
incParticleTable <- {};
incDelayTable <- {};
noInstaDeathAfterReviveTable <- {};
timeforexplosion <- {};
regenWeaponTable1 <- {};
regenWeaponTable2 <- {};
lastClip1 <- {};
lastClip2 <- {};
isawaliable <- {};
MeleeParticleTable <- {};
ArmorParticleTable <- {};
TeslaAliensTable <- {};
hMortarProp <- {};
maxhpTable <- {};
explosedAliens <- [];
marinesTable <- {};
lastAmp <- {};
charmedAliens <- {};
invRollTime <- {};
medGuns <- {};
shotgunTable <- {};

ammoEntities <- [
	"asw_ammo_drop",
	"asw_ammo_rifle",
	"asw_ammo_autogun",
	"asw_ammo_shotgun",
	"asw_ammo_vindicator",
	"asw_ammo_flamer",
	"asw_ammo_pistol",
	"asw_ammo_mining_laser",
	"asw_ammo_railgun",
	"asw_ammo_chainsaw",
	"asw_ammo_pdw",
	"asw_weapon_ammo_satchel",
	"asw_pickup_ammo_satchel",
	"asw_weapon_jump_jet",
	"asw_weapon_bait",
	"asw_weapon_t75",
	"asw_weapon_flechette",
	"asw_weapon_ammo_bag"
];

infWeapon <- {
	asw_weapon_rifle=0
	asw_weapon_vindicator=0
	asw_weapon_prifle=0
	asw_weapon_minigun=0
	asw_weapon_50calmg=0
	asw_weapon_autogun=0
	asw_weapon_deagle=0
	asw_weapon_devastator=0
	asw_weapon_flamer=0
	asw_weapon_mining_laser=0
	asw_weapon_pdw=0
	asw_weapon_pistol=0
	asw_weapon_ricochet=0
	asw_weapon_tesla_gun=0
	asw_weapon_medrifle=0
	asw_weapon_heavy_rifle=0
	asw_weapon_combat_rifle=0
	asw_weapon_stim=0
};

regenInterval1 <- {
	asw_weapon_tesla_trap=15
	asw_weapon_heal_grenade=15
	asw_weapon_electrified_armor=30
	asw_weapon_hornet_barrage=80
	asw_weapon_grenades=60
	asw_weapon_mines=30
	asw_weapon_buff_grenade=0
	asw_weapon_medical_satchel=20
	asw_weapon_medkit=30
	asw_weapon_laser_mines=8
	asw_weapon_freeze_grenades=15
	asw_weapon_gas_grenades=30
	asw_weapon_sniper_rifle=4
	Bastille=60
	Faith=60
	Wolfe=100
	Jaeger=80
	Sarge=100
	Crash=35
	Vegas=25
	Wildcat=25
}

regenInterval2 <- {
	asw_weapon_shotgun=9999999
	asw_weapon_heavy_rifle=60
	asw_weapon_vindicator=7
	asw_weapon_rifle=7
	asw_weapon_prifle=7
	asw_weapon_combat_rifle=7
}

ammoCount <- {
	asw_weapon_shotgun=2
	asw_weapon_tesla_trap=3
	asw_weapon_stim=1
	asw_weapon_heal_grenade=3
	asw_weapon_electrified_armor=2
	asw_weapon_hornet_barrage=1
	asw_weapon_grenades=1
	asw_weapon_mines=3
	asw_weapon_buff_grenade=1
	asw_weapon_medical_satchel=2
	asw_weapon_medkit=1
	asw_weapon_laser_mines=10
	asw_weapon_freeze_grenades=3
	asw_weapon_railgun=1
	asw_weapon_gas_grenades=3
	asw_weapon_grenade_launcher=1
	asw_weapon_sniper_rifle=3
}

undCount <- {
	asw_weapon_heavy_rifle=5
	asw_weapon_vindicator=5
	asw_weapon_rifle=5
	asw_weapon_prifle=5
	asw_weapon_combat_rifle=5
}

damageTable <- {
	asw_weapon_shotgun=300
	asw_weapon_ricochet=80
	asw_weapon_prifle=0
	asw_weapon_devastator=20
	asw_weapon_rifle=80
	asw_weapon_combat_rifle=80
	asw_weapon_minigun=50
	asw_weapon_deagle=0
	asw_weapon_50calmg=80
	asw_weapon_vindicator=30
	asw_weapon_flamer=0
	asw_weapon_railgun=20000
	asw_weapon_electrified_armor=300
	asw_weapon_tesla_trap=15
	asw_weapon_sniper_rifle=0
	asw_weapon_chainsaw=200
	asw_weapon_pistol=0
	asw_weapon_hornet_barrage=200
	asw_weapon_smart_bomb=0
	asw_weapon_tesla_gun=0
	asw_weapon_pdw=0
	asw_weapon_grenades=1800
	asw_weapon_mining_laser=0
	asw_weapon_laser_mines=500
	asw_weapon_autogun=100
	asw_weapon_mines=200
	asw_weapon_medrifle=0
	asw_weapon_heavy_rifle=0
	asw_sentry_top_cannon=600
	asw_sentry_top_flamer=20
}

friendlyDamageTable <- {
	asw_weapon_shotgun=3
	asw_weapon_ricochet=3
	asw_weapon_prifle=3
	asw_weapon_devastator=3
	asw_weapon_rifle=3
	asw_weapon_combat_rifle=3
	asw_weapon_minigun=3
	asw_weapon_deagle=3
	asw_weapon_50calmg=3
	asw_weapon_vindicator=3
	asw_weapon_flamer=0
	asw_weapon_railgun=70
	asw_weapon_electrified_armor=0
	asw_weapon_tesla_trap=0
	asw_weapon_sniper_rifle=30
	asw_weapon_chainsaw=3
	asw_weapon_pistol=3
	asw_weapon_hornet_barrage=0
	asw_weapon_smart_bomb=0
	asw_weapon_tesla_gun=0
	asw_weapon_pdw=3
	asw_weapon_laser_mines=10
	asw_weapon_grenades=0
	asw_weapon_mining_laser=3
	asw_weapon_autogun=3
	asw_weapon_mines=3
	asw_weapon_medrifle=3
	asw_weapon_heavy_rifle=3
	asw_sentry_top_cannon=0
	asw_sentry_top_flamer=0
}

backfireDamageTable <- {
	asw_weapon_shotgun=3
	asw_weapon_ricochet=3
	asw_weapon_prifle=3
	asw_weapon_devastator=2
	asw_weapon_rifle=3
	asw_weapon_combat_rifle=3
	asw_weapon_minigun=3
	asw_weapon_deagle=3
	asw_weapon_50calmg=3
	asw_weapon_vindicator=1
	asw_weapon_flamer=0
	asw_weapon_railgun=70
	asw_weapon_electrified_armor=0
	asw_weapon_tesla_trap=0
	asw_weapon_sniper_rifle=20
	asw_weapon_chainsaw=3
	asw_weapon_pistol=3
	asw_weapon_hornet_barrage=0
	asw_weapon_smart_bomb=0
	asw_weapon_tesla_gun=0
	asw_weapon_pdw=3
	asw_weapon_grenades=0
	asw_weapon_mining_laser=3
	asw_weapon_autogun=3
	asw_weapon_laser_mines=0
	asw_weapon_mines=0
	asw_weapon_medrifle=3
	asw_weapon_heavy_rifle=3
	asw_sentry_top_cannon=0
	asw_sentry_top_flamer=0
}

aliensArray <- [
	"asw_drone",
	"asw_buzzer",
	"asw_parasite",
	"asw_shieldbug",
	"asw_drone_jumper",
	"asw_harvester",
	"asw_parasite_defanged",
	"asw_queen",
	"asw_boomer",
	"asw_ranger",
	"asw_mortarbug",
	"asw_drone_uber",
	"npc_antlionguard_normal",
	"npc_antlionguard_cavern"
]if (!self || !self.IsValid())
	return;

if (GetMapName() == "rd-lan2_sewer"){
	self.Destroy();
	return;
}

IncludeScript("0fun_asw_health_bar");

hp <- 6000;
size <- 2.2;
healthbarSize <- "2";
up <- 150;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

if (self.GetName() != ""){
	hp = 9000;
	size = 2.5;
	up = 170;
	healthbarSize = "4";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.4");
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "114 84 23", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	Director.SpawnAlienBatch("asw_drone", 10, self.GetOrigin() + Vector(0,0,20), self.GetAngles());
	local spawner = Entities.CreateByClassname("asw_spawner");
	spawner.SetOrigin(self.GetOrigin());
	spawner.SetAnglesVector(self.GetAngles());
	spawner.__KeyValueFromString("AlienClass", "0");
	spawner.__KeyValueFromString("AlienOrders", "3");
	spawner.__KeyValueFromString("MaxLiveAliens", "5");
	spawner.__KeyValueFromString("SpawnerState", "1");
	spawner.__KeyValueFromString("ClearCheck", "0");
	spawner.__KeyValueFromString("StartBurrowed", "1");
	spawner.__KeyValueFromString("SpawnIfMarinesAreNear", "1");
	spawner.__KeyValueFromString("NumAliens", "20");
	spawner.__KeyValueFromString("SpawnInterval", "0");
	spawner.__KeyValueFromString("minoffset", "-30 -30 0");
	spawner.__KeyValueFromString("maxoffset", "30 30 0");
	spawner.Spawn();
	DoEntFire("!self", "StartSpawning", "", 3, null, spawner);
	DoEntFire("!self", "Kill", "", 40, null, spawner);
	spawner.ValidateScriptScope();
	local spawnerScope = spawner.GetScriptScope();
	spawnerScope.OnSpawned <- function(){
		if (self)
			self.__KeyValueFromString("sizescalesp", RandomFloat( 0.7, 1.3 ).tostring());
		return;
	}
	spawnerScope.SpawnerKill <- function(){
		self.DisconnectOutput("OnSpawned", "OnSpawned");
		DoEntFire("!self", "Kill", "", 0, null, self);
		self.DisconnectOutput("OnAllSpawned", "SpawnerKill");
	}
	spawner.ConnectOutput("OnSpawned", "OnSpawned");
	spawner.ConnectOutput("OnAllSpawned", "SpawnerKill");
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "169 102 26 210", healthbarSize, "0", "1", "", 0, 0, up);if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

hp <- 6000;
size <- 2.2;
healthbarSize <- "2";
up <- 150;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

if (self.GetName() != ""){
	hp = 9000;
	size = 2.5;
	up = 170;
	healthbarSize = "4";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.4");
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "255 0 0", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	local explosion = Entities.CreateByClassname("env_explosion");
	explosion.__KeyValueFromInt("iMagnitude", 120);
	explosion.__KeyValueFromInt("iRadiusOverride", 500);
	explosion.SetOrigin(self.GetOrigin() + Vector(0, 0, 37));				
	DoEntFire("!self", "Explode", "", 0, null, explosion);
	DoEntFire("!self", "Kill", "", 0.5, null, explosion);
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "255 0 0 210", healthbarSize, "0", "1", "", 0, 0, up);if (!self || !self.IsValid())
	return;

self.SetName("asw_0fun_drone_giant");
IncludeScript("0fun_asw_health_bar");

hp <- 12000;
size <- 3.2;
healthbarSize <- "3";
up <- 180;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 8000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 9000;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 10000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 11000;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 12000;
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("flinchable", "0");
	self.__KeyValueFromString("flammable", "0");
	self.__KeyValueFromString("freezable", "0");
	self.__KeyValueFromString("teslable", "0");
	self.__KeyValueFromString("speedscale", "0.3");
	EntFireByHandle(self, "Color", "80 60 70", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "120 100 110 210", healthbarSize, "0", "1", "", 0, 0, up);if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

if (GetMapName() == "rd-lan2_sewer")
	spwnCnt <- 3;
else spwnCnt <- 9;

hp <- 6000;
size <- 2.2;
healthbarSize <- "2";
up <- 150;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

if (self.GetName() != ""){
	hp = 9000;
	size = 2.5;
	up = 170;
	healthbarSize = "4";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.4");
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "120 255 120", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	local spawner = Entities.CreateByClassname("asw_spawner");
	spawner.SetOrigin(self.GetOrigin() + Vector (0,0,200));
	spawner.SetAnglesVector(self.GetAngles());
	spawner.__KeyValueFromString("AlienClass", "1");
	spawner.__KeyValueFromString("AlienOrders", "4");
	spawner.__KeyValueFromString("MaxLiveAliens", spwnCnt.tostring());
	spawner.__KeyValueFromString("SpawnerState", "1");
	spawner.__KeyValueFromString("ClearCheck", "0");
	spawner.__KeyValueFromString("SpawnIfMarinesAreNear", "1");
	spawner.__KeyValueFromString("NumAliens", spwnCnt.tostring());
	spawner.__KeyValueFromString("SpawnInterval", "0");
	spawner.__KeyValueFromString("minoffset", "-50 -50 0");
	spawner.__KeyValueFromString("maxoffset", "50 50 0");
	spawner.Spawn();
	DoEntFire("!self", "StartSpawning", "", 0, null, spawner);
	DoEntFire("!self", "Kill", "", 40, null, spawner);
	spawner.ValidateScriptScope();
	local spawnerScope = spawner.GetScriptScope();
	spawnerScope.OnSpawned <- function(){
		if (self)
			self.__KeyValueFromString("sizescalesp", RandomFloat( 0.4, 2.2 ).tostring());
		return;
	}
	spawnerScope.SpawnerKill <- function(){
		self.DisconnectOutput("OnSpawned", "OnSpawned");
		DoEntFire("!self", "Kill", "", 0, null, self);
		self.DisconnectOutput("OnAllSpawned", "SpawnerKill");
	}
	spawner.ConnectOutput("OnAllSpawned", "SpawnerKill");
	spawner.ConnectOutput("OnSpawned", "OnSpawned");
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "120 255 120 210", healthbarSize, "0", "0", "", 0, 0, up);IncludeScript("0fun_asw_health_bar");

if (!self || !self.IsValid())
	return;

hp <- 6000;
size <- 2.2;
healthbarSize <- "2";
up <- 150;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

if (self.GetName() != ""){
	hp = 9000;
	size = 2.5;
	up = 170;
	healthbarSize = "4";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.4");
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "255 100 255", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	Director.SpawnAlienBatch("asw_shaman", 5, self.GetOrigin() + Vector (0,0,10), self.GetAngles());
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "255 100 255 210", healthbarSize, "0", "1", "", 0, 0, up);
if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

if (GetMapName() == "rd-lan2_sewer")
	spwnCnt <- 1;
else spwnCnt <- 6;

parasiteProp <- CreateProp("prop_dynamic", self.GetOrigin(), "models/aliens/parasite/parasite.mdl", 17);
EntFireByHandle(parasiteProp, "SetDefaultAnimation", "ragdoll", 0, self, self);
EntFireByHandle(parasiteProp, "SetAnimation", "ragdoll", 0, self, self);
EntFireByHandle(parasiteProp, "DisableShadow", "", 0, self, self);
EntFireByHandle(parasiteProp, "SetParent", "!activator", 0, self, self);
EntFireByHandle(parasiteProp, "SetParentAttachment", "blood_spray", 0, self, self);
NetProps.SetPropFloat(parasiteProp, "m_flModelScale", 2.1);

function RotateToFaceForward(){
	self.SetLocalAngles(-48,120,5);
	self.SetLocalOrigin(Vector(10,-20,-5));
	self.DisconnectOutput("OnUser1", "RotateToFaceForward");
}

parasiteProp.ValidateScriptScope();
parasiteProp.GetScriptScope().RotateToFaceForward <- RotateToFaceForward;
parasiteProp.ConnectOutput("OnUser1", "RotateToFaceForward");
EntFireByHandle(parasiteProp, "FireUser1", "", 0, self, self);

self.ConnectOutput("OnDeath", "YellowDroneDied");

hp <- 6000;
size <- 2.2;
healthbarSize <- "2";
up <- 150;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

if (self.GetName() != ""){
	hp = 9000;
	size = 2.5;
	up = 170;
	healthbarSize = "4";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.4");
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "222 222 1", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	Director.SpawnAlienBatch("asw_parasite", spwnCnt, self.GetOrigin() + Vector (0,0,10), self.GetAngles());
	DoEntFire("!self", "Kill", "", 0, null, parasiteProp);
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "222 222 1 210", healthbarSize, "0", "1", "", 0, 0, up);sargeAng <- RandomFloat(-84.5, 0)
switch ( Convars.GetFloat( "asw_skill" ) )
{
	case 1:
	case 2:
	difficultyCorrect <- 5;
	difficultyCorrectFist <- 2;
	break;

	case 3:
	difficultyCorrect <- 0;
	difficultyCorrectFist <- 3;
	break;

	case 4:
	case 5:
	difficultyCorrect <- -5;
	difficultyCorrectFist <- 4;
	break;
}

function OnTakeDamage_Alive_Any( victim, inflictor, attacker, weapon, damage, damageType, ammoName )
{

// printl(" ");
    // printl("----------");
	// printl("attacker" + " :  "+attacker.GetMarineName());
	// printl("weapon" + " :  "+weapon.GetClassname());
	// printl("damageType" + " :  "+damageType);
	
// printl("----------------- ");

// printl(" ");
	local exDamage = 0;
	local criDamage = 0;


	local is_extinguisher = 0; 
	local is_flamer = 0; 

    //ÈêèÓÖ†‰ºÄÈç£„Ñ§ÁÆ£Áª´Ëç§ÊÆëÊ∂ìÂ∂ÖÂïÄÁëôÔπÄÂΩÇ
	if( attacker != null && victim != null && victim.IsAlien() && attacker.GetClassname() == "asw_marine" && ammoName != null && ammoName == "asw_extinguisher_projectile" )
	{
		is_extinguisher =0;
		damage = 1;
		return;
	}


    //Èç†È£é‰ºÄÈèãÓÅÉÁ¨âÈçêÂ∂à–ïÈçô?
	if( attacker != null && victim != null && victim.IsAlien() && attacker.GetClassname() == "asw_marine" && weapon != null && weapon.GetClassname() == "asw_weapon_flamer" )
	{
		is_flamer =1;
		return;
	}


	//Êæ∂Â∂ÜÊ§øÈçöÂ∫¢Ê£§ÈèÅ?
	if (rd_challenge == "0fun2"){		
		if (victim && victim.GetClassname() == "asw_marine"){
			if (noInstaDeathAfterReviveTable.rawin(victim)){
				if (noInstaDeathAfterReviveTable[victim]) {
					damage = 4; //no damage to revived marine
					//printl("Êæ∂Â∂ÜÊ§øÈèÉÁä≥Êô´ÈèÉÂ†ïÊ£ø");
					return;
				}	
			}			
		}
	}


	// Cri
	if( attacker != null && victim != null && victim.IsAlien() && attacker.GetClassname() == "asw_marine" && weapon != null && weapon.GetClassname() == "asw_weapon_sniper_rifle" )
	{
		local criChance = RandomInt(1, 96);

		if ( victim.GetHealth() == victim.GetMaxHealth() )
			criChance -= 18;

		if ( criChance <= 1 )
		{
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
			criDamage = damage * 64;
		}
	}

	// Faith
	if( attacker != null && victim != null && !attacker.IsAlien() && attacker.GetClassname() == "asw_marine" && attacker.GetMarineName() == "Faith" && victim.GetClassname() == "asw_marine" && victim.GetMarineName() != "Faith")
	{
		for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
		{
			if(checkWeapon.GetClassname() == "asw_weapon_stim")
			{
				if(victim.GetHealth() < victim.GetMaxHealth())
				{
					CreateParticleFunc(2, victim.GetOrigin() + Vector(0, 0, 40), Vector(0, 0, 0), "antlion_spit_02");

					if( victim.GetHealth() >= victim.GetMaxHealth() - 2 )
					{
						victim.EmitSound("ASW_HealGun.StartHeal");
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
					}
				}
				victim.SetHealth(victim.GetHealth() + 2);

				if(victim.GetHealth() > victim.GetMaxHealth())
					victim.SetHealth(victim.GetMaxHealth());
				//return;
			}
		}
	}

	// Power
	if( attacker != null && victim != null && attacker.GetClassname() == "asw_marine" && victim.IsAlien() )
	{
		if (inflictor != null && inflictor.GetClassname() == "asw_burning")
			return damage;

		for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
		{
			switch(checkWeapon.GetClassname())
			{
			case "asw_weapon_night_vision":
				if(attacker.GetMarineName() == "Jaeger")
				{
					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 125)) != null)
					{
						if ( nearTarget.IsAlien() )
						{
							CreateParticleFunc(2, nearTarget.GetOrigin(), Vector(0, 0, 0), "boomer_drop_FloatieEmbers");
							nearTarget.Ignite(2);
							nearTarget.TakeDamage(0.5, 0, victim);
						}
						else if ( nearTarget != null && nearTarget.GetClassname() != "asw_marine" )
							nearTarget.TakeDamage(0, 8, victim);
					}
				}
				else
				{
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "Explosion_FloatieEmbers");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 125)) != null)
					{
						if ( nearTarget != null && nearTarget.GetClassname() != "asw_marine" && !nearTarget.IsAlien() )
						{
							nearTarget.TakeDamage(0, 8, victim);
						}
					}
				}

				victim.Ignite(4);
				break;

			case "asw_weapon_freeze_grenades":
				if(attacker.GetMarineName() == "Wildcat")
				{
					 local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 10)) != null)
					 {
						 if ( nearTarget.IsAlien() )
						 {
							 CreateParticleFunc(2, nearTarget.GetOrigin(), Vector(0, 0, 0), "mortar_explosion_debrisburst");
							 nearTarget.Freeze(0.5);
						 }
					 }
					//3.5ÈèáÂ≠òÊüä,ÈóÑÂ∂ÑÁ∂ÜÁëôÔπÄÂΩÇÂßíÂÇúÂ∑º.ÈçôÊ®ªÂûöÈçòÁÜ∏ÊΩµ1/2
					local boomChance = RandomInt( 1, 100 );	
					if ( boomChance <= 1 )
					{
						//victim.Freeze(0.1); //3.5ÈèáÂ≠òÊüä,ÈçêÊùøÂñïÈèÉÂ†ïÊ£øÈçëÂøìÁöØ
					}
				}
				break;

			case "asw_weapon_tesla_trap":
				if(attacker.GetMarineName() == "Crash")
				{
					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 125)) != null)
					{
						if ( nearTarget.IsAlien() )
						{
							nearTarget.ElectroStun(2);
						}
					}
				}
				victim.ElectroStun(4);
				break;

			case "asw_weapon_blink":
				if (victim.GetClassname() == "asw_shieldbug" || victim.GetClassname() == "asw_antlionguard_normal" || victim.GetClassname() == "asw_antlionguard_cavern" || victim.GetClassname() == "asw_boomer" || victim.GetClassname() == "asw_harvester" || victim.GetClassname() == "asw_drone_uber" || victim.GetClassname() == "asw_mortarbug")
				{
					local dirVector = victim.GetOrigin() - inflictor.GetOrigin();
					local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);
	
					if (dirVectorNoZ.Length() != 0)
					{
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_pickup_generic");

						local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
						local pushVector = dirVectorNoZNormalized * (260 + damage + criDamage) + Vector (0, 0, 200 + (damage + criDamage)/2);
						victim.SetVelocity(pushVector);
					}
				}
				else if (victim.GetClassname() == "asw_queen")
				{
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_pickup_generic");
				}
				else
				{
					local dirVector = victim.GetOrigin() - inflictor.GetOrigin();
					local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);
	
					if (dirVectorNoZ.Length() != 0)
					{
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_pickup_generic");

						local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
						local pushVector = dirVectorNoZNormalized * (300 + damage + criDamage) + Vector (0, 0, 250 + (damage + criDamage)/2);
						victim.SetVelocity(pushVector);
					}
				}
				break;

			case "asw_weapon_grenades":
				local boomChance = RandomInt( 1, 1000 );

				if(attacker.GetMarineName() == "Wolfe")
					//boomChance = 1;  //ÈçòÁÜ∏ÊΩµÈèÑ?00%ÂßíÂÇúÂ∑º,ÈêúÊùøÊπ™ÈçôÊ®ªÂûöÊµú?0%Èê®Âã¨ÓõßÈêú?
					boomChance = RandomInt( 1, 100 );  //3.4ÈèáÂ≠òÊüä,Âß£ÊñøÂèæÊµ†Ê†´Â∏∫ÁÄπÂ†ïÁèÆ10Èçä?

				// default 1 (1%)
				if ( boomChance <= 70 )
				{
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_grenade");

					//victim.EmitSound("BaseExplosionEffect.Sound");  //3.4ÈèáÂ≠òÊüä,ÈçòÁªòÂ∏ÄÈêñÂóôÂÅ¢Êæπ‰º¥ÁÖ∂
					//victim.EmitSound("ASWGrenade.Explode");
					//victim.EmitSound("ASWGrenade.Explosion");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
					{
						if ( nearTarget.IsAlien() )
							nearTarget.TakeDamage(30, 0, victim);
						else if ( nearTarget.GetClassname() != "asw_marine" )
							nearTarget.TakeDamage(0, 64, victim);
					}
				}
				break;

			case "asw_weapon_stim":
				if(attacker.GetHealth() < attacker.GetMaxHealth())
				{
					CreateParticleFunc(2, attacker.GetOrigin() + Vector(0, 0, 40), Vector(0, 0, 0), "antlion_spit_02");

					if( attacker.GetHealth() >= attacker.GetMaxHealth() - 1 )
					{
						attacker.EmitSound("ASW_HealGun.StartHeal");
						CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
					}
				}
				attacker.SetHealth(attacker.GetHealth() + 1);

				if(attacker.GetHealth() > attacker.GetMaxHealth())
					attacker.SetHealth(attacker.GetMaxHealth());
				break;

			case "asw_weapon_buff_grenade":
				CreateParticleFunc(2, victim.GetOrigin() + Vector(0, 0, 50), Vector(0, 0, 0), "marine_hit_spark_master");

				if(attacker.GetMarineName() == "Vegas")
					exDamage = damage * 0.75;
				else
					exDamage = damage * 0.5;
				break;
			}
		}
	}

	// fire mine
	if( attacker != null && victim != null && attacker.IsAlien() && victim.GetClassname() == "asw_marine" && (victim.GetMarineName() == "Jaeger" || victim.GetMarineName() == "Sarge") )
	{
		for (local checkWeapon = victim.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
		{
			if (checkWeapon.GetClassname() == "asw_weapon_mines")
			{
				victim.EmitSound("ASW_Mine.Explode");

				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "vindicator_grenade_fire_flash");

				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 200)) != null)
				{
					if ( nearTarget.IsAlien() )
						nearTarget.Ignite(2);
					else if ( nearTarget != null && nearTarget.GetClassname() != "asw_marine" )
						nearTarget.TakeDamage(0, 8, victim);
				}
				break;
			}
		}
	}
	// Death
	if( victim != null && victim.GetClassname() == "asw_marine" )
	{
		for (local checkWeapon = victim.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
		{
			if (checkWeapon.GetClassname() == "asw_weapon_flares")
			{
				if( damage >= victim.GetHealth() )
				{
					victim.EmitSound("ASW_Mine.Explode");
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "ElevatorShaftFire");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 120)) != null)
					{
						if ( nearTarget.IsAlien() || nearTarget.GetClassname() == "asw_marine")
							nearTarget.Ignite(3);
						else if ( nearTarget.GetClassname() != "asw_marine" )
							nearTarget.TakeDamage(0, 8, victim);
					}
					break;
				}
			}
		}
	}
	// Item blow
	if(attacker != null && (attacker.GetClassname() == "asw_shieldbug" || attacker.GetClassname() == "asw_antlionguard_normal" || attacker.GetClassname() == "asw_antlionguard_cavern"))
	{
		if (victim != null && victim.GetClassname() == "asw_marine")
		{
			local armorBroken = 0;

			for (local checkWeapon = victim.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
			{
				if (checkWeapon.GetClassname() == "asw_weapon_normal_armor")
				{
					victim.EmitSound("ASW_JumpJet.Impact");
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "boomer_drop_FloatieEmbers");
					victim.RemoveWeapon(2);
					armorBroken = 1;
					break;
				}
			}

			if ( armorBroken )
				return damage;

			if (victim.GetMarineName() == "Sarge")
				return damage;

			local howMany = RandomInt( 1, 100 )

			if (victim.GetHealth() <= 40)
			{
				if (howMany <= 50)
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
					victim.DropWeapon(RandomInt( 0, 2 ));
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
				else if  (howMany <= 83)
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
				else
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
			}
			else if (victim.GetHealth() <= 80)
			{
				if (howMany <= 25)
				{
				}
				else if  (howMany <= 75)
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
				else if  (howMany <= 90)
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
				else
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
					victim.DropWeapon(RandomInt( 0, 2 ));
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
			}
			else if (victim.GetHealth() <= 125)
			{
				if (howMany <= 50)
				{
				}
				else if  (howMany <= 90)
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
				else
				{
					victim.DropWeapon(RandomInt( 0, 2 ));
					victim.DropWeapon(RandomInt( 0, 2 ));
				}
			}
		}
	}
	// One punch
	if (attacker != null && attacker.GetClassname() == "asw_marine")
	{
		if (weapon != null && weapon.GetClassname() == "asw_weapon_railgun")
		{
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_grenade_heat");

			local nearTarget = null;
			while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 300)) != null)
			{
				if ( nearTarget.IsAlien() || nearTarget.GetClassname() == "asw_marine" )
				{
					local dirVector = nearTarget.GetOrigin() - victim.GetOrigin();
					local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);

					if (dirVectorNoZ.Length() != 0)
					{
						local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
						local pushVector = dirVectorNoZNormalized * -300 + Vector (0, 0, 250);
						nearTarget.SetVelocity(pushVector);
					}
				}
			}
			attacker.SetVelocity(attacker.GetForwardVector() * 650 + Vector(0, 0, 350));
		}

		if (victim != null && (victim.GetClassname() == "asw_shieldbug" || victim.GetClassname() == "asw_antlionguard_normal" || victim.GetClassname() == "asw_antlionguard_cavern" || victim.GetClassname() == "asw_boomer" || victim.GetClassname() == "asw_harvester" || victim.GetClassname() == "asw_drone_uber" || victim.GetClassname() == "asw_mortarbug"|| victim.GetClassname() == "asw_queen"))
		{
			for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
			{
				if (checkWeapon.GetClassname() == "asw_weapon_fist" && attacker == weapon)
				{
					DropFragGrenade(0, 0, attacker.GetOrigin() + Vector(0, 0, 50));
					CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "asw_env_explosion");

					if(attacker.GetHealth() >= 2)
						attacker.TakeDamage(1, 0, attacker);

					if(attacker.GetHealth() >= difficultyCorrectFist)
						attacker.SetHealth(attacker.GetHealth() / difficultyCorrectFist);
					else
						attacker.SetHealth(1);

					attacker.RemoveWeapon(2);

					if (attacker.GetMarineName() != "Wolfe")
						attacker.Knockdown(Vector( 0, 0, 0 ));

					// knock all
					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 300)) != null)
					{
						if ( nearTarget.IsAlien() || nearTarget.GetClassname() == "asw_marine" )
						{
							local dirVector = nearTarget.GetOrigin() - victim.GetOrigin();
							local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);

							if (dirVectorNoZ.Length() != 0)
							{
								local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
								local pushVector = dirVectorNoZNormalized * 300 + Vector (0, 0, 250);
								nearTarget.SetVelocity(pushVector);
							}
						}
					}

					if (victim.GetClassname() == "asw_queen")
						return victim.GetMaxHealth() / difficultyCorrectFist + 4;

					damage =  damage + 9999;
				}
			}
		}
	}
	damage =  damage + exDamage + criDamage;	
	
	local inflictorClass = null;
	local victimClass = null;
	local attackerClass = null;
	local weaponClass = null;
	if (inflictor)
		inflictorClass = inflictor.GetClassname();
	if (victim)
		victimClass = victim.GetClassname();
	if (attacker)
		attackerClass = attacker.GetClassname();
	if (weapon)
		weaponClass = weapon.GetClassname();

	if (inflictorClass == "asw_missile_round" && victimClass == "asw_marine" && inflictor.GetOwner() && inflictor.GetOwner().GetClassname() == "asw_ranger"){
		victim.TakeDamage(10, 131072, attacker);
		victim.BecomeInfested();
		local parasiteProp = CreateProp("prop_dynamic", victim.GetOrigin(), "models/aliens/parasite/parasite.mdl", 17);
		parasiteProp.SetOwner(victim);
		parasiteProp.ValidateScriptScope();
		local parasitePropScope = parasiteProp.GetScriptScope();
		parasitePropScope.RotateToMarineNeck <- RotateToMarineNeck;
		parasitePropScope.IsMarineInfested <- IsMarineInfested;
		parasitePropScope.hVictim <- victim;
		DoEntFire("!self", "SetParent", "!activator", 0,  victim, parasiteProp);
		DoEntFire("!self", "SetParentAttachment", "anim_attachment_head", 0,  victim, parasiteProp);
		DoEntFire("!self", "SetDefaultAnimation", "ragdoll", 0,  self, parasiteProp);
		DoEntFire("!self", "SetAnimation", "ragdoll", 0,  self, parasiteProp);
		DoEntFire("!self", "DisableShadow", "", 0,  self, parasiteProp);
		parasiteProp.ConnectOutput("OnUser1", "RotateToMarineNeck");
		DoEntFire("!self", "FireUser1", "", 0,  self, parasiteProp);
		AddThinkToEnt(parasiteProp, "IsMarineInfested");
	}

	local dam = 0;

	if (weaponClass in damageTable){
		damage += damageTable[weaponClass];
		if (victimClass == "asw_marine"){
			if (asw_marine_ff_absorption == "0"){
				damage = 0;
				dam = backfireDamageTable[weaponClass];
			} else damage = friendlyDamageTable[weaponClass];
		}
	}

	if(weapon){
		switch (weapon.GetClassname()){
			case "asw_weapon_prifle":
				if (victim == attacker){
					damage = 3;
				}
				break;
			case "asw_weapon_rifle":
				if (inflictorClass == "asw_rifle_grenade" && inflictor.GetOwner() == attacker){
					if (asw_marine_ff_absorption == "0"){
						if (victim != attacker && victimClass == "asw_marine"){
							dam = 60;
							break;
						}
					}
					if (victimClass == "asw_marine"){
						damage = 60;
					} else damage += 1500;
				}
				break;
			case "asw_weapon_deagle":
				local explosion = Entities.CreateByClassname("env_explosion");
				explosion.__KeyValueFromInt("spawnflags", 65);
				explosion.SetOrigin(victim.GetOrigin() + Vector(0, 0, 10));
				DoEntFire("!self", "Explode", "", 0, null, explosion);
				DoEntFire("!self", "Kill", "", 0.5, null, explosion);
				if (victimClass == "asw_ranger")
					damage = 300;
				local hNearEntitie = null;
				while ((hNearEntitie = Entities.FindInSphere(hNearEntitie, victim.GetOrigin(), 15)) != null){
					if (hNearEntitie.IsAlien() && hNearEntitie != victim)
						hNearEntitie.TakeDamage(80, 4098, null);
				}
				break;
			case "asw_weapon_flamer":
				dam = 0;
				if (victimClass == "asw_marine"){
					if (victim.GetHealth() <= victim.GetMaxHealth()){
						victim.SetHealth(victim.GetHealth() + (victim.GetMaxHealth()/40));
						if (attacker.GetHealth() <= attacker.GetMaxHealth())
							attacker.SetHealth(attacker.GetHealth() + (attacker.GetMaxHealth()/40));
					}
				}
				else if (victim){
					damage = 1;
				}
				break;
			case "asw_weapon_sniper_rifle":
				if (victimClass != "asw_marine"){
					local A = attacker.GetOrigin();
					local B = victim.GetOrigin();
					local fDistance = (A - B).Length();
					if (fDistance >= 350.0){
						local health = victim.GetHealth();
						if (health > 30000)
							damage = 30000;
						else damage = victim.GetHealth();
					}
				}
				break;
			case "asw_weapon_chainsaw":
				if (attacker.GetHealth() <= attacker.GetMaxHealth()){
					attacker.SetHealth(attacker.GetHealth() + (attacker.GetMaxHealth()/70));
				}
				break;
			case "asw_weapon_grenades":
				if (victimClass == "asw_marine" && victim.GetHealth() <= victim.GetMaxHealth()){
					victim.SetHealth(victim.GetHealth() + (victim.GetMaxHealth()/4));  //Âß£ÂøîÓÇºÈîõ?1/4
				}
				break;
			case "asw_weapon_vindicator":
				if (victim == attacker){
					damage = 20;
				}
				break;
			case "asw_weapon_railgun":
				if (victim.IsAlien()){
					if (!(timeforexplosion.rawin(attacker)) || timeforexplosion[attacker] + 0.3 < Time()){
						ParticleSpawn(1, 0, 0, 30, victim, "portal_rift_flash_01", "ASW_T75.Explode", "", "", 0, "", 0, "", "");
						ParticleSpawn(2, 0, 0, 30, victim, "portal_ritf_flash_01c", "ASWBarrel.Explode", "", "", 0, "", 0, "", "");
						ParticleSpawn(2, 0, 0, 30, victim, "portal_rift_flash_01b", "Bounce.Concrete", "Bounce.Concrete", "", 0, "", 0, "", victim);
						local hNearEnt = null;
						while ((hNearEnt = Entities.FindInSphere(hNearEnt, victim.GetOrigin(), 380)) != null){
							if (hNearEnt.IsValid() && hNearEnt != victim
								&& hNearEnt.GetClassname() != "asw_marine"
								&& hNearEnt.GetClassname() != "asw_door"){
								hNearEnt.TakeDamage(20000, 8, attacker);
							}
						}
					}
					timeforexplosion[attacker] <- Time();
				}
				break;
			case "asw_weapon_grenade_launcher":
				if (victimClass == "asw_marine" && victim != attacker){
					if (asw_marine_ff_absorption == "0"){
						damage = 0;
						dam = 90;
					} else damage = 30;
				}
				break;
			case "asw_weapon_shotgun":
				if (victimClass != "asw_marine"){
					local explosion = Entities.CreateByClassname("env_explosion");
					explosion.__KeyValueFromInt("spawnflags", 65);
					explosion.SetOrigin(victim.GetOrigin() + Vector(0, 0, 10));
					DoEntFire("!self", "Explode", "", 0, null, explosion);
					DoEntFire("!self", "Kill", "", 0.5, null, explosion);

					local radius = 100;
					local origin = victim.GetOrigin();
					local drones = ["asw_drone", "asw_drone_jumper"];
					foreach (drone in drones){
						local nearTarget = null;
						while ((nearTarget = Entities.FindByClassnameWithin(nearTarget, drone, origin, radius)) != null){
							local killExplosion = Entities.CreateByClassname("env_explosion");
							killExplosion.__KeyValueFromInt("iMagnitude", 80);
							killExplosion.__KeyValueFromInt("iRadiusOverride", 16);
							killExplosion.__KeyValueFromInt("spawnflags", 8060);
							killExplosion.SetOrigin(nearTarget.GetOrigin() + Vector(0, 0, 10));
							DoEntFire("!self", "Explode", "", 0, null, killExplosion);
							DoEntFire("!self", "Kill", "", 0.5, null, killExplosion);
						}
					}
				}
				break;
			case "asw_weapon_tesla_gun":
				if (victimClass != "asw_marine"){
					local scale = 0;
					if (victim.GetName() == "asw_0fun_drone_giant"){
						scale = 0.3;
					} else scale = 1;
					local nearTarget = null;
					local radius = 60;
					while((nearTarget = Entities.FindByClassnameWithin(nearTarget, "asw_drone", victim.GetOrigin(), radius)) != null){
						DoEntFire("!self", "AddOutput", "speedscale -1", 0, null, nearTarget);
						DoEntFire("!self", "AddOutput", "speedscale " + scale.tostring(), 1, null, nearTarget);
					}
					if (victimClass == "asw_drone"){
						DoEntFire("!self", "AddOutput", "speedscale -1", 0, null, victim);
						DoEntFire("!self", "AddOutput", "speedscale " + scale.tostring(), 5, null, victim);
					}
				}
				damage = victim.GetHealth()/20;
				break;
			case "asw_marine":
				if (attackerClass == "asw_marine" && inflictorClass == "asw_marine" && victimClass == "asw_marine"){
					damage = victim.GetMaxHealth()/16;
				}
				break;
			default: break;
		}
	}

	if (!bFF && attackerClass == "asw_marine" && victimClass == "asw_marine" && inflictorClass != "asw_burning" && attacker != victim){
		return damage = 0;
	}

	if (asw_marine_ff_absorption == "0"){
		if (attackerClass == "asw_marine" ){
			if (victimClass == "asw_marine" && victim != attacker){
				if (inflictorClass != "asw_burning"
					&& inflictorClass != "asw_sentry_top_machinegun"
					&& inflictorClass != "asw_barrel_explosive"){
					if (weaponClass != "asw_sentry_top_cannon"){
						if (attacker.GetHealth() - dam <= 0){
							for (local i = 0; i != 8; i++){
								attacker.TakeDamage(20, 64, attacker);
								attacker.StopSound("ASW.MarineImpact");
								attacker.StopSound("ASW.MarineImpactFP");
								attacker.StopSound("ASW.MarineImpactFP_Dm");
								attacker.StopSound("ASW.MarineImpactHeavy");
								attacker.StopSound("ASW.MarineImpactHeavyFP");
								attacker.StopSound("ASW.MarineImpactHeavyFP_Dm");
								if (i == 7) attacker.EmitSound("ASW.MarineImpactHeavyFP");
							}
						} else attacker.SetHealth(attacker.GetHealth() - dam);
					}
				} else if (inflictorClass == "asw_barrel_explosive"){
					damage = 0;
				}
			}
		}
	}

	if (attacker && attacker.GetName() == "asw_0fun_drone_giant"){
		if (victimClass == "asw_marine")
			victim.Knockdown(Vector(0, 0, 0));
		return damage;
	}

	if (inflictorClass == "asw_sentry_top_machinegun" && victimClass != "asw_marine")
		dealDamageToAlienFunc(20, victim, 15, 4098, null);

	return damage;
}
g_ModeScript.OnTakeDamage_Alive_Any <- OnTakeDamage_Alive_Any;

sargeAng <- RandomFloat(-84.5, 0)
switch ( Convars.GetFloat( "asw_skill" ) )
{
	case 1:
	case 2:
	difficultyCorrect <- 5;
	difficultyCorrectFist <- 2;
	break;

	case 3:
	difficultyCorrect <- 0;
	difficultyCorrectFist <- 3;
	break;

	case 4:
	case 5:
	difficultyCorrect <- -5;
	difficultyCorrectFist <- 4;
	break;
}



//g_ModeScript.OnGameEvent_entity_killed <- function ( params )
function OnGameEvent_entity_killed(params)
{
	//printl(params["entindex_killed"]);
	//printl(params["entindex_attacker"]);
	
	
	// if	(params["entindex_killed"] = 0)
		// return;
	// if	(params["entindex_attacker"] = 0)
		// return;		
		
	
	local victim = EntIndexToHScript(params["entindex_killed"]);


	if (victim.GetClassname() == "asw_marine"){
		if (marinesTable.rawin(victim)){
			marinesTable.rawdelete(victim);
			//print("ÈçíÁäªÊ´éÊ∂ì‚Ç¨Ê∂ìÓÅÖÓÑ¥ÊµúÔºÑÂ∏∫ÁÄπÁ¶±n");
			return; //Èêú‚ïÅÓÜçÂßùËÆ≥È™∏ÈçöÂ∫£Ê¥øÈé∫„É®ÁπëÈç•?.2ÈèáÂ≠òÊüä
		}
			
			
	} else if (victim.GetName() == "asw_0fun_buzzer"){
		victim.StopSound("d1_town.LargeFireLoop");
		victim.StopSound("d1_town.LargeFireLoop");
	}
	
	local victim = EntIndexToHScript( params["entindex_killed"] );
	local attacker = EntIndexToHScript( params["entindex_attacker"] );


  //local victim = EntIndexToHScript(params["entindex_killed"]);


	if ( !attacker || !victim )
		return;

	// Power
	if (  attacker != null && victim != null && attacker.GetClassname() == "asw_marine" && victim.IsAlien() )
	{
		for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
		{
			switch(checkWeapon.GetClassname())
			{
				case "asw_weapon_gas_grenades":
					//CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "antlion_spit_trail");
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "disease_buff");
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_chemical_bullets");

					DropGasGrenade(20, 0.3, 0.1, 3, victim.GetOrigin() + Vector(0, 0, 10));
					break;

				case "asw_weapon_flashlight":
					local fireChance = RandomInt(1, 10);
					if (fireChance < 6)
					{
						victim.EmitSound("ASW_Mine.Explode");

						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_huge_k");

						local nearTarget = null;
						while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
						{
							if ( nearTarget.IsAlien() )
								nearTarget.Ignite(4);
							else if ( nearTarget.GetClassname() != "asw_marine" )
								nearTarget.TakeDamage(0, 8, victim);
						}
					}
					break;

				case "asw_weapon_freeze_grenades":
					if(attacker.GetMarineName() != "Wildcat")
					{
						local fireChance = RandomInt(1, 10);
						if (fireChance < 6)
						{
							victim.EmitSound("ASW_Freeze_Grenade.Explode");

							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");

							local nearTarget = null;
							while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
							{
								if ( nearTarget.IsAlien() )
									nearTarget.Freeze(1);
								else if ( nearTarget.GetClassname() == "asw_marine" )
									nearTarget.Extinguish();
							}
						}
					}
					break;

				case "asw_weapon_electrified_armor":
					local fireChance = RandomInt(1, 10);
					if (fireChance < 6)
					{
						victim.EmitSound("ASW_Tesla_Laser.Damage");

						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "stungrenade_arc_sprites");

						local nearTarget = null;
						while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
						{
							if ( nearTarget.IsAlien() )
								nearTarget.ElectroStun(4);
						}
					}
					break;

				case "asw_weapon_jump_jet":
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "boomer_drop_shockwave1");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 150)) != null)
					{
						if (nearTarget.GetClassname() == "asw_shieldbug" || nearTarget.GetClassname() == "asw_antlionguard_normal" || nearTarget.GetClassname() == "asw_antlionguard_cavern" || nearTarget.GetClassname() == "asw_boomer" || nearTarget.GetClassname() == "asw_harvester" || nearTarget.GetClassname() == "asw_drone_uber" || nearTarget.GetClassname() == "asw_mortarbug")
						{
							nearTarget.SetVelocity(Vector(0, 0, 240));
						}
						else if (nearTarget.GetClassname() == "asw_queen")
							{}
						else if (nearTarget.IsAlien())
						{
							nearTarget.SetVelocity(Vector(0, 0, 300));
						}

					}
					break;

				case "asw_weapon_laser_mines":
					if(attacker.GetMarineName() == "Sarge")
					{
						switch (RandomInt(1, 4))
						{
							case 1:
							//8
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(0, 20, 0), Vector(sargeAng, 270, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(0, 20, 0), Vector(sargeAng, 270, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(17.32, -10, 0), Vector(sargeAng, 150, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(17.32, -10, 0), Vector(sargeAng, 150, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(-17.32, -10, 0), Vector(sargeAng, 30, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(-17.32, -10, 0), Vector(sargeAng, 30, 0));
							break;
							case 2:
							//2
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(0, -20, 0), Vector(sargeAng, 90, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(0, -20, 0), Vector(sargeAng, 90, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(-17.32, 10, 0), Vector(sargeAng, 330, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(-17.32, 10, 0), Vector(sargeAng, 330, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(17.32, 10, 0), Vector(sargeAng, 210, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(17.32, 10, 0), Vector(sargeAng, 210, 0));
							break;
							case 3:
							//4
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(-20, 0, 0), Vector(sargeAng, 0, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(-20, 0, 0), Vector(sargeAng, 0, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(10, 17.32, 0), Vector(sargeAng, 240, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(10, 17.32, 0), Vector(sargeAng, 240, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(10, -17.32, 0), Vector(sargeAng, 120, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(10, -17.32, 0), Vector(sargeAng, 120, 0));
							break;
							case 4:
							//6
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(20, 0, 0), Vector(sargeAng, 180, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(20, 0, 0), Vector(sargeAng, 180, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(-10, -17.32, 0), Vector(sargeAng, 60, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(-10, -17.32, 0), Vector(sargeAng, 60, 0));
							if( RandomInt(1, 200) == 1 )
								PlantLaserMine(false, victim.GetOrigin() + Vector(-10, 17.32, 0), Vector(sargeAng, 300, 0));
							else
								PlantLaserMine(true, victim.GetOrigin() + Vector(-10, 17.32, 0), Vector(sargeAng, 300, 0));
							break;
						}
					}
					else
					{
						local who = 10;

						switch(attacker.GetMarineName())
						{
							case "Jaeger":	who = 50;	break;
							case "Crash":	who = 30;	break;
						}
						if( RandomInt(1, 100) <= who )
							PlantLaserMine(false, victim.GetOrigin(), Vector(-90, 0, 0));
						else
							PlantLaserMine(true, victim.GetOrigin(), Vector(-90, 0, 0));
					}
					break;

				case "asw_weapon_hornet_barrage":
					CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "explosion_shockwave1");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, attacker.GetOrigin(), 130)) != null)
					{
						if ( nearTarget.IsAlien() )
						{
							if ( nearTarget.GetClassname() == "asw_parasite" ||
							nearTarget.GetClassname() == "asw_parasite_defanged" ||
							nearTarget.GetClassname() == "asw_buzzer" ||
							nearTarget.GetClassname() == "asw_shaman" )
								nearTarget.TakeDamage(256, 0, victim);
							else
								nearTarget.TakeDamage(20, 0, victim);
						}
					}
					break;

				case "asw_weapon_smart_bomb":
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_shockwave1");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 130)) != null)
					{
						if ( nearTarget.IsAlien() )
						{
							if ( nearTarget.GetClassname() == "asw_parasite" ||
							nearTarget.GetClassname() == "asw_parasite_defanged" ||
							nearTarget.GetClassname() == "asw_buzzer" ||
							nearTarget.GetClassname() == "asw_shaman" )
								nearTarget.TakeDamage(256, 0, victim);
							else
								nearTarget.TakeDamage(20, 0, victim);
						}
					}
					break;

				case "asw_weapon_medkit":
					if(attacker.GetMarineName() == "Bastille")
					{
						
						//PlaceHealBeacon(40, 5, 5, 3, 80, victim.GetOrigin() + Vector(0, 0, 10));  //ÈçòÁÑ¢ower
						//PlaceHealBeacon(9999, 6, 0, 30, 200, hOldBeacon.GetOrigin());     //4fun2 
						//PlaceHealBeacon(40, 6, 5, 3, 80, victim.GetOrigin() + Vector(0, 0, 10));
						//Â®åËç§ÊûüÈñ≤?,Èçã„É•ÊÇçÈêòË∑∫Âñå,Èé∞ÁÜ∏ÁÖãÂ®åÁªòÂâ§Èñ≤?Èé∏‰Ω∫ÁîªÈèÉÂ†ïÊ£ø,ÈëºÂÜ®Ê¥ø?  , ÈçßÊÑ≠Áà£Èêê?
						PlaceHealBeacon(40, 6, 0, 4, 100, victim.GetOrigin() + Vector(0, 0, 10));
						//2.6ÈèáÂ≠òÊüä
					}

					if(attacker.GetHealth() < attacker.GetMaxHealth())
					{
						CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "antlion_gib_02_trailsB");

						if( attacker.GetHealth() >= attacker.GetMaxHealth() - 4 )
						{
							attacker.EmitSound("ASW_HealGun.StartHeal");
							CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
						}
					}
					attacker.SetHealth(attacker.GetHealth() + 4);

					if(attacker.GetHealth() > attacker.GetMaxHealth())
						attacker.SetHealth(attacker.GetMaxHealth());
					break;

				case "asw_weapon_buff_grenade":
					if(attacker.GetMarineName() == "Vegas")
					{
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "ammo_satchel_take_lrg");

						local boomChance = RandomInt( 1, 1000 );
						if ( boomChance <= 1 )
						{
							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
							CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
							//1.6ÈèáÂ≠òÊüä
							//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
							//ammo.SetOrigin( victim.GetOrigin() ); ammo.Spawn();
						}
					}
					break;
			}
		}
	}

	if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && (victim.GetClassname() == "asw_drone" || victim.GetClassname() == "asw_drone_jumper"))
	{
		local WeaponName = "";
		local randomChance = RandomInt( 1, 1000 );

		// drop rate default 80 (8%)
		//0.8
		//1.7ÈèÄËßÑÂûö1 (Ê∂îÁÜ∑Ê∞®ÈèÑÓàúÂûéÈêúÂõßÂΩâÈé¥?/1000)
		if ( randomChance > difficultyCorrect + 1 )
			return;

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 40 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			
			//CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			luckyCheck = 2;
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 900 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 40 )
			{
				WeaponName = "asw_weapon_vindicator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 60 )
			{
				switch ( RandomInt( 1, 4 ) )
				{
					case 1:
					WeaponName = "asw_weapon_sentry";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 2:
					WeaponName = "asw_weapon_sentry_freeze";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 3:
					WeaponName = "asw_weapon_sentry_flamer";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 4:
					WeaponName = "asw_weapon_sentry_cannon";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;
				}
				ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
			}
			else if ( whatItem <= 80 )
			{
				WeaponName = "asw_weapon_minigun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 90 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 110 )
			{
				WeaponName = "asw_weapon_deagle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 130 )
			{
				//1.6ÈèáÂ≠òÊüä
				//WeaponName = "asw_weapon_flechette";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 170 )
			{
				WeaponName = "asw_weapon_prifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 190 )
			{
				WeaponName = "asw_weapon_autogun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 220 )
			{
				//2020/01/20ÈèáÂ≠òÊüä
				WeaponName = "asw_weapon_devastator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 250 )
			{
				WeaponName = "asw_weapon_combat_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 280 )
			{
				WeaponName = "asw_weapon_heavy_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 310 )
			{
				WeaponName = "asw_weapon_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 350 )
			{
				WeaponName = "asw_weapon_tesla_gun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 390 )
			{
				WeaponName = "asw_weapon_pdw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 440 )
			{
				WeaponName = "asw_weapon_railgun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 490 )
			{
				WeaponName = "asw_weapon_mining_laser";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 540 )
			{
				//WeaponName = "asw_weapon_fire_extinguisher";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}

			// Extra weapon
			else if ( whatItem <= 564 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 588 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 612 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 636 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 660 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ?");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 684 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 708 )
			{

			}
			else if ( whatItem <= 732 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 756 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 780 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 804 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 828 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 852 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 876 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 900 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_ranger" )
	{
		local WeaponName = "";
		local randomChance = RandomInt( 1, 1000 );

		// drop rate default 100 (10%)
		//1.7Ê∑áÓÜΩÊïºÈêñÂóôÂ∑ºÈçò?00 -> 10
		//1.8Ê∑áÓÜΩÊïºÈêñÂóôÂ∑º -->1
		if ( randomChance > difficultyCorrect + 1 )
			return;

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 40 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			luckyCheck = 2;
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 655 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 23 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			else if ( whatItem <= 43 )
			{
				WeaponName = "asw_weapon_vindicator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 63 )
			{
				switch ( RandomInt( 1, 4 ) )
				{
					case 1:
					WeaponName = "asw_weapon_sentry";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 2:
					WeaponName = "asw_weapon_sentry_freeze";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 3:
					WeaponName = "asw_weapon_sentry_flamer";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 4:
					WeaponName = "asw_weapon_sentry_cannon";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;
				}
				ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
			}
			else if ( whatItem <= 83 )
			{
				WeaponName = "asw_weapon_minigun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 93 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 113 )
			{
				WeaponName = "asw_weapon_deagle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 133 )
			{
				//1.6ÈèáÂ≠òÊüä
				//WeaponName = "asw_weapon_flechette";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 163 )
			{
				WeaponName = "asw_weapon_prifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 193 )
			{
				WeaponName = "asw_weapon_autogun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 223 )
			{
				//2020/01/20ÈèáÂ≠òÊüä
				WeaponName = "asw_weapon_devastator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 253 )
			{
				WeaponName = "asw_weapon_combat_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 283 )
			{
				WeaponName = "asw_weapon_heavy_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 313 )
			{
				WeaponName = "asw_weapon_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 353 )
			{
				WeaponName = "asw_weapon_tesla_gun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 393 )
			{
				WeaponName = "asw_weapon_pdw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}

			// Extra weapon
			else if ( whatItem <= 410 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 428 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 445 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 463 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 480 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ?");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 498 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 515 )
			{

			}
			else if ( whatItem <= 533 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 550 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 568 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 585 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 603 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 620 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 638 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 655 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_buzzer" )
	{
		local WeaponName = "";
		local randomChance = RandomInt( 1, 1000 );

		// drop rate default 120 (12%)
		//1.7Ê∑áÓÜΩÊïºÈêñÂóôÂ∑ºÈçò?20 -->12
		//1.8Ê∑áÓÜΩÊïºÈêñÂóôÂ∑º -->1
		if ( randomChance > difficultyCorrect + 1 )
			return;

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 40 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			luckyCheck = 2;
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 150 );

			// Extra weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 30 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 40 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 50 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ?");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 60 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 70 )
			{

			}
			else if ( whatItem <= 80 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 90 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 100 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 110 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 120 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 130 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 140 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 150 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_parasite" )
	{
		local WeaponName = "";
		local randomChance = RandomInt( 1, 1000 );

		// drop rate default 120 (12%)
		//1.7ÈèáÂ≠òÊïºÈêñÂóôÂ∑ºÈçò?20 --> 12
		//1.8ÈèáÂ≠òÊïºÈêñÂóôÂ∑ºÈçò?2 --> 1
		if ( randomChance > difficultyCorrect + 1 )
			return;

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 40 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			luckyCheck = 2;
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 170 );

			// Extra weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 30 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 40 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 50 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 60 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 70 )
			{

			}
			else if ( whatItem <= 80 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
			else if ( whatItem <= 90 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 100 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 110 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 120 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 130 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 140 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 170 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && (victim.GetClassname() == "asw_boomer" || victim.GetClassname() == "asw_shieldbug") )
	{
		local WeaponName = "";

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 40 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			luckyCheck = 2;
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 222 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 23 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			else if ( whatItem <= 43 )
			{
				WeaponName = "asw_weapon_vindicator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 63 )
			{
				switch ( RandomInt( 1, 4 ) )
				{
					case 1:
					WeaponName = "asw_weapon_sentry";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 2:
					WeaponName = "asw_weapon_sentry_freeze";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 3:
					WeaponName = "asw_weapon_sentry_flamer";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 4:
					WeaponName = "asw_weapon_sentry_cannon";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;
				}
				ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
			}
			else if ( whatItem <= 83 )
			{
				WeaponName = "asw_weapon_minigun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 93 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 113 )
			{
				WeaponName = "asw_weapon_deagle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 133 )
			{
				//1.6ÈèáÂ≠òÊüä
				//WeaponName = "asw_weapon_flechette";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			// Extra weapon
			else if ( whatItem <= 139 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 145 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 151 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 157 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 163 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 168 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 174 )
			{

			}
			else if ( whatItem <= 180 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 186 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 192 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 198 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 204 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 210 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 216 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 222 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_harvester" )
	{
		local WeaponName = "";

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 40 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			//
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			luckyCheck = 2;
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 522 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 23 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			else if ( whatItem <= 43 )
			{
				WeaponName = "asw_weapon_vindicator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 63 )
			{
				switch ( RandomInt( 1, 4 ) )
				{
					case 1:
					WeaponName = "asw_weapon_sentry";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 2:
					WeaponName = "asw_weapon_sentry_freeze";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 3:
					WeaponName = "asw_weapon_sentry_flamer";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 4:
					WeaponName = "asw_weapon_sentry_cannon";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;
				}
				ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
			}
			else if ( whatItem <= 83 )
			{
				WeaponName = "asw_weapon_minigun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 93 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 113 )
			{
				WeaponName = "asw_weapon_deagle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 133 )
			{
				//1.6ÈèáÂ≠òÊüä
				//WeaponName = "asw_weapon_flechette";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 163 )
			{
				WeaponName = "asw_weapon_prifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 193 )
			{
				WeaponName = "asw_weapon_autogun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 223 )
			{
				//2020/01/20ÈèáÂ≠òÊüä
				WeaponName = "asw_weapon_devastator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 253 )
			{
				WeaponName = "asw_weapon_combat_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 283 )
			{
				WeaponName = "asw_weapon_heavy_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 313 )
			{
				WeaponName = "asw_weapon_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			// Extra weapon
			else if ( whatItem <= 327 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 341 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 355 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 369 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 383 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 396 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 410 )
			{

			}
			else if ( whatItem <= 424 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 438 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 452 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 466 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 480 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 494 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 508 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 522 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_drone_uber" )
	{
		local WeaponName = "";

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 40 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			//
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			luckyCheck = 2;
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 538 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 23 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			else if ( whatItem <= 43 )
			{
				WeaponName = "asw_weapon_vindicator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 63 )
			{
				switch ( RandomInt( 1, 4 ) )
				{
					case 1:
					WeaponName = "asw_weapon_sentry";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 2:
					WeaponName = "asw_weapon_sentry_freeze";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 3:
					WeaponName = "asw_weapon_sentry_flamer";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 4:
					WeaponName = "asw_weapon_sentry_cannon";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;
				}
				ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
			}
			else if ( whatItem <= 83 )
			{
				WeaponName = "asw_weapon_minigun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 103 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 123 )
			{
				WeaponName = "asw_weapon_deagle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 143 )
			{
				//1.6ÈèáÂ≠òÊüä
				//WeaponName = "asw_weapon_flechette";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 173 )
			{
				WeaponName = "asw_weapon_prifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 203 )
			{
				WeaponName = "asw_weapon_autogun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 233 )
			{
				//2020/01/20ÈèáÂ≠òÊüä
				WeaponName = "asw_weapon_devastator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 263 )
			{
				WeaponName = "asw_weapon_combat_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 293 )
			{
				WeaponName = "asw_weapon_heavy_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 323 )
			{
				WeaponName = "asw_weapon_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			// Extra weapon
			else if ( whatItem <= 337 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 352 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 366 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 380 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 395 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 409 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 423 )
			{

			}
			else if ( whatItem <= 438 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 452 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 467 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 481 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 495 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 510 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 524 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 538 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_mortarbug" )
	{
		local WeaponName = "";

		// ammo fixed
		//1.6ÈèáÂ≠òÊüä
		//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
		//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}

		// lucky chance default 20 (5%, 10%)
		local luckyCheck = RandomInt( 1, 20 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 5;
			 
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			luckyCheck = 4;
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			default:
			luckyCheck = 3;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 905 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 23 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			else if ( whatItem <= 43 )
			{
				WeaponName = "asw_weapon_vindicator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 63 )
			{
				switch ( RandomInt( 1, 4 ) )
				{
					case 1:
					WeaponName = "asw_weapon_sentry";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 2:
					WeaponName = "asw_weapon_sentry_freeze";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 3:
					WeaponName = "asw_weapon_sentry_flamer";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 4:
					WeaponName = "asw_weapon_sentry_cannon";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;
				}
				ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
			}
			else if ( whatItem <= 83 )
			{
				WeaponName = "asw_weapon_minigun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 93 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 113 )
			{
				WeaponName = "asw_weapon_deagle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 133 )
			{
				//1.6ÈèáÂ≠òÊüä
				//WeaponName = "asw_weapon_flechette";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 163 )
			{
				WeaponName = "asw_weapon_prifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 193 )
			{
				WeaponName = "asw_weapon_autogun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 223 )
			{
				////2020/01/20ÈèáÂ≠òÊüä
				WeaponName = "asw_weapon_devastator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 253 )
			{
				WeaponName = "asw_weapon_combat_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 283 )
			{
				WeaponName = "asw_weapon_heavy_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 313 )
			{
				WeaponName = "asw_weapon_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 353 )
			{
				WeaponName = "asw_weapon_tesla_gun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 393 )
			{
				WeaponName = "asw_weapon_pdw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 443 )
			{
				WeaponName = "asw_weapon_railgun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 493 )
			{
				WeaponName = "asw_weapon_mining_laser";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 543 )
			{
				//WeaponName = "asw_weapon_fire_extinguisher";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}

			// Extra weapon
			else if ( whatItem <= 567 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 591 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 615 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 640 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 664 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 688 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 712 )
			{
				WeaponName = "asw_weapon_medrifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 736 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 760 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 784 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 808 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 833 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 857 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 881 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 905 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_shaman" )
	{
		local WeaponName = "";

		local randomChance = RandomInt( 1, 1000 );

		// drop rate default 2 (0.2%)
		if ( randomChance > 2 )
			return;

		WeaponName = "asw_weapon_medkit";
		local weapon_pickup = Entities.CreateByClassname( WeaponName );
		if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

		local hMarine = null;
		while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
		{
			if(hMarine.GetMarineName() == "Bastille")
			{
				ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
				CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
				break;
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && ( victim.GetClassname() == "npc_antlionguard_normal" || victim.GetClassname() == "npc_antlionguard_cavern") )
	{
		local WeaponName = "";

		// lucky chance default 40 (2.5%, 5%)
		local luckyCheck = RandomInt( 1, 550 );

		switch ( luckyCheck )
		{
			case 1:
			luckyCheck = 3;
			
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			break;

			case 2:
			case 3:
			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
			luckyCheck = 2;
			break;

			default:
			luckyCheck = 1;
		}

		for ( local i = 0 ; i < luckyCheck ; i++)
		{
			local whatItem = RandomInt( 1, 49 );

			// Weapon
			if ( whatItem <= 100 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 200 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 230 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			else if ( whatItem <= 330 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			// Extra weapon
			else if ( whatItem <= 345 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 359 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 374 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 389 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 403 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 418 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 433 )
			{

			}
			else if ( whatItem <= 447 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 462 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 477 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 491 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 506 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 521 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 535 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 550 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
	else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_queen" )
	{
		local WeaponName = "";

		// beacon
		PlaceHealBeacon(835, 14, 0, 30, 150, victim.GetOrigin());

		// ammo fixed
		//1.6ÈèáÂ≠òÊüä
		//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
		//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
		//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
		//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
		//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
		//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
		//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
		//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
		//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
		//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}

		// 50calmg fixed
		WeaponName = "asw_weapon_50calmg";
		local weapon_pickup = Entities.CreateByClassname( WeaponName );
		if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		
		CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");

		// 1t x 2
		for ( local i = 0 ; i < 2 ; i++)
		{
			local whatItem = RandomInt( 1, 53 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 23 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			// Extra weapon
			else if ( whatItem <= 28 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 33 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 38 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 43 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			// addition
			else if ( whatItem <= 53 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
		}
		// up 4t x 5
		for ( local i = 0 ; i < 5 ; i++)
		{
			local whatItem = RandomInt( 1, 703 );

			// Weapon
			if ( whatItem <= 10 )
			{
				WeaponName = "asw_weapon_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 20 )
			{
				WeaponName = "asw_weapon_grenade_launcher";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 23 )
			{
				WeaponName = "asw_weapon_50calmg";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
			}
			else if ( whatItem <= 43 )
			{
				WeaponName = "asw_weapon_vindicator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 63 )
			{
				switch ( RandomInt( 1, 4 ) )
				{
					case 1:
					WeaponName = "asw_weapon_sentry";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 2:
					WeaponName = "asw_weapon_sentry_freeze";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 3:
					WeaponName = "asw_weapon_sentry_flamer";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;

					case 4:
					WeaponName = "asw_weapon_sentry_cannon";
					local weapon_pickup = Entities.CreateByClassname( WeaponName );
					if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
					break;
				}
				ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
			}
			else if ( whatItem <= 83 )
			{
				WeaponName = "asw_weapon_minigun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 93 )
			{
				WeaponName = "asw_weapon_chainsaw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
			}
			else if ( whatItem <= 113 )
			{
				WeaponName = "asw_weapon_deagle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}

			else if ( whatItem <= 133 )
			{
				//1.6ÈèáÂ≠òÊüä
				//WeaponName = "asw_weapon_flechette";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 163 )
			{
				WeaponName = "asw_weapon_prifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 193 )
			{
				WeaponName = "asw_weapon_autogun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 223 )
			{
				////2020/01/20ÈèáÂ≠òÊüä
				WeaponName = "asw_weapon_devastator";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 253 )
			{
				WeaponName = "asw_weapon_combat_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 283 )
			{
				WeaponName = "asw_weapon_heavy_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 313 )
			{
				WeaponName = "asw_weapon_rifle";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 353 )
			{
				WeaponName = "asw_weapon_tesla_gun";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 393 )
			{
				WeaponName = "asw_weapon_pdw";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}

			// Extra weapon
			else if ( whatItem <= 414 )
			{
				WeaponName = "asw_weapon_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 434 )
			{
				WeaponName = "asw_weapon_smart_bomb";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 455 )
			{
				WeaponName = "asw_weapon_gas_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 476 )
			{
				switch ( RandomInt( 1, 2 ) )
				{
				case 1:
				WeaponName = "asw_weapon_jump_jet";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;

				case 2:
				//WeaponName = "asw_weapon_blink";
				//local weapon_pickup = Entities.CreateByClassname( WeaponName );
				//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				break;
				}
			}
			else if ( whatItem <= 496 )
			{
				WeaponName = "asw_weapon_medkit";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Bastille")
					{
						ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 517 )
			{
				WeaponName = "asw_weapon_freeze_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wildcat")
					{
						ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 538 )
			{

			}
			else if ( whatItem <= 558 )
			{
				WeaponName = "asw_weapon_electrified_armor";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 579 )
			{
				WeaponName = "asw_weapon_laser_mines";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Sarge")
					{
						ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 600 )
			{
				WeaponName = "asw_weapon_hornet_barrage";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 620 )
			{
				WeaponName = "asw_weapon_grenades";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Wolfe")
					{
						ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 641 )
			{
				WeaponName = "asw_weapon_buff_grenade";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Vegas")
					{
						ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 661 )
			{
				WeaponName = "asw_weapon_tesla_trap";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				local hMarine = null;
				while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				{
					if(hMarine.GetMarineName() == "Crash")
					{
						ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
						CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						break;
					}
				}
			}
			else if ( whatItem <= 682 )
			{
				// WeaponName = "asw_weapon_flashlight";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			}
			else if ( whatItem <= 703 )
			{
				// WeaponName = "asw_weapon_night_vision";
				// local weapon_pickup = Entities.CreateByClassname( WeaponName );
				// if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

				// local hMarine = null;
				// while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
				// {
					// if(hMarine.GetMarineName() == "Jaeger")
					// {
						// ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
						// CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
						// break;
					// }
				// }
			}
		}
	}
}
function Magnit(){
	ParticleSpawn(0.4, 0, 0, 0, self, "explosion_barrel_heat", "ASW_Blink.Blink", "", self, 0, "", 0, "", "");
	ParticleSpawn(0.4, 0, 0, -20, self, "electrified_armor_burst", "", "", self, 0, "", 0, "", "");
	ParticleSpawn(0.4, 0, 0, 0, self, "explosion_huge_d", "ASW_JumpJet.Activate", "", self, 0, "", 0, "", "");
	ParticleSpawn(0.4, 0, 0, 0, self, "melee_suck_in_release", "", "", self, 0, "", 0, "", "");
	local hNearEnt = null;
	while ((hNearEnt = Entities.FindInSphere(hNearEnt, self.GetOrigin(), 480)) != null){
		if (hNearEnt.IsAlien()){
			hNearEnt.SetVelocity(LaunchVector(hNearEnt.GetOrigin(), self.GetOrigin(), 800, 0.4));
			hNearEnt.TakeDamage(hNearEnt.GetMaxHealth()/6, 4098, null);
		}
	}
	return 0.4;
}

function Detonate(){
	IncludeScript("0fun_ParticleSpawn.nut");
	ParticleSpawn(1, 0, 0, -20, self, "vindicator_grenade_warp", "ASW_Stim.StimInject", "", self, 0, "", 0, "", "");
	ParticleSpawn(20, 0, 0, 0, self, "jj_trail_small_flare", "", "", self, 0, "", 0, "", "");
	ParticleSpawn(20, 0, 0, 10, self, "embers_small_01", "ASW_Stim.StimInject", "", self, 0, "", 0, "", "");
	AddThinkToEnt(self, "Magnit");
	DoEntFire("!self", "Kill", "", 20, null, self);
}if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

hp <- 6000;
size <- RandomFloat(1.8,2.2);
healthbarSize <- "2";
up <- 150;

if (self.GetName() != ""){
	hp = 6000;
	size = 3;
	up = 200;
	healthbarSize = "4";
}

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.7");
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "110 60 60", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.SetModel("models/swarm/harvester/harvester.mdl");
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "217 0 108 210", healthbarSize, "0", "1", "", 0, 0, up);if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

hp <- 5000;
size <- RandomFloat(1.4,1.8);
healthbarSize <- "2";
up <- 150;

if (self.GetName() != ""){
	hp = 5000;
	size = RandomFloat(2.0,2.2);
	up = 200;
	healthbarSize = "3";
}

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.5");
	self.__KeyValueFromString("flinchable", "0");
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "0 170 85 210", healthbarSize, "0", "1", "", 0, 0, up);
function OnGameEvent_mission_failed(params){
	local classes = ["asw_drone",
		"asw_buzzer",
		"asw_parasite",
		"asw_shieldbug",
		"asw_grub",
		"asw_drone_jumper",
		"asw_harvester",
		"asw_parasite_defanged",
		"asw_queen",
		"asw_boomer",
		"asw_ranger",
		"asw_mortarbug",
		"asw_shaman",
		"asw_drone_uber",
		"npc_antlionguard_normal",
		"npc_antlionguard_cavern"];
	foreach (classname in classes){
		local ent = null;
		while ((ent = Entities.FindByClassname(ent, classname)) != null){
			DoEntFire("!self", "Kill", "", 0, null, ent);
		}
	}

	function Restart()
		Director.RestartMission();
	local target = Timer(1, Restart);

	return;
}

function OnGameEvent_weapon_reload_finish(params){
	local marine = EntIndexToHScript(params["marine"]);
	local weapon = NetProps.GetPropEntity(marine, "m_hActiveWeapon");
	if (weapon.GetClassname() == "asw_weapon_sniper_rifle")
		weapon.SetClip1(7);
	return;
}

function OnGameEvent_item_pickup(params){
	local weapon = EntIndexToHScript(params["entindex"]);
	if (regenWeaponTable1.rawin(weapon))
		regenWeaponTable1.rawdelete(weapon);
	if (lastClip1.rawin(weapon))
		lastClip1.rawdelete(weapon);
	if (regenWeaponTable2.rawin(weapon))
		regenWeaponTable2.rawdelete(weapon);
	if (lastClip2.rawin(weapon))
		lastClip2.rawdelete(weapon);
	local weaponClass = weapon.GetClassname();
	switch (weaponClass){
		case "asw_weapon_grenade_launcher":
			if (weapon.Clip1() == 0)
				BfgRecharging(weapon, 70);
			return;
		case "asw_weapon_railgun":
			if (weapon.Clip1() == 0)
				BfgRecharging(weapon, 70);
			return;
		case "asw_weapon_medkit":
			if (weapon.Clip1() >= 2)
				weapon.SetClip1(1);
			return;
		case "asw_weapon_flashlight":
			isFlashlightActive[weapon] <- true;
			return;
		default: return;
	}
	return;
}

function OnGameEvent_weapon_fire(params){
	local weapon = EntIndexToHScript(params["weapon"]);
	local marine = EntIndexToHScript(params["marine"]);
	local time = Time();
	local weaponClass = weapon.GetClassname();
	if (vecProtectionBubble && tScriptDelay + 0.2 < time && tProtectionDelay + 1 < time){
		tScriptDelay = time;
		local target = Entities.CreateByClassname("info_target");
		target.SetOrigin(vecProtectionBubble);
		local bIsInRadius = false;

		local hNearEnt = null;
		while ((hNearEnt = Entities.FindInSphere(hNearEnt, marine.GetOrigin(), 350)) != null){
			if (hNearEnt == target){
				bIsInRadius = true;
				break;
			}
		}

		if (bIsInRadius){
			tProtectionDelay = time;
			local targetScope = GetScrScope(target);
			targetScope.tProtectionDelay <- tProtectionDelay;
			targetScope.vecProtectionBubble <- vecProtectionBubble;
			targetScope.LaunchVector <- LaunchVector;
			targetScope.max <- max;
			targetScope.think <- function(){
				if (!self)
					return 1;

				if (tProtectionDelay + 1 < Time()){
					self.Destroy();
					return;
				}

				local hNearEnt = null;
				while ((hNearEnt = Entities.FindInSphere(hNearEnt, vecProtectionBubble, 400)) != null){
					if (hNearEnt.IsValid()){
						local hNearEntClassname = hNearEnt.GetClassname();
						if (hNearEntClassname == "asw_missile_round" && hNearEnt.GetOwner().GetClassname() == "asw_ranger"){
							hNearEnt.StopSound("ASW_Ranger_Projectile.Spawned");
							hNearEnt.EmitSound("Ranger.projectileImpactWorld");
							DoEntFire("!self", "Kill", "", 0, null, hNearEnt);
						} else if (hNearEnt.IsAlien() && hNearEntClassname != "asw_buzzer" && hNearEntClassname != "asw_queen"
							|| hNearEntClassname == "asw_boomer_blob"
							|| hNearEntClassname == "asw_mortarbug_shell"){
							local vecDir = hNearEnt.GetOrigin() - vecProtectionBubble;
							local vecDir = vecDir * (1/vecDir.Length());
							local pushVector = Vector(vecDir.x, vecDir.y, 0) * 1050 + Vector(0,0,100);
							hNearEnt.SetVelocity(pushVector);
						}
					}
				}

				return 0.1;
			}
			AddThinkToEnt(target, "think");
		} else target.Destroy();
	}

	if (hWildcat && marine == hWildcat)
		toggleWildcatInvis(hWildcat, AiTable, 1, -1);

	if (hWolfe && marine == hWolfe){
		if (weaponClass == "asw_weapon_minigun" && NetProps.GetPropFloat(weapon, "m_flSpinRate") == 1){
			local point1 = Entities.CreateByClassname("info_particle_system");
			DoEntFire("!self", "SetParent", "!activator", 0, weapon, point1);
			DoEntFire("!self", "SetParentAttachment", "eject1", 0, weapon, point1);

			local hParticleBeam = Entities.CreateByClassname("info_particle_system");
			hParticleBeam.__KeyValueFromString("effect_name", "grenade_main_trail");
			hParticleBeam.Spawn();
			hParticleBeam.Activate();
			local particleScope = GetScrScope(hParticleBeam);
			particleScope.point1 <- point1;
			particleScope.MarineAngles <- MarineAngles;
			particleScope.attacker <- marine;
			particleScope.Fire <- function(){
				self.SetOrigin(point1.GetOrigin());
				local angles = MarineAngles(attacker);
				local step = 0;
				if (NetProps.GetPropInt(attacker, "m_bWalking"))
					step = RandomInt(-2, 2);
				else step = RandomInt(-6, 6);
				self.SetAngles(angles.x + step, angles.y + step, 0);
				VecBulletDir <- self.GetForwardVector();
				DoEntFire("!self", "Kill", "", 0, null, point1);
				AddThinkToEnt(self, "MoveForward");
				self.DisconnectOutput("OnUser1", "Fire");
			}

			particleScope.MoveForward <- function(){
				local selfOrigin = self.GetOrigin() + VecBulletDir*40;
				if ((TraceLine(self.GetOrigin(), selfOrigin, null) != 1)){
					DoEntFire("!self", "Kill", "", 0, null, self);
					return 3;
				}

				self.SetOrigin(selfOrigin);

				local hNearEnt = null;
				while ((hNearEnt = Entities.FindInSphere(hNearEnt, selfOrigin, 8)) != null){
					local name = hNearEnt.GetName();
					if (name != "" && (name == "hangerdoor_Right" || name == "hangerdoor_Left"
						|| name == "hangerdoor_Left_top" || name == "hangerdoor_Right_top" || hNearEnt.GetClassname() == "asw_door")){
						DoEntFire("!self", "Kill", "", 0, null, self);
						return 3;
					} else if (hNearEnt.IsAlien() || hNearEnt.GetClassname() == "prop_physics")
						hNearEnt.TakeDamage(150, 256, attacker);
				}

				hNearEnt = null;
				while ((hNearEnt = Entities.FindByClassnameWithin(hNearEnt, "asw_buzzer", selfOrigin, 120)) != null){
					if (hNearEnt.IsValid()){
						VecBulletDir = hNearEnt.GetOrigin() - selfOrigin;
						VecBulletDir = VecBulletDir * (1/VecBulletDir.Length());
						self.SetForwardVector(VecBulletDir);
						break;
					}
				}

				return 0.01;
			}
			hParticleBeam.ConnectOutput("OnUser1", "Fire");
			EntFireByHandle(hParticleBeam, "Start", "", 0, self, self);
			EntFireByHandle(hParticleBeam, "FireUser1", "", 0, self, self);
			EntFireByHandle(hParticleBeam, "Kill", "", 0.4, self, self);
			return;
		} else if (weaponClass == "asw_weapon_devastator"){
			weapon.EmitSound("ASW_Weapon_Vindicator.FireAndPumpFP");
			return;
		}
	}

	if (weaponClass == "asw_weapon_grenade_launcher"){
		local point1 = Entities.CreateByClassname("info_target");
		DoEntFire("!self", "SetParent", "!activator", 0, weapon, point1);
		DoEntFire("!self", "SetParentAttachment", "muzzle", 0, weapon, point1);
		GetScrScope(point1).EntSetLocalOrigin <- EntSetLocalOrigin;
		point1.ConnectOutput("OnUser1", "EntSetLocalOrigin");
		EntFireByHandle(point1, "FireUser1", "", 0, self, self);
		DoEntFire("!self", "Kill", "", 2, null, point1);

		weapon.EmitSound("Weapon_CombineGuard.Special1");

		local muzzleGlow = ParticleSpawn(1, 0, 0, 0, "", "electrified_armor_burst2", "", "", weapon, 0, "muzzle", 0, "", "");
		GetScrScope(muzzleGlow).EntSetLocalOrigin <- EntSetLocalOrigin;
		muzzleGlow.ConnectOutput("OnUser1", "EntSetLocalOrigin");
		EntFireByHandle(muzzleGlow, "FireUser1", "", 0, self, self);

		local bfgBall = ParticleSpawn("", 0, 0, 0, "", "electric_weapon_zap_muzzle", "", "", weapon, 0, "muzzle", 0, "", "");
		GetScrScope(bfgBall).EntSetLocalOrigin <- EntSetLocalOrigin;
		bfgBall.ConnectOutput("OnUser1", "EntSetLocalOrigin");
		EntFireByHandle(bfgBall, "FireUser1", "", 0, self, self);

		local timerScope = Timer(0.1, BfgShot);
		timerScope.weapon <- weapon;
		timerScope.marine <- marine;
		timerScope.point1 <- point1;
		timerScope.StopLoop <- StopLoop;
		timerScope.MarineAngles <- MarineAngles;
		timerScope.MoveForward <- MoveForward;
		timerScope.StopTimer <- StopTimer;
		timerScope.flStartFire <- 0;
		timerScope.bfgBall <- bfgBall;
		BfgRecharging(weapon, 60);
	} else if (weaponClass == "asw_weapon_shotgun"){
		if (!shotgunTable.rawin(weapon)){
			GetScrScope(weapon).shot <- function(){
				self.SetClip1(2);
				return;
			}
			weapon.ConnectOutput("OnUser2", "shot");
			shotgunTable[weapon] <- time;
			EntFireByHandle(weapon, "FireUser2", "", 0.8, self, self);
		} else if (shotgunTable[weapon] + 0.8 <= time)
			EntFireByHandle(weapon, "FireUser2", "", 0.8, self, self);
	} else if (weaponClass == "asw_weapon_railgun"){
		BfgRecharging(weapon, 60);
	} else if (weaponClass == "asw_weapon_chainsaw"){
		if (NetProps.GetPropInt(weapon, "m_fireState") != 0 && (!(chainsaw.rawin(marine)))){
			chainsaw[marine] <- Entities.CreateByClassname("prop_dynamic");
			chainsaw[marine].__KeyValueFromString("model", "models/weapons/chainsaw/chainsaw.mdl");
			chainsaw[marine].SetOwner(marine);
			chainsaw[marine].SetOrigin(marine.GetOrigin() + marine.GetForwardVector()*100);
			local sawScope = GetScrScope(chainsaw[marine]);
			sawScope.ChainsawPos <- function(){
				self.SetLocalOrigin(Vector(200, 0, 40));
				self.Spawn();
				self.DisconnectOutput("OnUser1", "ChainsawPos");
			}
			sawScope.PitchSaw <- function(){
				local marine = null;
				if (self && self.GetOwner())
					marine = self.GetOwner();
				else return 0.1;
				self.SetAngles(0, Time()*1000, 0);
				local hNearEnt = null;
				while ((hNearEnt = Entities.FindInSphere(hNearEnt, self.GetOrigin(), 30)) != null){
					if (hNearEnt.IsValid()){
						local hNearEntClass = hNearEnt.GetClassname();
						if (hNearEnt.IsAlien() || hNearEntClass == "prop_physics")
							hNearEnt.TakeDamage(250, 4098, marine);
						else if (hNearEntClass == "asw_marine")
							hNearEnt.TakeDamage(20, 4098, marine);
						else if (hNearEntClass == "asw_door")
							hNearEnt.TakeDamage(30, 4098, null );
					}
				}
				/*
				if (self.GetLocalOrigin().x < 400 && !(TraceLine(marine.GetOrigin(), self.GetOrigin(), null) < 1))
					self.SetLocalOrigin(self.GetLocalOrigin() + Vector(20, 0, 0));
				else self.SetLocalOrigin(Vector(60, 0, 40));
				*/
				return 0.1;
			}
			AddThinkToEnt(chainsaw[marine], "PitchSaw");
			DoEntFire("!self", "SetParent", "!activator", 0, marine, chainsaw[marine]);
			chainsaw[marine].ConnectOutput("OnUser1", "ChainsawPos");
			EntFireByHandle(chainsaw[marine], "FireUser1", "", 0, self, self);
			chainsaw[marine].EmitSound("ASW_Chainsaw.attackOn");
			local target = Entities.CreateByClassname("info_particle_system");
			target.SetOrigin(chainsaw[marine].GetOrigin());
			DoEntFire("!self", "SetParent", "!activator", 0, chainsaw[marine], target);
			particleChainsawTable[chainsaw[marine]] <- ParticleSpawn("", 0, 0, 0, "", "buffgrenade_attach_arc_perm", "", "", weapon, 0, "eject", 0, target, "");
		}
	}

	return;
}

function OnGameEvent_weapon_offhand_activate(params){
	//printl("rename it to OnGameEvent_extra_button_pressed...");
	local weapon = EntIndexToHScript(params["weapon"]);
	local marine = EntIndexToHScript(params["marine"]);
	local weaponClip1 = weapon.Clip1();
	local weaponClass = weapon.GetClassname();
	switch (weaponClass){
		case "asw_weapon_stim":
			if (weaponClip1 == 0 && (!isawaliable.rawin(weapon) || isawaliable[weapon])){
				local sModelName = marine.GetModelName();
				local flMarineMaxHealth = marine.GetMaxHealth().tofloat();
				if (sModelName == "models/swarm/marine/marine.mdl" || sModelName == "models/swarm/marine/femalemarine.mdl"){
					marine.DropWeapon(0);
					marine.DropWeapon(1);
					NetProps.SetPropInt(marine, "m_bFaceMeleeYaw", 0);
					marine.SetModel("models/aliens/mortar/mortar.mdl");
					NetProps.SetPropFloat(marine, "m_flModelScale", flMarineMaxHealth/100 + 0.2);
					local flHealth = ((marine.GetHealth().tofloat()*100)/flMarineMaxHealth)/100;
					marine.SetMaxHealth(marine.GetMaxHealth()*2);
					marine.SetHealth(marine.GetMaxHealth().tofloat()*flHealth);
					marine.SetSize(Vector(-13,-13,0), Vector(13,13,72));
					local target = Entities.CreateByClassname("info_target");
					target.SetOwner(marine);
					target.SetName("0fun_mortarthink");
					local targetScope = GetScrScope(target);
					targetScope.LaunchVector <- LaunchVector;
					targetScope.bAttackedByShieldbug <- bAttackedByShieldbug;
					targetScope.hMortarProp <- hMortarProp;
					targetScope.delay <- Time() - 1.8;
					targetScope.max <- max;
					targetScope.mortarShot <- mortarShot;
					AddThinkToEnt(target, "mortarShot");
					if (sModelName == "models/swarm/marine/marine.mdl")
						isawaliable[marine] <- "male";
					else isawaliable[marine] <- "female";
					targetScope.isawaliable <- isawaliable;
				} else {
					if (sModelName == "models/aliens/mortar/mortar.mdl"){
						local targettodestroy = null;
						while((targettodestroy = Entities.FindByName(targettodestroy, "0fun_mortarthink")) != null){
							if (targettodestroy.GetOwner() == marine)
								targettodestroy.Destroy();
						}

						local flHealth = ((marine.GetHealth().tofloat()*100)/flMarineMaxHealth)/100;
						marine.SetMaxHealth(marine.GetMaxHealth()/2);
						marine.SetHealth(marine.GetMaxHealth().tofloat()*flHealth);
						if (isawaliable[marine] == "male")
							marine.SetModel("models/swarm/marine/marine.mdl");
						else marine.SetModel("models/swarm/marine/femalemarine.mdl");
						marine.SetSize(Vector(-13,-13,0), Vector(13,13,72));
						NetProps.SetPropFloat(marine, "m_flModelScale", 1);

						if (hMortarProp.rawin(marine)){
							hMortarProp[marine].Destroy();
							hMortarProp.rawdelete(marine);
							if (marine.IsInhabited()){
								NetProps.SetPropInt(marine, "movetype", 2);
							} else NetProps.SetPropInt(marine, "movetype", 3);
						}
					}
				}
				isawaliable[weapon] <- false;
			}
			return;
		case "asw_weapon_grenades":
			if (weaponClip1 != 0 && (!timeforexplosion.rawin(weapon) || timeforexplosion[weapon] + 0.3 < Time())){
				local hGrenadeCluster = Entities.CreateByClassname("asw_boomer_blob");
				hGrenadeCluster.SetOrigin(marine.GetOrigin() + marine.GetForwardVector()*30 + Vector(0, 0, 60));
				hGrenadeCluster.Spawn();
				hGrenadeCluster.Activate();
				hGrenadeCluster.SetModel("models/swarm/grenades/HandGrenadeProjectile.mdl");
				hGrenadeCluster.SetCollisionGroup(32);
				hGrenadeCluster.SetForwardVector(marine.GetForwardVector());
				NetProps.SetPropFloat(hGrenadeCluster, "m_fDetonateTime", 1337);
				local hGrenadeClusterScope = GetScrScope(hGrenadeCluster);
				hGrenadeClusterScope.Detonate <- Detonate;
				hGrenadeClusterScope.Magnit <- Magnit;
				hGrenadeClusterScope.LaunchVector <- LaunchVector;
				hGrenadeCluster.ConnectOutput("OnUser1", "Detonate");
				EntFireByHandle(hGrenadeCluster, "FireUser1", "", 3, self, self);
				PushToCursor(hGrenadeCluster, marine, 0.0, 500);
				ParticleSpawn("", 0, 0, 0, "", "grenade_smoke", "", "", hGrenadeCluster, 0, "fuse", 0, "", "");
				timeforexplosion[weapon] <- Time();
			}
			return;
		case "asw_weapon_medkit":
			if (weaponClip1 == 0 && (!isawaliable.rawin(weapon) || isawaliable[weapon])){
				marine.SetHealth(marine.GetMaxHealth());
				marine.CureInfestation();
				isawaliable[weapon] <- false;
			}
			return;
		case "asw_weapon_flashlight":
			if (marinesTable.rawin(marine)){
				if (isFlashlightActive[weapon]){
					isFlashlightActive[weapon] <- false;
				} else isFlashlightActive[weapon] <- true;
			}
			return;
		case "asw_weapon_buff_grenade":
			if (weaponClip1 == 0 && !lastAmp.rawin(weapon)){
				lastAmp[weapon] <- marine.GetMarineName();
			}
			return;
		default: return;
	}
	return;
}

function OnGameEvent_heal_beacon_placed(params)
{
	local hOldBeacon = EntIndexToHScript(params["entindex"]);
	local marine = EntIndexToHScript(params["marine"]);
	local hHealBeacon = PlaceHealBeacon(9999, 6, 0, 30, 200, hOldBeacon.GetOrigin());
	PushToCursor(hHealBeacon, marine, 0.0, 800.0);
	hOldBeacon.Destroy();
	return;
}

function OnGameEvent_damage_amplifier_placed(params)
{
	hAmp <- EntIndexToHScript(params["entindex"]);
	hMarineInDamageAmpPlacedEvent <- EntIndexToHScript(params["marine"]);
	local sMarineName = hMarineInDamageAmpPlacedEvent.GetMarineName();
	switch (sMarineName){
		case "Jaeger":
			if (!immortalOwner){
				immortalOwner = hMarineInDamageAmpPlacedEvent;
				BubbleDuration(20, immortalOwner, Jaeger);
				immortalOwner.EmitSound("ASW_ElectrifiedSuit.Loop");
				SpawnFullDome(20);
				local particle = ParticleSpawn(20, 0, 0, 10, hMarineInDamageAmpPlacedEvent, "stungrenade_arc_sprites_copy", "NPC_SScanner.DiveBomb", "NPC_SScanner.DiveBomb", hMarineInDamageAmpPlacedEvent, 0, "", 0, "", hMarineInDamageAmpPlacedEvent);
				local timerScope = Timer(0.1, SetParentDelay);
				timerScope.toget <- hMarineInDamageAmpPlacedEvent;
				timerScope.toset <- particle;
				hAmp.EmitSound("NPC_SScanner.DiveBomb");
			}
			hAmp.Destroy();
			return;
		case "Sarge":
			if (!vecProtectionBubble){
				BubbleDuration(50, SpawnFullDome(51), Sarge);
				vecProtectionBubble = hAmp.GetOrigin();
				ParticleSpawn(1, 0, 0, 25, hMarineInDamageAmpPlacedEvent, "electrified_armor_burst", "NPC_SScanner.DiveBomb", "NPC_SScanner.DiveBomb", hMarineInDamageAmpPlacedEvent, 0, "", 0, "", hMarineInDamageAmpPlacedEvent);
				hAmp.EmitSound("NPC_SScanner.DiveBomb");
			}
			hAmp.Destroy();
			return;
		case "Crash":
		case "Vegas":
			local angle = hMarineInDamageAmpPlacedEvent.GetAngles();
			local vector = hAmp.GetOrigin();
			local spawnSentryFunc = function(vector, angle, x, y, z, classname){
				local sentry = Entities.CreateByClassname(classname);
				sentry.SetOrigin(vector + Vector(x, y, z));
				sentry.SetAnglesVector(angle);
				sentry.Spawn();
				DoEntFire("!self", "Kill", "", 20, null, sentry);
				return sentry;
			}
			local sentryAnimationFunc = function(){
				if (i >= max)
					dir = "max";
				else if (i <= min)
					dir = "min";
				if (dir == "min")
					i += step;
				else if (dir == "max")
					i -= step;
				self.SetOrigin(self.GetOrigin() + Vector(0, 0, i));
				return 0.05;
			}
			local injection = function(sentry, func){
				local sentryScope = GetScrScope(sentry);
				sentryScope.func <- func;
				sentryScope.min <- -1.0;
				sentryScope.max <- 1.0;
				sentryScope.step <- 0.1;
				sentryScope.dir <- "max";
				sentryScope.i <- 0;
				AddThinkToEnt(sentry, "func");
				return;
			}
			local s1 = spawnSentryFunc(vector, angle, 0, 0, -50, "asw_sentry_top_machinegun");
			local s2 = spawnSentryFunc(vector, angle, 50, 60, -50, "asw_sentry_top_flamer");
			local s3 = spawnSentryFunc(vector, angle, -50, 60, -50, "asw_sentry_top_icer");

			injection(s1, sentryAnimationFunc);
			injection(s2, sentryAnimationFunc);
			injection(s3, sentryAnimationFunc);

			ParticleSpawn(2, 0, 0, -25, hAmp, "boomer_drop_heat", "", "", "", 0, "", 0, "", "");
			ParticleSpawn(2, 50, 90, -25, hAmp, "boomer_drop_heat", "", "", "", 0, "", 0, "", "");
			ParticleSpawn(2, -50, 90, -25, hAmp, "boomer_drop_heat", "", "", "", 0, "", 0, "", "");
			ParticleSpawn(20, 0, 0, 10, hAmp, "electric_weapon_zap_muzzle", "ASW_Sentry.Dismantled", "", s1, 0, "", 0, "", "");
			ParticleSpawn(20, 50, 60, 10, hAmp, "electric_weapon_zap_muzzle", "", "", s2, 0, "", 0, "", "");
			ParticleSpawn(20, -50, 60, 10, hAmp, "electric_weapon_zap_muzzle", "", "", s3, 0, "", 0, "", "");
			ParticleSpawn(20, 0, 0, -35, hAmp, "powerup_electric_bullets", "ASW_Blink.Teleport", "", "", 0, "", 0, "", "");
			ParticleSpawn(20, 50, 60, -35, hAmp, "powerup_electric_bullets", "", "", "", 0, "", 0, "", "");
			ParticleSpawn(20, -50, 60, -35, hAmp, "powerup_electric_bullets", "", "", "", 0, "", 0, "", "");
			ParticleSpawn(20, 0, 0, -35, hAmp, "powerup_increased_speed", "ASW_Sentry.Deploy", "", "", 0, "", 0, "", "");
			ParticleSpawn(20, 50, 60, -35, hAmp, "powerup_increased_speed", "", "", "", 0, "", 0, "", "");
			ParticleSpawn(20, -50, 60, -35, hAmp, "powerup_increased_speed", "", "", "", 0, "", 0, "", "");
			hAmp.Destroy();
			return;
		case "Faith":
		case "Bastille":
			local marine = null;
			while ((marine = Entities.FindByClassname(marine, "asw_marine")) != null){
				marine.CureInfestation();
				marine.SetHealth(marine.GetMaxHealth());
				marine.SetKnockedOut(false);
				if (!marinesTable.rawin(marine)){
					marinesTable[marine] <- marine;
					if (IsExtraEquipped("asw_weapon_flashlight", marine))
						isFlashlightActive[NetProps.GetPropEntityArray(marine, "m_hMyWeapons", 2)] <- true;
					local hParticle = ParticleSpawn(1.5, 0, 0, 0, "", "marine_resurrection", "ASWInterface.MissionBoxes", "ASWInterface.MissionBoxes", marine, 0, "Center", 0.01, "", marine);
					DoEntFire("!self", "Kill", "", 0, null, incParticleTable[marine]);
					incParticleTable.rawdelete(marine);
					incDelayTable[marine] <- Time();
					noInstaDeathAfterReviveTable[marine] <- 1;
					marine.SetMaxHealth(maxhpTable[marine]);
					maxhpTable.rawdelete(marine);
				}
				ParticleSpawn(2, 0, 0, 0, marine, "medgrenade_cross", "ASW_Medkit.Use", "", marine, 0, "", 0, "", "");
			}
			hAmp.Destroy();
			return;
		case "Wildcat":
			if (hWildcat){
				hAmp.Destroy();
				return;
			}
			hWildcat = hMarineInDamageAmpPlacedEvent;
			wildcatInvisibility = Time();
			foreach (classname in aliensArray){
				local ai_relationship = Entities.CreateByClassname("ai_relationship");
				AiTable[ai_relationship] <- ai_relationship;
				ai_relationship.__KeyValueFromString("disposition", "4");
				ai_relationship.__KeyValueFromString("rank", "999");
				ai_relationship.__KeyValueFromString("target", "#asw_name_wildcat");
				ai_relationship.__KeyValueFromString("subject", classname);
				DoEntFire("!self", "ApplyRelationship", "", 0, null, ai_relationship);
				DoEntFire("!self", "RevertToDefaultRelationship", "", 5, null, ai_relationship);
				DoEntFire("!self", "Kill", "", 5.1, null, ai_relationship);
			}
			toggleWildcatInvis(hWildcat, "", 0, 3);
			hAmp.Destroy();
			return;
		case "Wolfe":
			if (hWolfe)
				return;
			hWolfe = hMarineInDamageAmpPlacedEvent;
			wolfeDouble = Time();
			ParticleSpawn(50, 0, 0, 0, "", "ground_fire", "ASWInterface.SelectWeaponSlot", "", hWolfe, 0, "eyes", 0, "", "");
			ParticleSpawn(3, 0, 0, 65, hWolfe, "explosion_huge_c", "ASWInterface.SelectWeaponSlot", "", hWolfe, 0, "", 0, "", "");
			hAmp.Destroy();
			return;
		default: return;
	}

	return;
}

function OnGameEvent_sentry_complete(params)
{
	local sentry = EntIndexToHScript(params["entindex"]);
	sentry.SetCollisionGroup(24);
	sentry.SetSize( Vector(0,0,0), Vector(0,0,0));
	return;
}
//remove collision for sentry base
function OnGameEvent_sentry_start_building(params)
{
	local sentry = EntIndexToHScript(params["entindex"]);
	sentry.SetCollisionGroup(24);
	sentry.SetSize( Vector(0,0,0), Vector(0,0,0));
	return;
}

function OnGameEvent_entity_killed(params)
{
	// if	(!params["entindex_killed"])
		// return;
	// if	(!params["entindex_attacker"])
		// return;		
		
	local victim = EntIndexToHScript(params["entindex_killed"]);
	local attacker = EntIndexToHScript( params["entindex_attacker"] );

//ÈçòÁÜ∏ÊΩµ4fun2
	local victimClassname = victim.GetClassname();

	if (victim.IsAlien()){
		/*
		if ()
			if (explosedAliens.len() < 15)
				explosedAliens.push(victim);
			else bAccess = false;
		*/

		if (victim.GetName() == "asw_0fun_buzzer"){
			victim.StopSound("d1_town.LargeFireLoop");
			victim.StopSound("d1_town.LargeFireLoop");
		}

		if (TeslaAliensTable.rawin(victim)){
			TeslaAliensTable.rawdelete(victim);
			victim.DisconnectOutput("OnUser1", "SetDefaultSpeed");
		}

		if (victim in charmedAliens)
			charmedAliens.rawdelete(victim);

		//return;
	}

	if (victimClassname == "asw_marine"){
		if (chainsaw.rawin(victim)){
			chainsaw[victim].StopSound("ASW_Chainsaw.attackOn");
			chainsaw[victim].EmitSound("ASW_Chainsaw.Stop");
			DoEntFire("!self", "Kill", "", 0, null, particleChainsawTable[chainsaw[victim]]);
			particleChainsawTable.rawdelete(chainsaw[victim]);
			DoEntFire("!self", "Kill", "", 0, null, chainsaw[victim]);
			chainsaw.rawdelete(victim);
		}

		marinesTable.rawdelete(victim);
		if (Convars.GetStr("rd_allow_revive") == "1.000000"){
			DoEntFire("!self", "Kill", "", 0, null, incParticleTable[victim]);
			incParticleTable.rawdelete(victim);
		}

		if (victim == immortalOwner){
			victim.StopSound("ASW_ElectrifiedSuit.Loop");
			immortalOwner = null;
		}

		local targettodestroy = null;
		while((targettodestroy = Entities.FindByName(targettodestroy, "0fun_mortarthink")) != null){
			if (targettodestroy.GetOwner() == victim)
				targettodestroy.Destroy();
		}

		if (victim.GetModelName() == "models/aliens/mortar/mortar.mdl")
			victim.EmitSound("ASW_MortarBug.Death");

		if (hMortarProp.rawin(victim)){
			hMortarProp[victim].DisconnectOutput("OnUser2", "Shot");
			hMortarProp[victim].DisconnectOutput("OnUser1", "Shot");
			hMortarProp[victim].Destroy();
			hMortarProp.rawdelete(victim);
			NetProps.SetPropFloat(victim, "m_flModelScale", (victim.GetMaxHealth().tofloat()/100)/2 + 0.2);
		}
		return;  //Èêú‚ïÅÓÜçÂßùËÆ≥È™∏ÈçöÂ∫£Ê¥øÈé∫„É®ÁπëÈç•?.2ÈèáÂ≠òÊüä
	}

	// if (victimClassname == "asw_grenade_cluster"){
		// victim.Destroy();
		// return;
	// }


	if ( !attacker || !victim )
		return;
//ÈçíÂóóÂ£ä


// Power
if (  attacker != null && victim != null && attacker.GetClassname() == "asw_marine" && victim.IsAlien() )
{
	for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
	{
		switch(checkWeapon.GetClassname())
		{
			case "asw_weapon_gas_grenades":
				//CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "antlion_spit_trail");
				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "disease_buff");
				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_chemical_bullets");

				DropGasGrenade(20, 0.3, 0.1, 3, victim.GetOrigin() + Vector(0, 0, 10));
				break;

			case "asw_weapon_flashlight":
				local fireChance = RandomInt(1, 10);
				if (fireChance < 10)
				{
					victim.EmitSound("ASW_Mine.Explode");

					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_huge_k");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
					{
						if ( nearTarget.IsAlien() )
							nearTarget.Ignite(4);
						else if ( nearTarget.GetClassname() != "asw_marine" )
							nearTarget.TakeDamage(0, 8, victim);
					}
				}
				break;

			case "asw_weapon_freeze_grenades":
				if(attacker.GetMarineName() != "Wildcat")
				{
					local fireChance = RandomInt(1, 10);
					if (fireChance < 10)
					{
						victim.EmitSound("ASW_Freeze_Grenade.Explode");

						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "freeze_statue_mist");

						local nearTarget = null;
						while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
						{
							if ( nearTarget.IsAlien() )
								nearTarget.Freeze(1);
							else if ( nearTarget.GetClassname() == "asw_marine" )
								nearTarget.Extinguish();
						}
					}
				}
				break;

			case "asw_weapon_electrified_armor":
				local fireChance = RandomInt(1, 10);
				if (fireChance < 10)
				{
					victim.EmitSound("ASW_Tesla_Laser.Damage");

					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "stungrenade_arc_sprites");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
					{
						if ( nearTarget.IsAlien() )
							nearTarget.ElectroStun(4);
					}
				}
				break;

			case "asw_weapon_jump_jet":
				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "boomer_drop_shockwave1");

				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 150)) != null)
				{
					if (nearTarget.GetClassname() == "asw_shieldbug" || nearTarget.GetClassname() == "asw_antlionguard_normal" || nearTarget.GetClassname() == "asw_antlionguard_cavern" || nearTarget.GetClassname() == "asw_boomer" || nearTarget.GetClassname() == "asw_harvester" || nearTarget.GetClassname() == "asw_drone_uber" || nearTarget.GetClassname() == "asw_mortarbug")
					{
						nearTarget.SetVelocity(Vector(0, 0, 240));
					}
					else if (nearTarget.GetClassname() == "asw_queen")
						{}
					else if (nearTarget.IsAlien())
					{
						nearTarget.SetVelocity(Vector(0, 0, 300));
					}

				}
				break;

			case "asw_weapon_laser_mines":
				if(attacker.GetMarineName() == "Sarge")
				{
					switch (RandomInt(1, 4))
					{
						case 1:
						//8
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(0, 20, 0), Vector(sargeAng, 270, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(0, 20, 0), Vector(sargeAng, 270, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(17.32, -10, 0), Vector(sargeAng, 150, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(17.32, -10, 0), Vector(sargeAng, 150, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(-17.32, -10, 0), Vector(sargeAng, 30, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(-17.32, -10, 0), Vector(sargeAng, 30, 0));
						break;
						case 2:
						//2
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(0, -20, 0), Vector(sargeAng, 90, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(0, -20, 0), Vector(sargeAng, 90, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(-17.32, 10, 0), Vector(sargeAng, 330, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(-17.32, 10, 0), Vector(sargeAng, 330, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(17.32, 10, 0), Vector(sargeAng, 210, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(17.32, 10, 0), Vector(sargeAng, 210, 0));
						break;
						case 3:
						//4
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(-20, 0, 0), Vector(sargeAng, 0, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(-20, 0, 0), Vector(sargeAng, 0, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(10, 17.32, 0), Vector(sargeAng, 240, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(10, 17.32, 0), Vector(sargeAng, 240, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(10, -17.32, 0), Vector(sargeAng, 120, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(10, -17.32, 0), Vector(sargeAng, 120, 0));
						break;
						case 4:
						//6
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(20, 0, 0), Vector(sargeAng, 180, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(20, 0, 0), Vector(sargeAng, 180, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(-10, -17.32, 0), Vector(sargeAng, 60, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(-10, -17.32, 0), Vector(sargeAng, 60, 0));
						if( RandomInt(1, 200) == 1 )
							PlantLaserMine(false, victim.GetOrigin() + Vector(-10, 17.32, 0), Vector(sargeAng, 300, 0));
						else
							PlantLaserMine(true, victim.GetOrigin() + Vector(-10, 17.32, 0), Vector(sargeAng, 300, 0));
						break;
					}
				}
				else
				{
					local who = 10;

					switch(attacker.GetMarineName())
					{
						case "Jaeger":	who = 50;	break;
						case "Crash":	who = 30;	break;
					}
					if( RandomInt(1, 100) <= who )
						PlantLaserMine(false, victim.GetOrigin(), Vector(-90, 0, 0));
					else
						PlantLaserMine(true, victim.GetOrigin(), Vector(-90, 0, 0));
				}
				break;

			case "asw_weapon_hornet_barrage":
				CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "explosion_shockwave1");

				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, attacker.GetOrigin(), 130)) != null)
				{
					if ( nearTarget.IsAlien() )
					{
						if ( nearTarget.GetClassname() == "asw_parasite" ||
						nearTarget.GetClassname() == "asw_parasite_defanged" ||
						nearTarget.GetClassname() == "asw_buzzer" ||
						nearTarget.GetClassname() == "asw_shaman" )
							nearTarget.TakeDamage(256, 0, victim);
						else
							nearTarget.TakeDamage(20, 0, victim);
					}
				}
				break;

			case "asw_weapon_smart_bomb":
				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_shockwave1");

				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 130)) != null)
				{
					if ( nearTarget.IsAlien() )
					{
						if ( nearTarget.GetClassname() == "asw_parasite" ||
						nearTarget.GetClassname() == "asw_parasite_defanged" ||
						nearTarget.GetClassname() == "asw_buzzer" ||
						nearTarget.GetClassname() == "asw_shaman" )
							nearTarget.TakeDamage(256, 0, victim);
						else
							nearTarget.TakeDamage(20, 0, victim);
					}
				}
				break;

			case "asw_weapon_medkit":
				if(attacker.GetMarineName() == "Bastille")
				{
					PlaceHealBeacon(40, 5, 5, 3, 80, victim.GetOrigin() + Vector(0, 0, 10));
				}

				if(attacker.GetHealth() < attacker.GetMaxHealth())
				{
					CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "antlion_gib_02_trailsB");

					if( attacker.GetHealth() >= attacker.GetMaxHealth() - 4 )
					{
						attacker.EmitSound("ASW_HealGun.StartHeal");
						CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
					}
				}
				attacker.SetHealth(attacker.GetHealth() + 4);

				if(attacker.GetHealth() > attacker.GetMaxHealth())
					attacker.SetHealth(attacker.GetMaxHealth());
				break;

			case "asw_weapon_buff_grenade":
				if(attacker.GetMarineName() == "Vegas")
				{
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "ammo_satchel_take_lrg");

					local boomChance = RandomInt( 1, 1000 );
					if ( boomChance <= 1 )
					{
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
						CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
						//1.6ÈêóÂ†üÊπ∞ÈèáÂ≠òÊüä
						//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
						//ammo.SetOrigin( victim.GetOrigin() ); ammo.Spawn();
					}
				}
				break;
		}
	}
}

if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && (victim.GetClassname() == "asw_drone" || victim.GetClassname() == "asw_drone_jumper"))
{
	local WeaponName = "";
	local randomChance = RandomInt( 1, 1000 );

	// drop rate default 80 (8%)
	//ÈèÄ?
	//1.7ÈèÄËßÑÂûö1 (Ê∂îÁÜ∑Ê∞®ÈèÑÓàúÂûéÈêúÂõßÂΩâÈé¥?/1000)
	if ( randomChance > difficultyCorrect + 1 )
		return;

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 40 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		//CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		luckyCheck = 2;
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 900 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 40 )
		{
			WeaponName = "asw_weapon_vindicator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 60 )
		{
			switch ( RandomInt( 1, 4 ) )
			{
				case 1:
				WeaponName = "asw_weapon_sentry";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 2:
				WeaponName = "asw_weapon_sentry_freeze";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 3:
				WeaponName = "asw_weapon_sentry_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 4:
				WeaponName = "asw_weapon_sentry_cannon";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;
			}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
		}
		else if ( whatItem <= 80 )
		{
			WeaponName = "asw_weapon_minigun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 90 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 110 )
		{
			WeaponName = "asw_weapon_deagle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 130 )
		{
			//1.6ÈèáÂ≠òÊüä
			//WeaponName = "asw_weapon_flechette";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 170 )
		{
			WeaponName = "asw_weapon_prifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 190 )
		{
			WeaponName = "asw_weapon_autogun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 220 )
		{
			//2020/01/20ÈèáÂ≠òÊüä
			WeaponName = "asw_weapon_devastator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 250 )
		{
			WeaponName = "asw_weapon_combat_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 280 )
		{
			WeaponName = "asw_weapon_heavy_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 310 )
		{
			WeaponName = "asw_weapon_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 350 )
		{
			WeaponName = "asw_weapon_tesla_gun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 390 )
		{
			WeaponName = "asw_weapon_pdw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 440 )
		{
			WeaponName = "asw_weapon_railgun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 490 )
		{
			WeaponName = "asw_weapon_mining_laser";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 540 )
		{
			//WeaponName = "asw_weapon_fire_extinguisher";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}

		// Extra weapon
		else if ( whatItem <= 564 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 588 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 612 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 636 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 660 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 684 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 708 )
		{

		}
		else if ( whatItem <= 732 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 756 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 780 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 804 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 828 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 852 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 876 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 900 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_ranger" )
{
	local WeaponName = "";
	local randomChance = RandomInt( 1, 1000 );

	// drop rate default 100 (10%)
	//1.7Ê∑áÓÜΩÊïºÈêñÂóôÂ∑ºÈçò?00 -> 10
	//1.8Ê∑áÓÜΩÊïºÈêñÂóôÂ∑º -->1
	if ( randomChance > difficultyCorrect + 1 )
		return;

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 40 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		luckyCheck = 2;
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 655 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 23 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		else if ( whatItem <= 43 )
		{
			WeaponName = "asw_weapon_vindicator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 63 )
		{
			switch ( RandomInt( 1, 4 ) )
			{
				case 1:
				WeaponName = "asw_weapon_sentry";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 2:
				WeaponName = "asw_weapon_sentry_freeze";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 3:
				WeaponName = "asw_weapon_sentry_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 4:
				WeaponName = "asw_weapon_sentry_cannon";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;
			}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
		}
		else if ( whatItem <= 83 )
		{
			WeaponName = "asw_weapon_minigun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 93 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 113 )
		{
			WeaponName = "asw_weapon_deagle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 133 )
		{
			//1.6ÈèáÂ≠òÊüä
			//WeaponName = "asw_weapon_flechette";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 163 )
		{
			WeaponName = "asw_weapon_prifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 193 )
		{
			WeaponName = "asw_weapon_autogun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 223 )
		{
			////2020/01/20ÈèáÂ≠òÊüä
			WeaponName = "asw_weapon_devastator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 253 )
		{
			WeaponName = "asw_weapon_combat_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 283 )
		{
			WeaponName = "asw_weapon_heavy_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 313 )
		{
			WeaponName = "asw_weapon_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 353 )
		{
			WeaponName = "asw_weapon_tesla_gun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 393 )
		{
			WeaponName = "asw_weapon_pdw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}

		// Extra weapon
		else if ( whatItem <= 410 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 428 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 445 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 463 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 480 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 498 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 515 )
		{

		}
		else if ( whatItem <= 533 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 550 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 568 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 585 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 603 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 620 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 638 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 655 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_buzzer" )
{
	local WeaponName = "";
	local randomChance = RandomInt( 1, 1000 );

	// drop rate default 120 (12%)
	//1.7Ê∑áÓÜΩÊïºÈêñÂóôÂ∑ºÈçò?20 -> 12
	//1.8Ê∑áÓÜΩÊïºÈêñÂóôÂ∑º -->1
	if ( randomChance > difficultyCorrect + 1 )
		return;

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 40 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		luckyCheck = 2;
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 150 );

		// Extra weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 30 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 40 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 50 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 60 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 70 )
		{

		}
		else if ( whatItem <= 80 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 90 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 100 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 110 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 120 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 130 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 140 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 150 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_parasite" )
{
	local WeaponName = "";
	local randomChance = RandomInt( 1, 1000 );

	// drop rate default 120 (12%)
	//1.7Ê∑áÓÜΩÊïºÈêñÂóôÂ∑ºÈçò?20 -> 12
	//1.8Ê∑áÓÜΩÊïºÈêñÂóôÂ∑º -->1
	if ( randomChance > difficultyCorrect + 1 )
		return;

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 40 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		luckyCheck = 2;
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 170 );

		// Extra weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 30 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 40 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 50 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 60 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 70 )
		{

		}
		else if ( whatItem <= 80 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 90 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 100 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 110 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 120 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 130 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 140 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 170 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && (victim.GetClassname() == "asw_boomer" || victim.GetClassname() == "asw_shieldbug") )
{
	local WeaponName = "";

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 40 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		luckyCheck = 2;
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 222 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 23 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		else if ( whatItem <= 43 )
		{
			WeaponName = "asw_weapon_vindicator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 63 )
		{
			switch ( RandomInt( 1, 4 ) )
			{
				case 1:
				WeaponName = "asw_weapon_sentry";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 2:
				WeaponName = "asw_weapon_sentry_freeze";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 3:
				WeaponName = "asw_weapon_sentry_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 4:
				WeaponName = "asw_weapon_sentry_cannon";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;
			}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
		}
		else if ( whatItem <= 83 )
		{
			WeaponName = "asw_weapon_minigun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 93 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 113 )
		{
			WeaponName = "asw_weapon_deagle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 133 )
		{
			//1.6ÈèáÂ≠òÊüä
			//WeaponName = "asw_weapon_flechette";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		// Extra weapon
		else if ( whatItem <= 139 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 145 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 151 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 157 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 163 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 168 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 174 )
		{

		}
		else if ( whatItem <= 180 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 186 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 192 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 198 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 204 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 210 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 216 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 222 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_harvester" )
{
	local WeaponName = "";

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 40 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		luckyCheck = 2;
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 522 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 23 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		else if ( whatItem <= 43 )
		{
			WeaponName = "asw_weapon_vindicator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 63 )
		{
			switch ( RandomInt( 1, 4 ) )
			{
				case 1:
				WeaponName = "asw_weapon_sentry";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 2:
				WeaponName = "asw_weapon_sentry_freeze";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 3:
				WeaponName = "asw_weapon_sentry_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 4:
				WeaponName = "asw_weapon_sentry_cannon";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;
			}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
		}
		else if ( whatItem <= 83 )
		{
			WeaponName = "asw_weapon_minigun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 93 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 113 )
		{
			WeaponName = "asw_weapon_deagle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 133 )
		{
			//1.6ÈèáÂ≠òÊüä
			//WeaponName = "asw_weapon_flechette";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 163 )
		{
			WeaponName = "asw_weapon_prifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 193 )
		{
			WeaponName = "asw_weapon_autogun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 223 )
		{
			////2020/01/20ÈèáÂ≠òÊüä
			WeaponName = "asw_weapon_devastator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 253 )
		{
			WeaponName = "asw_weapon_combat_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 283 )
		{
			WeaponName = "asw_weapon_heavy_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 313 )
		{
			WeaponName = "asw_weapon_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		// Extra weapon
		else if ( whatItem <= 327 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 341 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 355 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 369 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 383 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 396 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 410 )
		{

		}
		else if ( whatItem <= 424 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 438 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 452 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 466 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 480 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 494 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 508 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 522 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_drone_uber" )
{
	local WeaponName = "";

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 40 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		luckyCheck = 2;
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 538 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 23 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		else if ( whatItem <= 43 )
		{
			WeaponName = "asw_weapon_vindicator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 63 )
		{
			switch ( RandomInt( 1, 4 ) )
			{
				case 1:
				WeaponName = "asw_weapon_sentry";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 2:
				WeaponName = "asw_weapon_sentry_freeze";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 3:
				WeaponName = "asw_weapon_sentry_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 4:
				WeaponName = "asw_weapon_sentry_cannon";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;
			}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
		}
		else if ( whatItem <= 83 )
		{
			WeaponName = "asw_weapon_minigun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 103 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 123 )
		{
			WeaponName = "asw_weapon_deagle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 143 )
		{
			//1.6ÈèáÂ≠òÊüä
			//WeaponName = "asw_weapon_flechette";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 173 )
		{
			WeaponName = "asw_weapon_prifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 203 )
		{
			WeaponName = "asw_weapon_autogun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 233 )
		{
			//2020/01/20ÈèáÂ≠òÊüä
			WeaponName = "asw_weapon_devastator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 263 )
		{
			WeaponName = "asw_weapon_combat_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 293 )
		{
			WeaponName = "asw_weapon_heavy_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 323 )
		{
			WeaponName = "asw_weapon_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		// Extra weapon
		else if ( whatItem <= 337 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 352 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 366 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 380 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 395 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ?");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 409 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 423 )
		{

		}
		else if ( whatItem <= 438 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 452 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 467 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 481 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 495 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 510 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 524 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 538 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_mortarbug" )
{
	local WeaponName = "";

	// ammo fixed
	//1.6ÈèáÂ≠òÊüä
	//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
	//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}

	// lucky chance default 20 (5%, 10%)
	local luckyCheck = RandomInt( 1, 20 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 5;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !!!");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		luckyCheck = 4;
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		default:
		luckyCheck = 3;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 905 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 23 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		else if ( whatItem <= 43 )
		{
			WeaponName = "asw_weapon_vindicator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 63 )
		{
			switch ( RandomInt( 1, 4 ) )
			{
				case 1:
				WeaponName = "asw_weapon_sentry";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 2:
				WeaponName = "asw_weapon_sentry_freeze";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 3:
				WeaponName = "asw_weapon_sentry_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 4:
				WeaponName = "asw_weapon_sentry_cannon";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;
			}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
		}
		else if ( whatItem <= 83 )
		{
			WeaponName = "asw_weapon_minigun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 93 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 113 )
		{
			WeaponName = "asw_weapon_deagle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 133 )
		{
			//1.6ÈèáÂ≠òÊüä
			//WeaponName = "asw_weapon_flechette";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 163 )
		{
			WeaponName = "asw_weapon_prifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 193 )
		{
			WeaponName = "asw_weapon_autogun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 223 )
		{
			////2020/01/20ÈèáÂ≠òÊüä
			WeaponName = "asw_weapon_devastator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 253 )
		{
			WeaponName = "asw_weapon_combat_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 283 )
		{
			WeaponName = "asw_weapon_heavy_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 313 )
		{
			WeaponName = "asw_weapon_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 353 )
		{
			WeaponName = "asw_weapon_tesla_gun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 393 )
		{
			WeaponName = "asw_weapon_pdw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 443 )
		{
			WeaponName = "asw_weapon_railgun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 493 )
		{
			WeaponName = "asw_weapon_mining_laser";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 543 )
		{
			//WeaponName = "asw_weapon_fire_extinguisher";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}

		// Extra weapon
		else if ( whatItem <= 567 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 591 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 615 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 640 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 664 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 688 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 712 )
		{
			WeaponName = "asw_weapon_medrifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 736 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 760 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 784 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 808 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 833 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 857 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 881 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 905 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_shaman" )
{
	local WeaponName = "";

	local randomChance = RandomInt( 1, 1000 );

	// drop rate default 2 (0.2%)
	if ( randomChance > 2 )
		return;

	WeaponName = "asw_weapon_medkit";
	local weapon_pickup = Entities.CreateByClassname( WeaponName );
	if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

	local hMarine = null;
	while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
	{
		if(hMarine.GetMarineName() == "Bastille")
		{
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
			CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
			break;
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && ( victim.GetClassname() == "npc_antlionguard_normal" || victim.GetClassname() == "npc_antlionguard_cavern") )
{
	local WeaponName = "";

	// lucky chance default 40 (2.5%, 5%)
	local luckyCheck = RandomInt( 1, 550 );

	switch ( luckyCheck )
	{
		case 1:
		luckyCheck = 3;
		////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁíßÊâÆÂ´çÁÅûÂ∫§Áπç !");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		break;

		case 2:
		case 3:
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "embers_medium_0New");
		luckyCheck = 2;
		break;

		default:
		luckyCheck = 1;
	}

	for ( local i = 0 ; i < luckyCheck ; i++)
	{
		local whatItem = RandomInt( 1, 49 );

		// Weapon
		if ( whatItem <= 100 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 200 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 230 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		else if ( whatItem <= 330 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ  !");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		// Extra weapon
		else if ( whatItem <= 345 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 359 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 374 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 389 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 403 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ?");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 418 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 433 )
		{

		}
		else if ( whatItem <= 447 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 462 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 477 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 491 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 506 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 521 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 535 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 550 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}
}
else if ( attacker.GetClassname() == "asw_marine" && victim.IsAlien() && victim.GetClassname() == "asw_queen" )
{
	local WeaponName = "";

	// beacon
	PlaceHealBeacon(835, 14, 0, 30, 150, victim.GetOrigin());

	// ammo fixed
	//1.6ÈèáÂ≠òÊüä
	//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
	//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
	//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
	//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
	//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
	//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
	//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
	//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}
	//local ammo = Entities.CreateByClassname( "asw_ammo_drop" );
	//if ( ammo ) {ammo.SetOrigin( victim.GetOrigin() );ammo.Spawn();}

	// 50calmg fixed
	WeaponName = "asw_weapon_50calmg";
	local weapon_pickup = Entities.CreateByClassname( WeaponName );
	if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
	////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
	CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");

	// 1t x 2
	for ( local i = 0 ; i < 2 ; i++)
	{
		local whatItem = RandomInt( 1, 53 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 23 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		// Extra weapon
		else if ( whatItem <= 28 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 33 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 38 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 43 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		// addition
		else if ( whatItem <= 53 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
	}
	// up 4t x 5
	for ( local i = 0 ; i < 5 ; i++)
	{
		local whatItem = RandomInt( 1, 703 );

		// Weapon
		if ( whatItem <= 10 )
		{
			WeaponName = "asw_weapon_flamer";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èç†È£é‰ºÄÈç£?");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 20 )
		{
			WeaponName = "asw_weapon_grenade_launcher";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÂßíÊùëËÑäÈçôÊàùÁö†Èç£?!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 23 )
		{
			WeaponName = "asw_weapon_50calmg";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "SUPER !!!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "marine_resurrection_glow2");
		}
		else if ( whatItem <= 43 )
		{
			WeaponName = "asw_weapon_vindicator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 63 )
		{
			switch ( RandomInt( 1, 4 ) )
			{
				case 1:
				WeaponName = "asw_weapon_sentry";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 2:
				WeaponName = "asw_weapon_sentry_freeze";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 3:
				WeaponName = "asw_weapon_sentry_flamer";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;

				case 4:
				WeaponName = "asw_weapon_sentry_cannon";
				local weapon_pickup = Entities.CreateByClassname( WeaponName );
				if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
				CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
				break;
			}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêêÓÜºÂΩ¥ !");
		}
		else if ( whatItem <= 83 )
		{
			WeaponName = "asw_weapon_minigun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 93 )
		{
			WeaponName = "asw_weapon_chainsaw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èê¢Áî∏ÊïÆ!");
			CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "ms_explosion_groundring");
		}
		else if ( whatItem <= 113 )
		{
			WeaponName = "asw_weapon_deagle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}

		else if ( whatItem <= 133 )
		{
			//1.6ÈèáÂ≠òÊüä
			//WeaponName = "asw_weapon_flechette";
			//local weapon_pickup = Entities.CreateByClassname( WeaponName );
			//if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 163 )
		{
			WeaponName = "asw_weapon_prifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 193 )
		{
			WeaponName = "asw_weapon_autogun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 223 )
		{
			//2020/01/20ÈèáÂ≠òÊüä
			WeaponName = "asw_weapon_devastator";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 253 )
		{
			WeaponName = "asw_weapon_combat_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 283 )
		{
			WeaponName = "asw_weapon_heavy_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 313 )
		{
			WeaponName = "asw_weapon_rifle";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 353 )
		{
			WeaponName = "asw_weapon_tesla_gun";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 393 )
		{
			WeaponName = "asw_weapon_pdw";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}

		// Extra weapon
		else if ( whatItem <= 414 )
		{
			WeaponName = "asw_weapon_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 434 )
		{
			WeaponName = "asw_weapon_smart_bomb";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 455 )
		{
			WeaponName = "asw_weapon_gas_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 476 )
		{
			switch ( RandomInt( 1, 2 ) )
			{
			case 1:
			WeaponName = "asw_weapon_jump_jet";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;

			case 2:
			WeaponName = "asw_weapon_blink";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
			break;
			}
		}
		else if ( whatItem <= 496 )
		{
			WeaponName = "asw_weapon_medkit";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Bastille")
				{
					////3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÁÅèÂøöÓîÖÈçñ? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 517 )
		{
			WeaponName = "asw_weapon_freeze_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wildcat")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈçêÊùøÂñïÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 538 )
		{

		}
		else if ( whatItem <= 558 )
		{
			WeaponName = "asw_weapon_electrified_armor";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 579 )
		{
			WeaponName = "asw_weapon_laser_mines";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Sarge")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Èé∞ÁÜ∑Á∞≤Èç¶‰º¥ÊµÑ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 600 )
		{
			WeaponName = "asw_weapon_hornet_barrage";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 620 )
		{
			WeaponName = "asw_weapon_grenades";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Wolfe")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈéµÂ¨ÆÊµÑ!");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 641 )
		{
			WeaponName = "asw_weapon_buff_grenade";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Vegas")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êøû‰Ω∏ÂßèÊæßÁÇ≤Â∑±ÁëÅÂëØÁñÜ! ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 661 )
		{
			WeaponName = "asw_weapon_tesla_trap";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Crash")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "ÈêóËßÑÊüâÈé∑Â§åÂöéÈç¶? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
		else if ( whatItem <= 682 )
		{
			WeaponName = "asw_weapon_flashlight";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}
		}
		else if ( whatItem <= 703 )
		{
			WeaponName = "asw_weapon_night_vision";
			local weapon_pickup = Entities.CreateByClassname( WeaponName );
			if ( weapon_pickup ){weapon_pickup.SetOrigin( victim.GetOrigin() );weapon_pickup.Spawn();}

			local hMarine = null;
			while((hMarine = Entities.FindByClassname(hMarine, "asw_marine")) != null )
			{
				if(hMarine.GetMarineName() == "Jaeger")
				{
					//3.5ÈèáÂ≠òÊüäÂ®â„Ñ©Âô¥Èé∫Â§ãÂΩÅÁªÄ?ClientPrint(null, 3, "Êæ∂ÊªÜÓùãÊµ†? ");
					CreateParticleFunc(2, weapon_pickup.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					CreateParticleFunc(2, hMarine.GetOrigin(), Vector(0, 0, 0), "melee_suck_in_release");
					break;
				}
			}
		}
	}











	return;
}
}
function OnGameEvent_marine_incapacitated(params)
{
	local incapacitated = EntIndexToHScript(params["entindex"]);
	if (chainsaw.rawin(incapacitated)){
		chainsaw[incapacitated].StopSound("ASW_Chainsaw.attackOn");
		chainsaw[incapacitated].EmitSound("ASW_Chainsaw.Stop");
		DoEntFire("!self", "Kill", "", 0, null, particleChainsawTable[chainsaw[incapacitated]]);
		particleChainsawTable.rawdelete(chainsaw[incapacitated]);
		DoEntFire("!self", "Kill", "", 0, null, chainsaw[incapacitated]);
		chainsaw.rawdelete(incapacitated);
	}

	if (incapacitated.GetModelName() == "models/aliens/mortar/mortar.mdl"){
		local targettodestroy = null;
		while((targettodestroy = Entities.FindByName(targettodestroy, "0fun_mortarthink")) != null){
			if (targettodestroy.GetOwner() == incapacitated)
				targettodestroy.Destroy();
		}

		local flMarineMaxHealth = incapacitated.GetMaxHealth().tofloat();
		local flHealth = ((incapacitated.GetHealth().tofloat()*100)/flMarineMaxHealth)/100;
		incapacitated.SetMaxHealth(incapacitated.GetMaxHealth()/2);
		incapacitated.SetHealth(incapacitated.GetMaxHealth().tofloat()*flHealth);
		if (isawaliable[incapacitated] == "male")
			incapacitated.SetModel("models/swarm/marine/marine.mdl");
		else incapacitated.SetModel("models/swarm/marine/femalemarine.mdl");
		incapacitated.SetSize(Vector(-13,-13,0), Vector(13,13,72));
		NetProps.SetPropFloat(incapacitated, "m_flModelScale", 1);

		if (hMortarProp.rawin(incapacitated)){
			hMortarProp[incapacitated].Destroy();
			hMortarProp.rawdelete(incapacitated);
			if (incapacitated.IsInhabited()){
				NetProps.SetPropInt(incapacitated, "movetype", 2);
			} else NetProps.SetPropInt(incapacitated, "movetype", 3);
		}
	}

	incParticleTable[incapacitated] <- ParticleSpawn("", 0, 0, 30, incapacitated, "rifle_grenade_pulse", "BaseCombatWeapon.WeaponMaterialize", "BaseCombatWeapon.WeaponMaterialize", incapacitated, 0, "", 0, "", incapacitated);
	incParticleTable[incapacitated].SetOwner(incapacitated);
	local targetScope = GetScrScope(incParticleTable[incapacitated]);
	targetScope.maxhpTable <- maxhpTable;
	targetScope.Delay <- function(){
		local marine = self.GetOwner();
		maxhpTable[marine] <- marine.GetMaxHealth();
		g_ModeScript.maxhpTable <- maxhpTable;
		marine.SetMaxHealth(100);
		marine.SetHealth(100);
		self.DisconnectOutput("OnUser1", "Delay");
	}
	incParticleTable[incapacitated].ConnectOutput("OnUser1", "Delay");
	EntFireByHandle(incParticleTable[incapacitated], "FireUser1", "", 0, self, self);
	if (marinesTable.rawin(incapacitated))
		marinesTable.rawdelete(incapacitated);

	return;
}

function OnGameEvent_marine_revived(params)
{
	local revived = EntIndexToHScript(params["entindex"]);
	if (IsExtraEquipped("asw_weapon_flashlight", revived))
		isFlashlightActive[NetProps.GetPropEntityArray(revived, "m_hMyWeapons", 2)] <- true;
	local hParticle = ParticleSpawn(1.5, 0, 0, 0, "", "marine_resurrection", "ASWInterface.MissionBoxes", "ASWInterface.MissionBoxes", revived, 0, "Center", 0.01, "", revived);
	DoEntFire("!self", "Kill", "", 0, null, incParticleTable[revived]);
	incParticleTable.rawdelete(revived);
	incDelayTable[revived] <- Time();
	noInstaDeathAfterReviveTable[revived] <- 1;
	marinesTable[revived] <- revived;
	revived.SetMaxHealth(maxhpTable[revived]);
	maxhpTable.rawdelete(revived);
	return;
}
/*
function OnGameEvent_buzzer_spawn(params){
	local buzzer = EntIndexToHScript(params["entindex"]);

	if (g_StartTime + 5 > Time())
		return;

	if (buzzer.GetName() == "")
		DestroyViaDamageDelay(180, buzzer, 1000000000, 4098);

	return;
}

function OnGameEvent_alien_spawn(params){
	local alien = EntIndexToHScript(params["entindex"]);

	if (g_StartTime + 5 > Time())
		return;

	if (alien.GetName() == "")
		DestroyViaDamageDelay(180, alien, 1000000000, 4098);

	return;
}*/


function OnGameEvent_fast_reload(params)
{
	local marine = EntIndexToHScript(params["marine"]);

	for (local checkWeapon = marine.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
	{
		if(checkWeapon.GetClassname() == "asw_weapon_welder")
		{
			marine.EmitSound("ASW_Tesla_Laser.Damage");

			//CreateParticleFunc(2, marine.GetOrigin(), Vector(0, 0, 0), "stungrenade_arc_sprites");
			CreateParticleFunc(2, marine.GetOrigin() + Vector(0, 0, 0), Vector(0, 0, 0), "blink");
			CreateParticleFunc(2, marine.GetOrigin() + Vector(0, 0, 0), Vector(0, 0, 0), "blink");
			CreateParticleFunc(2, marine.GetOrigin() + Vector(0, 0, 0), Vector(0, 0, 0), "blink");

			local nearTarget = null;
			while((nearTarget = Entities.FindInSphere(nearTarget, marine.GetOrigin(), 120)) != null)
			{
				if ( nearTarget.IsAlien() )
					nearTarget.ElectroStun(0.75);
			}
			break;
		}
	}
	return;
}


function CreateParticleFunc(flAliveTime, VecOrigin, VecAngles, strParticleClass)
{
	local hParticle = Entities.CreateByClassname("info_particle_system");
	hParticle.__KeyValueFromString("effect_name", strParticleClass);
	hParticle.__KeyValueFromString("start_active", "1");
	hParticle.SetOrigin(VecOrigin);
	hParticle.SetAnglesVector(VecAngles);
	hParticle.Spawn();
	hParticle.Activate();
	DoEntFire("!self", "Kill", "", flAliveTime, null, hParticle);
}
function OnTakeDamage_Alive_Any( victim, inflictor, attacker, weapon, damage, damageType, ammoName )
{

local exDamage = 0;
local criDamage = 0;

	local is_extinguisher = 0; 
	local is_flamer = 0; 
    //ÈêèÓÖ†‰ºÄÈç£„Ñ§ÁÆ£Áª´Ëç§ÊÆëÊ∂ìÂ∂ÖÂïÄÁëôÔπÄÂΩÇ
	if( attacker != null && victim != null && victim.IsAlien() && attacker.GetClassname() == "asw_marine" && ammoName != null && ammoName == "asw_extinguisher_projectile" )
	{
		is_extinguisher =1;
		return;
	}


    //Èç†È£é‰ºÄÈèãÓÅÉÁ¨âÈçêÂ∂à–ïÈçô?
	if( attacker != null && victim != null && victim.IsAlien() && attacker.GetClassname() == "asw_marine" && weapon != null && weapon.GetClassname() == "asw_weapon_flamer" )
	{
		is_flamer =1;
		return;
	}

// Cri
if( attacker != null && victim != null && victim.IsAlien() && attacker.GetClassname() == "asw_marine" && weapon != null && weapon.GetClassname() == "asw_weapon_sniper_rifle" )
{
	local criChance = RandomInt(1, 96);

	if ( victim.GetHealth() == victim.GetMaxHealth() )
		criChance -= 18;

	if ( criChance <= 1 )
	{
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_sparks");
		criDamage = damage * 64;
	}
}

// Faith
if( attacker != null && victim != null && !attacker.IsAlien() && attacker.GetClassname() == "asw_marine" && attacker.GetMarineName() == "Faith" && victim.GetClassname() == "asw_marine" && victim.GetMarineName() != "Faith")
{
	for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
	{
		if(checkWeapon.GetClassname() == "asw_weapon_stim")
		{
			if(victim.GetHealth() < victim.GetMaxHealth())
			{
				CreateParticleFunc(2, victim.GetOrigin() + Vector(0, 0, 40), Vector(0, 0, 0), "antlion_spit_02");

				if( victim.GetHealth() >= victim.GetMaxHealth() - 2 )
				{
					victim.EmitSound("ASW_HealGun.StartHeal");
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
				}
			}
			victim.SetHealth(victim.GetHealth() + 2);

			if(victim.GetHealth() > victim.GetMaxHealth())
				victim.SetHealth(victim.GetMaxHealth());
			//return;
		}
	}
}

// Power
if( attacker != null && victim != null && attacker.GetClassname() == "asw_marine" && victim.IsAlien() )
{
	if (inflictor != null && inflictor.GetClassname() == "asw_burning")
		return damage;

	for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
	{
		switch(checkWeapon.GetClassname())
		{
		case "asw_weapon_night_vision":
			if(attacker.GetMarineName() == "Jaeger")
			{
				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 125)) != null)
				{
					if ( nearTarget.IsAlien() )
					{
						CreateParticleFunc(2, nearTarget.GetOrigin(), Vector(0, 0, 0), "boomer_drop_FloatieEmbers");
						nearTarget.Ignite(2);
						nearTarget.TakeDamage(0.5, 0, victim);
					}
					else if ( nearTarget != null && nearTarget.GetClassname() != "asw_marine" )
						nearTarget.TakeDamage(0, 8, victim);
				}
			}
			else
				{
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "Explosion_FloatieEmbers");

					local nearTarget = null;
					while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 125)) != null)
					{
						if ( nearTarget != null && nearTarget.GetClassname() != "asw_marine" && !nearTarget.IsAlien() )
						{
							nearTarget.TakeDamage(0, 8, victim);
						}
					}
				}

			victim.Ignite(4);
			break;

		//case "asw_weapon_freeze_grenades":
			//if(attacker.GetMarineName() == "Wildcat")
			{
				// local nearTarget = null;
				// while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 10)) != null)
				// {
					// if ( nearTarget.IsAlien() )
					// {
						// CreateParticleFunc(2, nearTarget.GetOrigin(), Vector(0, 0, 0), "mortar_explosion_debrisburst");
						// nearTarget.Freeze(0.5);
					// }
				// }
					//3.5ÈèáÂ≠òÊüä,ÈóÑÂ∂ÑÁ∂ÜÁëôÔπÄÂΩÇÂßíÂÇúÂ∑º.ÈçôÊ®ªÂûöÈçòÁÜ∏ÊΩµ1/2
				//local boomChance = RandomInt( 1, 100 );	
				//if ( boomChance <= 1 )
				{
					//victim.Freeze(0.1);//3.5ÈèáÂ≠òÊüä,ÈçêÊùøÂñïÈèÉÂ†ïÊ£øÈçëÂøìÁöØ
				}
			}
			break;

		case "asw_weapon_tesla_trap":
			if(attacker.GetMarineName() == "Crash")
			{
				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 125)) != null)
				{
					if ( nearTarget.IsAlien() )
					{
						nearTarget.ElectroStun(2);
					}
				}
			}
			victim.ElectroStun(4);
			break;

		case "asw_weapon_blink":
			if (victim.GetClassname() == "asw_shieldbug" || victim.GetClassname() == "asw_antlionguard_normal" || victim.GetClassname() == "asw_antlionguard_cavern" || victim.GetClassname() == "asw_boomer" || victim.GetClassname() == "asw_harvester" || victim.GetClassname() == "asw_drone_uber" || victim.GetClassname() == "asw_mortarbug")
			{
				local dirVector = victim.GetOrigin() - inflictor.GetOrigin();
				local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);

				if (dirVectorNoZ.Length() != 0)
				{
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_pickup_generic");

					local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
					local pushVector = dirVectorNoZNormalized * (260 + damage + criDamage) + Vector (0, 0, 200 + (damage + criDamage)/2);
					victim.SetVelocity(pushVector);
				}
			}
			else if (victim.GetClassname() == "asw_queen")
			{
				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_pickup_generic");
			}
			else
			{
				local dirVector = victim.GetOrigin() - inflictor.GetOrigin();
				local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);

				if (dirVectorNoZ.Length() != 0)
				{
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "powerup_pickup_generic");

					local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
					local pushVector = dirVectorNoZNormalized * (300 + damage + criDamage) + Vector (0, 0, 250 + (damage + criDamage)/2);
					victim.SetVelocity(pushVector);
				}
			}
			break;

		case "asw_weapon_grenades":
			local boomChance = RandomInt( 1, 1000 );

			if(attacker.GetMarineName() == "Wolfe")
					//boomChance = 1;  //ÈçòÁÜ∏ÊΩµÈèÑ?00%ÂßíÂÇúÂ∑º,ÈêúÊùøÊπ™ÈçôÊ®ªÂûöÊµú?0%Èê®Âã¨ÓõßÈêú?
					boomChance = RandomInt( 1, 100 );  //3.4ÈèáÂ≠òÊüä,Âß£ÊñøÂèæÊµ†Ê†´Â∏∫ÁÄπÂ†ïÁèÆ10Èçä?

			// default 1 (50%)
			if ( boomChance <= 70 )
			{
				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_grenade");

				//victim.EmitSound("BaseExplosionEffect.Sound");  //3.4ÈèáÂ≠òÊüä,ÈçòÁªòÂ∏ÄÈêñÂóôÂÅ¢Êæπ‰º¥ÁÖ∂
				//victim.EmitSound("ASWGrenade.Explode");
				//victim.EmitSound("ASWGrenade.Explosion");

				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 175)) != null)
				{
					if ( nearTarget.IsAlien() )
						nearTarget.TakeDamage(30, 0, victim);
					else if ( nearTarget.GetClassname() != "asw_marine" )
						nearTarget.TakeDamage(0, 64, victim);
				}
			}
			break;

		case "asw_weapon_stim":
			if(attacker.GetHealth() < attacker.GetMaxHealth())
			{
				CreateParticleFunc(2, attacker.GetOrigin() + Vector(0, 0, 40), Vector(0, 0, 0), "antlion_spit_02");

				if( attacker.GetHealth() >= attacker.GetMaxHealth() - 1 )
				{
					attacker.EmitSound("ASW_HealGun.StartHeal");
					CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "explosion_vind_a");
				}
			}
			attacker.SetHealth(attacker.GetHealth() + 1);

			if(attacker.GetHealth() > attacker.GetMaxHealth())
				attacker.SetHealth(attacker.GetMaxHealth());
			break;

		case "asw_weapon_buff_grenade":
			CreateParticleFunc(2, victim.GetOrigin() + Vector(0, 0, 50), Vector(0, 0, 0), "marine_hit_spark_master");

			if(attacker.GetMarineName() == "Vegas")
				exDamage = damage * 0.75;
			else
				exDamage = damage * 0.5;
			break;
		}
	}
}

// fire mine
if( attacker != null && victim != null && attacker.IsAlien() && victim.GetClassname() == "asw_marine" && (victim.GetMarineName() == "Jaeger" || victim.GetMarineName() == "Sarge") )
{
	for (local checkWeapon = victim.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
	{
		if (checkWeapon.GetClassname() == "asw_weapon_mines")
		{
			victim.EmitSound("ASW_Mine.Explode");

			CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "vindicator_grenade_fire_flash");

			local nearTarget = null;
			while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 200)) != null)
			{
				if ( nearTarget.IsAlien() )
					nearTarget.Ignite(2);
				else if ( nearTarget != null && nearTarget.GetClassname() != "asw_marine" )
					nearTarget.TakeDamage(0, 8, victim);
			}
			break;
		}
	}
}
// Death
if( victim != null && victim.GetClassname() == "asw_marine" )
{
	for (local checkWeapon = victim.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
	{
		if (checkWeapon.GetClassname() == "asw_weapon_flares")
		{
			if( damage >= victim.GetHealth() )
			{
				victim.EmitSound("ASW_Mine.Explode");
				CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "ElevatorShaftFire");

				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 120)) != null)
				{
					if ( nearTarget.IsAlien() || nearTarget.GetClassname() == "asw_marine")
						nearTarget.Ignite(3);
					else if ( nearTarget.GetClassname() != "asw_marine" )
						nearTarget.TakeDamage(0, 8, victim);
				}
				break;
			}
		}
	}
}
// Item blow
if(attacker != null && (attacker.GetClassname() == "asw_shieldbug" || attacker.GetClassname() == "asw_antlionguard_normal" || attacker.GetClassname() == "asw_antlionguard_cavern"))
{
	if (victim != null && victim.GetClassname() == "asw_marine")
	{
		local armorBroken = 0;

		for (local checkWeapon = victim.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
		{
			if (checkWeapon.GetClassname() == "asw_weapon_normal_armor")
			{
					victim.EmitSound("ASW_JumpJet.Impact");
					CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "boomer_drop_FloatieEmbers");
					victim.RemoveWeapon(2);
					armorBroken = 1;
					break;
			}
		}

		if ( armorBroken )
			return damage;

		if (victim.GetMarineName() == "Sarge")
			return damage;

		local howMany = RandomInt( 1, 100 )

		if (victim.GetHealth() <= 40)
		{
			if (howMany <= 50)
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
				victim.DropWeapon(RandomInt( 0, 2 ));
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
			else if  (howMany <= 83)
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
			else
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
		}
		else if (victim.GetHealth() <= 80)
		{
			if (howMany <= 25)
			{
			}
			else if  (howMany <= 75)
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
			else if  (howMany <= 90)
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
			else
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
				victim.DropWeapon(RandomInt( 0, 2 ));
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
		}
		else if (victim.GetHealth() <= 125)
		{
			if (howMany <= 50)
			{
			}
			else if  (howMany <= 90)
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
			else
			{
				victim.DropWeapon(RandomInt( 0, 2 ));
				victim.DropWeapon(RandomInt( 0, 2 ));
			}
		}
	}
}
// One punch
if (attacker != null && attacker.GetClassname() == "asw_marine")
{
	if (weapon != null && weapon.GetClassname() == "asw_weapon_railgun")
	{
		CreateParticleFunc(2, victim.GetOrigin(), Vector(0, 0, 0), "explosion_grenade_heat");

		local nearTarget = null;
		while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 300)) != null)
		{
			if ( nearTarget.IsAlien() || nearTarget.GetClassname() == "asw_marine" )
			{
				local dirVector = nearTarget.GetOrigin() - victim.GetOrigin();
				local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);

				if (dirVectorNoZ.Length() != 0)
				{
					local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
					local pushVector = dirVectorNoZNormalized * -300 + Vector (0, 0, 250);
					nearTarget.SetVelocity(pushVector);
				}
			}
		}
		attacker.SetVelocity(attacker.GetForwardVector() * 650 + Vector(0, 0, 350));
	}

	if (victim != null && (victim.GetClassname() == "asw_shieldbug" || victim.GetClassname() == "asw_antlionguard_normal" || victim.GetClassname() == "asw_antlionguard_cavern" || victim.GetClassname() == "asw_boomer" || victim.GetClassname() == "asw_harvester" || victim.GetClassname() == "asw_drone_uber" || victim.GetClassname() == "asw_mortarbug"|| victim.GetClassname() == "asw_queen"))
	{
		for (local checkWeapon = attacker.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
		{
			if (checkWeapon.GetClassname() == "asw_weapon_fist" && attacker == weapon)
			{
				DropFragGrenade(0, 0, attacker.GetOrigin() + Vector(0, 0, 50));
				CreateParticleFunc(2, attacker.GetOrigin(), Vector(0, 0, 0), "asw_env_explosion");

				if(attacker.GetHealth() >= 2)
					attacker.TakeDamage(1, 0, attacker);

				if(attacker.GetHealth() >= difficultyCorrectFist)
					attacker.SetHealth(attacker.GetHealth() / difficultyCorrectFist);
				else
					attacker.SetHealth(1);

				attacker.RemoveWeapon(2);

				if (attacker.GetMarineName() != "Wolfe")
					attacker.Knockdown(Vector( 0, 0, 0 ));

				// knock all
				local nearTarget = null;
				while((nearTarget = Entities.FindInSphere(nearTarget, victim.GetOrigin(), 300)) != null)
				{
					if ( nearTarget.IsAlien() || nearTarget.GetClassname() == "asw_marine" )
					{
						local dirVector = nearTarget.GetOrigin() - victim.GetOrigin();
						local dirVectorNoZ = Vector(dirVector.x, dirVector.y, 0);

						if (dirVectorNoZ.Length() != 0)
						{
							local dirVectorNoZNormalized = dirVectorNoZ * (1/dirVectorNoZ.Length());
							local pushVector = dirVectorNoZNormalized * 300 + Vector (0, 0, 250);
							nearTarget.SetVelocity(pushVector);
						}
					}
				}

				if (victim.GetClassname() == "asw_queen")
					return victim.GetMaxHealth() / difficultyCorrectFist + 4;

				//return damage + 9999;
				damage = damage + 9999;
			}
		}
	}
}
//return damage + exDamage + criDamage;
damage =damage + exDamage + criDamage;
	local inflictorClass = null;
	local victimClass = null;
	local attackerClass = null;
	local weaponClass = null;



	if (inflictor)
		inflictorClass = inflictor.GetClassname();
	if (victim)
		victimClass = victim.GetClassname();
	if (attacker)
		attackerClass = attacker.GetClassname();
	if (weapon)
		weaponClass = weapon.GetClassname();
	local dam = 0;

	if (weapon){
		if (weaponClass in damageTable){
			damage += damageTable[weaponClass];
			if (victimClass == "asw_marine"){
				if (asw_marine_ff_absorption == "0"){
					damage = 0;
					dam = backfireDamageTable[weaponClass];
				} else {
					if (victim != attacker && noff)
						damage = 0;
					else damage = friendlyDamageTable[weaponClass];
				}
			}
		}

		if (victim && victim.IsValid()){
			switch (weapon.GetClassname()){
				case "asw_weapon_prifle":
					if (victim == attacker)
						damage = 10;
					break;
				case "asw_weapon_rifle":
					if (victim == attacker)
						damage = 20;
					break;
				case "asw_weapon_50calmg":
					if (victim.IsAlien())
						dealDamageToAlienFunc(25, victim, 100, 4098, attacker);
					break;
				case "asw_weapon_deagle":
					if (victim.IsAlien())
						dealDamageToAlienFunc(30, victim, 100, 4098, attacker);
					if (victimClass == "asw_ranger")
						damage = 400;
					break;
				case "asw_weapon_shotgun":
					if (victim.IsAlien()){
						if (!(timeforexplosion.rawin(attacker)) || timeforexplosion[attacker] + 0.3 < Time())
							dealDamageToAlienFunc(125, victim, 100, 4098, attacker);
						timeforexplosion[attacker] <- Time();
					}
					break;
				case "asw_weapon_flamer":
					damage = 0;
					if (victimClass == "asw_marine"){
						if (victim.GetHealth() <= victim.GetMaxHealth())
							victim.SetHealth(victim.GetHealth() + (victim.GetMaxHealth()/40));
					}
					break;
				case "asw_weapon_railgun":
					if (victim.IsAlien()){
						if (!(timeforexplosion.rawin(attacker)) || timeforexplosion[attacker] + 0.3 < Time()){
							ParticleSpawn(1, 0, 0, 30, victim, "portal_rift_flash_01", "ASW_T75.Explode", "", "", 0, "", 0, "", "");
							ParticleSpawn(2, 0, 0, 30, victim, "portal_ritf_flash_01c", "ASWBarrel.Explode", "", "", 0, "", 0, "", "");
							ParticleSpawn(2, 0, 0, 30, victim, "portal_rift_flash_01b", "Bounce.Concrete", "Bounce.Concrete", "", 0, "", 0, "", victim);
							local hNearEnt = null;
							while ((hNearEnt = Entities.FindInSphere(hNearEnt, victim.GetOrigin(), 380)) != null){
								if (hNearEnt.IsValid() && hNearEnt != victim
									&& hNearEnt.GetClassname() != "asw_marine"
									&& hNearEnt.GetClassname() != "asw_door"){
									hNearEnt.TakeDamage(20000, 8, attacker);
								}
							}
						}
						timeforexplosion[attacker] <- Time();
					}
					break;
				case "asw_weapon_sniper_rifle":
					if (victim.IsAlien()){
						local A = attacker.GetOrigin();
						local B = victim.GetOrigin();
						local fDistance = (A - B).Length();

						if (fDistance >= 350.0 && (!(timeforexplosion.rawin(attacker)) || timeforexplosion[attacker] + 0.3 < Time())){
							local particle = ParticleSpawn("", 0, 0, 30, victim, "stungrenade_core", "landingBay.whoosh", "", "", 0, "", 0, "", "");
							GetScrScope(particle).func <- function(){
								self.StopSound("landingBay.whoosh");
								self.DisconnectOutput("OnUser1", "func");
								self.Destroy();
								return;
							}
							particle.ConnectOutput("OnUser1", "func");
							EntFireByHandle(particle, "FireUser1", "", 2.5, self, self);

							local target = Entities.CreateByClassname("info_target");
							target.SetOrigin(victim.GetOrigin() + Vector(0, 0, 31));
							target.EmitSound("landingBay.whoosh");
							GetScrScope(target).func <- function(){
								self.StopSound("landingBay.whoosh");
								self.DisconnectOutput("OnUser1", "func");
								self.Destroy();
								return;
							}
							target.ConnectOutput("OnUser1", "func");
							EntFireByHandle(target, "FireUser1", "", 2.5, self, self);

							timeforexplosion[attacker] <- Time();
							local damagetotake = victim.GetMaxHealth();
							if (damagetotake >= 35000)
								damagetotake = 35000;

							dealDamageToAlienFunc(310, victim, damagetotake, 4098, attacker);
							damage = damagetotake;
						}
					}
					break;
				case "asw_weapon_autogun":
					if (victim.IsAlien())
						dealDamageToAlienFunc(15, victim, 15, 4098, attacker);
					break;
				case "asw_weapon_mining_laser":
					if (victim.IsAlien())
						dealDamageToAlienFunc(80, victim, 15, 4098, attacker);
					break;
				case "asw_weapon_vindicator":
					if (victim == attacker)
						damage = 20;
					break;
				case "asw_weapon_devastator":
					if (hWolfe && hWolfe == attacker)
						damage = damage*5;
					break;
				case "asw_weapon_chainsaw":
					if (victim.IsAlien())
						dealDamageToAlienFunc(25, victim, 15, 4098, attacker);
					break;
				case "asw_weapon_tesla_gun":
					local hNearEnt = null;
					while ((hNearEnt = Entities.FindInSphere(hNearEnt, victim.GetOrigin(), 60)) != null){
						if (hNearEnt.IsAlien() && hNearEnt.IsValid() && !(TeslaAliensTable.rawin(hNearEnt)) && hNearEnt.GetName() != "asw_0fun_drone_giant"){
							TeslaAliensTable[hNearEnt] <- hNearEnt.GetKeyValue("speedscale");
							DoEntFire("!self", "AddOutput", "speedscale -1", 0, null, hNearEnt);
							local hNearEntScope = GetScrScope(hNearEnt);
							hNearEntScope.TeslaAliensTable <- TeslaAliensTable;
							hNearEntScope.SetDefaultSpeed <- function(){
								if (self && self.IsValid()){
									DoEntFire("!self", "AddOutput", "speedscale " + TeslaAliensTable[self].tostring(), 0, null, self);
									TeslaAliensTable.rawdelete(self);
									g_ModeScript.TeslaAliensTable <- TeslaAliensTable;
									self.DisconnectOutput("OnUser1", "SetDefaultSpeed");
								}
								return;
							}
							hNearEnt.ConnectOutput("OnUser1", "SetDefaultSpeed");
							EntFireByHandle(hNearEnt, "FireUser1", "", 5, self, self);
							//alienclass moving with speed <= 0 (animation) spam
						}
					}
					damage = 0;
					break;
				case "asw_weapon_tesla_trap":
					dealDamageToAlienFunc(60, victim, 10, 256, null);
					break;
				default: break;
			}
		}
	}

	if (victimClass == "asw_marine"){
		local hExtra = NetProps.GetPropEntityArray(victim, "m_hMyWeapons", 2);
		if (hExtra && hExtra.GetClassname() == "asw_weapon_blink"){
			local flCharge = NetProps.GetPropFloat(hExtra, "m_flPower");
			local razn = flCharge  - damage/asw_blink_charge_time;
			if (razn < 0){
				damage = damage - flCharge*asw_blink_charge_time;
				razn = 0;
			} else damage = 0;
			NetProps.SetPropFloat(hExtra, "m_flPower", razn);
		}
	}

	if (!bFF && attackerClass == "asw_marine" && victimClass == "asw_marine" && inflictorClass != "asw_burning" && attacker != victim){
		return damage = 0;
	}

	if (asw_marine_ff_absorption == "0"){ //modded backfire
		if (attackerClass == "asw_marine"){
			if (victimClass == "asw_marine" && victim != attacker){
				if (inflictorClass != "asw_burning" && inflictorClass != "asw_sentry_top_machinegun" && inflictorClass != "asw_barrel_explosive"){
					if (!weapon && inflictorClass == "asw_marine"){
						local hWeapon = NetProps.GetPropEntity(attacker, "m_hActiveWeapon");
						if (hWeapon.GetClassname() == "asw_weapon_chainsaw"){
							dam = 10;
							damage = 0;
						}
					}
					if (immortalOwner){
						if (!(Entities.FindByNameWithin(null, immortalOwner.GetName(), attacker.GetOrigin(), 130))){
							if (attacker.GetHealth() - dam <= 0){
								attacker.TakeDamage(500, 64, attacker);
							} else attacker.SetHealth(attacker.GetHealth() - dam);	//SetHealth generic "pure" damage, then TakeDamage is not
						} else damage = 0;
					} else if (attacker.GetHealth() - dam <= 0){
						attacker.TakeDamage(500, 64, attacker);
					} else attacker.SetHealth(attacker.GetHealth() - dam);
				}
			}
		}
	}

	if (victim){
		if (victim.IsAlien()){
			if (bAccess && victim.GetHealth() - damage <= 0 && explosedAliensDelay + 1 >= Time()){
				if (explosedAliens.len() <= 60)
					explosedAliens.push(victim);
				else bAccess = false;
				//to do
				//printl(explosedAliens.len());
			} else if (explosedAliensDelay + 1 <= Time()){
				explosedAliensDelay = Time();
				explosedAliens = [];
				bAccess = true;
			}
			if (!bAccess)
				damage = 0;
			if (victim.GetName() == "0fun_buzzer_boss_bee")
				damage = damage/2;
		} else if (victimClass == "asw_marine"){
			if (hWildcat && victim == hWildcat && !weapon)
				toggleWildcatInvis(hWildcat, AiTable, 1, -1);

			if (invRollTime.rawin(victim) && invRollTime[victim] + 0.3 > Time())
				damage = 0;

			if (noInstaDeathAfterReviveTable.rawin(victim)){
				if (noInstaDeathAfterReviveTable[victim])
					damage = 0; //no damage to revived marine
			}

			if (immortalOwner && Entities.FindByNameWithin(null, immortalOwner.GetName(), victim.GetOrigin(), 130))
				damage = 0;

			//-----------------------RANGER SPIT----------------------------|
			if (inflictorClass == "asw_missile_round"
				&& inflictor.GetOwner().GetClassname() == "asw_ranger"
				&& !IsExtraEquipped("asw_weapon_normal_armor", victim)){
				victim.TakeDamage(10, 131072, attacker); //do buzzer poison damage
				victim.BecomeInfested(); //infest marine
				local parasiteProp = CreateProp("prop_dynamic", victim.GetOrigin(), "models/aliens/parasite/parasite.mdl", 17);
				parasiteProp.SetOwner(victim);
				local parasitePropScope = GetScrScope(parasiteProp);
				parasitePropScope.RotateToMarineNeck <- function(){ //rotate parasite
					self.SetLocalAngles(40, 90, 0);
					self.SetLocalOrigin(Vector(0, -3, 0));
					self.DisconnectOutput("OnUser1", "RotateToMarineNeck");
				}
				parasitePropScope.IsMarineInfested <- function(){ //destroy parasite prop
					local isInfested = NetProps.GetPropFloat(hVictim, "m_fInfestedTime");
					if (isInfested == 0)
						self.Destroy();
				}
				parasitePropScope.hVictim <- victim;
				DoEntFire("!self", "SetParent", "!activator", 0,  victim, parasiteProp);
				DoEntFire("!self", "SetParentAttachment", "anim_attachment_head", 0.01,  victim, parasiteProp);
				DoEntFire("!self", "SetDefaultAnimation", "ragdoll", 0,  self, parasiteProp);
				DoEntFire("!self", "SetAnimation", "ragdoll", 0,  self, parasiteProp);
				DoEntFire("!self", "DisableShadow", "", 0,  self, parasiteProp);
				parasiteProp.ConnectOutput("OnUser1", "RotateToMarineNeck");
				DoEntFire("!self", "FireUser1", "", 0,  self, parasiteProp);
				AddThinkToEnt(parasiteProp, "IsMarineInfested");
			}//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^|

			if (attackerClass == "asw_shieldbug" || attackerClass == "npc_antlionguard_cavern"){
				local target = null;
				while((target = Entities.FindByName(target, "0fun_mortarthink")) != null){
					if (target.GetOwner() == victim){
						bAttackedByShieldbug = true;
						GetScrScope(target).bAttackedByShieldbug <- bAttackedByShieldbug;
					}
				}
			}
			if (IsExtraEquipped("asw_weapon_normal_armor", victim)){
				if (attacker && attacker.IsAlien()){
					if (attackerClass != "npc_antlionguard_cavern" && attackerClass != "asw_shieldbug" )
						attacker.Freeze(1);
					else attacker.Freeze(2);
				}
			} else {
				if (attacker && attacker.GetName() == "asw_0fun_drone_giant")
					victim.Knockdown(Vector(0, 0, 0));
			}

			if (inflictorClass == "asw_mortarbug" && inflictor.GetOwner()){
				local owner = inflictor.GetOwner();
				if (owner.GetClassname() == "asw_marine" && owner.IsInhabited())
					damage = 0; //adr anim dmg
			}
		}
	}

	if (inflictor){
		switch (inflictorClass){
			case "asw_sentry_top_machinegun":
				if (victimClass != "asw_marine")
					dealDamageToAlienFunc(20, victim, 15, 4098, null);
				break;
			case "env_explosion":
				if (victim && inflictor.GetName() == "0fun_mortar_explosion"){
					local attker = inflictor.GetOwner();
					if (victimClass == "asw_marine"){
						if (asw_marine_ff_absorption == "0"){
							damage = 0;
							if (attker && attker.IsValid())
								attker.TakeDamage(50, 64, attker);
						} else damage = 25;
					} else damage *= 30;
				}
				break;
			case "asw_mortarbug_shell":
				if (inflictor.GetName() == "0fun_stim_mutation_mortarbug_shell"){
					local attker = inflictor.GetOwner();
					if (victimClass == "asw_marine"){
						if (asw_marine_ff_absorption == "0"){
							damage = 0;
							if (attker && attker.IsValid())
								attker.TakeDamage(50, 64, attker);
						} else damage = 25;
					} else damage = 1;
				} else if (victimClass == "asw_marine"){
					if (victim.GetModelName() == "models/aliens/mortar/mortar.mdl")
						damage = damage/2;
				}
				break;
			default: break;
		}
	}

	if (attacker){
		if (hWildcat && attacker == hWildcat)
			toggleWildcatInvis(hWildcat, AiTable, 1, -1);
	}

	return damage;
}
g_ModeScript.OnTakeDamage_Alive_Any <- OnTakeDamage_Alive_Any;
if (!self || !self.IsValid())
	return;

NetProps.SetPropFloat(self, "m_flModelScale", 0.6);
local spawner = Entities.CreateByClassname("asw_spawner");
spawner.SetOrigin(self.GetOrigin());
spawner.SetAnglesVector(self.GetAngles());
spawner.__KeyValueFromString("AlienClass", "2");
spawner.__KeyValueFromString("AlienNameTag", "0fun_parasite");
spawner.__KeyValueFromString("AlienOrders", "0");
spawner.__KeyValueFromString("MaxLiveAliens", "99");
spawner.__KeyValueFromString("SpawnerState", "0");
spawner.__KeyValueFromString("ClearCheck", "0");
spawner.__KeyValueFromString("StartBurrowed", "0");
spawner.__KeyValueFromString("SpawnIfMarinesAreNear", "1");
spawner.__KeyValueFromString("NumAliens", "6");
spawner.__KeyValueFromString("SpawnInterval", "0");
spawner.__KeyValueFromString("minoffset", "-30 -30 0");
spawner.__KeyValueFromString("maxoffset", "30 30 0");
spawner.__KeyValueFromString("sizescalesp", "0.8");
spawner.Spawn();
DoEntFire("!self", "StartSpawning", "", 0, null, spawner);
DoEntFire("!self", "Kill", "", 5, null, spawner);
function ParticleSpawn(iDestroyParticleDelay, x, y, z, hOrigin, sEffectName, 
	sEmitSoundParticle, sEmitSoundOrigin, hSetParent, iStPrDelay, sAttach, iAttachDelay, hCpoint, hEmitSoundOrigin){
	local particle = Entities.CreateByClassname("info_particle_system");
	particle.__KeyValueFromString("effect_name", sEffectName);
	particle.__KeyValueFromString("start_active", "1");
	if (hCpoint != ""){
		local uniqueString = UniqueString();
		hCpoint.__KeyValueFromString("targetname", uniqueString);
		particle.__KeyValueFromString("cpoint1", uniqueString);
	}
	if (hOrigin != "")
		particle.SetOrigin(hOrigin.GetOrigin() + Vector(x, y, z));
	particle.Spawn();
	particle.Activate();
	if (hSetParent != "")
		DoEntFire("!self", "SetParent", "!activator", iStPrDelay, hSetParent, particle);
	if (sAttach != "")
		DoEntFire("!self", "SetParentAttachment", sAttach, iAttachDelay, hSetParent, particle);
	if (iDestroyParticleDelay != "")
		DoEntFire("!self", "Kill", "", iDestroyParticleDelay, null, particle);
	if (sEmitSoundParticle != "")
		particle.EmitSound(sEmitSoundParticle);
	if (sEmitSoundOrigin != "")
		hEmitSoundOrigin.EmitSound(sEmitSoundOrigin);
	return particle;
}function carnage(i){
	Convars.SetValue("rd_carnage_scale", i.tointeger());
	StringToFile("carnage", i);
	PrintToAllPlayers("carnage scale changed to " + i);
	return;
}

function IsLeader(asw_game_resource, userid){
	local player = null;
	while((player = Entities.FindByClassname(player, "player")) != null){
		if (player.GetPlayerUserID() == userid){
			if (player != NetProps.GetPropEntity(asw_game_resource, "m_Leader")){
				ClientPrint(player, 3, "avaliable for lobby leader only");
				return false;
			} else return true;
		}
	}
}

function say(mes, time, userid){
	local player = null;
	while((player = Entities.FindByClassname(player, "player")) != null){
		if (player.GetPlayerUserID() == userid){
			ClientPrint(player, time, mes);
		}
	}
	return;
}

function OnGameEvent_player_say(params){
	if (!("text" in params) || params["text"] == null || !("userid" in params) || params["userid"] == null)
		return;
	
	local text = params["text"].tolower();
	local userid = params["userid"];
	
	switch (text){
		case "*help carnage":
			say("*carnage 1 - set carnage to 1, min 1, max 16 ", 5, userid);
			return;
		case "*help knockdown":
			say("*knockdown 0 - time between knockdowns from shielbugs or antlions = 0, ", 5, userid);
			say("*knockdown 1 - default number, you can run after knockdown", 5, userid);
			return;
		case "*help blind":
			say("*blind 0 - disable buzzers poison damage, *blind 1 - enable buzzers poison damage", 5, userid);
			return;
		case "*help ff":
			say("*ff 0 - disable friendly fire, *ff 1 - enable friendly fire", 5, userid);
			return;
		case "*help":
			say("Chat commands: *ff *blind *knockdown *carnage 1-16", 5, userid);
			say("Type *help 'command' for more info ex. '*help knockdown'", 5, userid);
			return;
		case "*ff 1":
			if (!IsLeader(asw_game_resource, userid))
				return;
			bFF = true;
			StringToFile("ff", "1");
			PrintToAllPlayers("Friendly fire enabled");
			return;
		case "*ff 0":
			if (!IsLeader(asw_game_resource, userid))
				return;
			bFF = false;
			StringToFile("ff", "0");
			PrintToAllPlayers("Friendly fire disabled");
			return;
		case "*blind 1":
			if (!IsLeader(asw_game_resource, userid))
				return;
			StringToFile("blind", "1");
			PrintToAllPlayers("Buzzers poison enabled");
			Convars.SetValue( "asw_buzzer_poison_duration", 4 );
			return;
		case "*blind 0":
			if (!IsLeader(asw_game_resource, userid))
				return;
			StringToFile("blind", "0");
			PrintToAllPlayers("Buzzers poison disabled");
			Convars.SetValue( "asw_buzzer_poison_duration", 0 );
			return;
		case "*knockdown 1":
			if (!IsLeader(asw_game_resource, userid))
				return;
			StringToFile("knockdown", "1");
			PrintToAllPlayers("Default knockdown interval");
			Convars.SetValue( "asw_knockdown_interval", 3 );
			return;
		case "*knockdown 0":
			if (!IsLeader(asw_game_resource, userid))
				return;
			StringToFile("knockdown", "0");
			PrintToAllPlayers("No knockdown interval");
			Convars.SetValue( "asw_knockdown_interval", 0 );
			return;
		default: break;
	}
	
	try {text.slice(0,10);}
	catch(error){return;}
	
	try {text.slice(0,11); bBreak <- false;}
	catch(error){bBreak <- true;}
	
	if (text.slice(0,9) == "*carnage "){
		if (!IsLeader(asw_game_resource, userid))
			return;
		
		if (!bBreak){
			switch (text.slice(9,11)){
				case "10":
				case "11":
				case "12":
				case "13":
				case "14":
				case "15":
				case "16": carnage(text.slice(9,11)); return;
				default: PrintToAllPlayers("wrong carnage scale number, 1-16 avaliable"); return;
			}
		}
		switch (text.slice(9,10)){
			case "1":
			case "2":
			case "3":
			case "4":
			case "5":
			case "6":
			case "7":
			case "8":
			case "9": carnage(text.slice(9,10)); return;
			default: PrintToAllPlayers("wrong carnage scale number, 1-16 avaliable"); return;
		}
	}
	
	return;
}function ParticlePrecache(effect){
	local particle = Entities.CreateByClassname("info_particle_system");
	particle.__KeyValueFromString("effect_name", effect);
	particle.__KeyValueFromString("start_active", "1");
	particle.SetOrigin(Vector(16384, 16384, 16384));
	particle.Spawn();
	particle.Activate();
	DoEntFire("!self", "Kill", "", 1, null, particle);
	return;
}

ParticlePrecache("ground_fire");
ParticlePrecache("stungrenade_core_copy");
ParticlePrecache("jumpjet_smoke_trail");
ParticlePrecache("vindicator_grenade_warp");
ParticlePrecache("explosion_huge_c");
ParticlePrecache("rifle_grenade_pulse");
ParticlePrecache("marine_resurrection");
ParticlePrecache("boomer_drop_heat");
ParticlePrecache("electric_weapon_zap_muzzle");
ParticlePrecache("powerup_electric_bullets");
ParticlePrecache("powerup_increased_speed");
ParticlePrecache("vortigaunt_beam");
ParticlePrecache("ground_fire_burn2_large");
ParticlePrecache("buffgrenade_center_light");
ParticlePrecache("ranger_projectile_glow");
ParticlePrecache("mortar_grenade_open_radius");
ParticlePrecache("mining_laser_beam_cp0_glow");
ParticlePrecache("medgrenade_cross");
ParticlePrecache("portal_rift_flash_01");
ParticlePrecache("portal_ritf_flash_01c");
ParticlePrecache("portal_rift_flash_01b");
ParticlePrecache("mine_fire_ignite_glow");
ParticlePrecache("water_splash_leakypipe_vertical");
ParticlePrecache("stungrenade_arc_sprites_copy");
ParticlePrecache("sprinker_system_360_180h");
ParticlePrecache("explosion_barrel_heat");
ParticlePrecache("electrified_armor_burst");
ParticlePrecache("explosion_huge_d");
ParticlePrecache("melee_suck_in_release");
ParticlePrecache("jj_trail_small_flare");
ParticlePrecache("electric_weapon_zap_cp1");
ParticlePrecache("thorns_marine_buff_start");
ParticlePrecache("explosion_air_small_heat");
ParticlePrecache("embers_small_01");
local target = Entities.CreateByClassname("info_target");
target.PrecacheSoundScript("ASWInterface.MissionBoxes");
target.PrecacheSoundScript("ASW_ElectrifiedSuit.Loop");
target.PrecacheSoundScript("ASWInterface.SelectWeaponSlot");
target.PrecacheSoundScript("Bounce.Concrete");
target.PrecacheSoundScript("d1_town.LargeFireLoop");
target.PrecacheSoundScript("NPC_Antlion.Distracted");
target.PrecacheSoundScript("ASW_Weapon.BatteryCharged");
target.PrecacheSoundScript("NPC_SScanner.Die");
target.PrecacheSoundScript("NPC_SScanner.DeployMine");
target.PrecacheSoundScript("Weapon_CombineGuard.Special1")
target.PrecacheSoundScript("explode_2");
target.PrecacheSoundScript("explode_3");
target.PrecacheSoundScript("explode_5");
target.PrecacheSoundScript("NPC_Antlion.PoisonBall");
target.PrecacheSoundScript("NPC_Antlion.MeleeAttackDouble");
target.PrecacheSoundScript("NPC_SScanner.DiveBomb");
target.PrecacheSoundScript("BaseCombatWeapon.WeaponMaterialize");
target.PrecacheSoundScript("landingBay.whoosh");
target.PrecacheSoundScript("IceBody.Shatter");
target.PrecacheSoundScript("explode_1");
target.PrecacheSoundScript("NPC_SScanner.DiveBombFlyby");
target.PrecacheSoundScript("ASWComputer.TimeOut");
target.PrecacheSoundScript("ASWComputer.NumberAligned");
target.PrecacheSoundScript("ASW_ElectrifiedSuit.TurnOn");
target.PrecacheSoundScript("ASW_MortarBug.Death");
target.PrecacheSoundScript("Ranger.projectileImpactWorld");
target.PrecacheSoundScript("ASW_Door.BulkheadStop");
target.PrecacheSoundScript("PropaneTank.Burst");
target.PrecacheSoundScript("NPC_AntlionGuard.Pain_Roar");
target.PrecacheModel("models/aliens/egg/egg.mdl");
target.PrecacheModel("models/swarm/buzzer/buzzer.mdl");
target.PrecacheModel("models/aliens/egg/egggib_1.mdl");
target.PrecacheModel("models/aliens/egg/egggib_2.mdl");
target.PrecacheModel("models/aliens/egg/egggib_3.mdl");
target.PrecacheModel("models/swarm/harvester/harvester.mdl");
target.PrecacheModel("models/sentry_gun/machinegun_top.mdl");
target.PrecacheModel("models/items/shield_bubble/shield_bubble.mdl");
target.PrecacheModel("models/swarm/grenades/HandGrenadeProjectile.mdl");
DoEntFire("!self", "Kill", "", 1, null, target);IncludeScript("0fun_asw_health_bar.nut");

function Damage(){
	if (self && self.IsValid()){
		if (self.GetHealth() > 0)
			self.SetHealth(health);
		if (delay + 0.5 < Time()){
			sound.EmitSound("ASW_Buzzer.Attack");
			sound.EmitSound("ASW_Buzzer.Attack");
			if (health - 1000 <= 0){
				ParticleSpawn(3, 0, 0, 60, self, "body_explode", "ASW_Egg.Gib", "ASW_Egg.Gib", "", 0, "", 0, "", self);
				self.TakeDamage(30000, 4098, null);
				return;
			} else self.SetHealth(health - 1000);
			health = self.GetHealth();
			delay = Time();
		}
	}
	return;
}
/*
function SpawnVisEgg(egg, angle, speed){
	local visegg = Entities.CreateByClassname("prop_dynamic_override");
	visegg.__KeyValueFromString("model", "models/aliens/egg/egg.mdl");
	visegg.SetOrigin(self.GetOrigin());
	visegg.__KeyValueFromString("angles", "0 " + angle.tostring() + " 0");
	NetProps.SetPropFloat(visegg, "m_flModelScale", 4);
	DoEntFire("!self", "SetAnimation", "fire_open", 0,  self, visegg);
	DoEntFire("!self", "SetPlaybackRate", speed, 0,  self, visegg);
	DoEntFire("!self", "SetParent", "!activator", 0, egg, visegg);
	visegg.Spawn();
	return visegg;
}
*/
function BossSpawn(){
	if (i >= 45){
		local boss = Entities.CreateByClassname("asw_buzzer");
		boss.SetName("0fun_buzzer_boss_bee");
		boss.SetOrigin(self.GetOrigin() + Vector(0,0,160));
		boss.Spawn();
		sound.SetOrigin(boss.GetOrigin());
		DoEntFire("!self", "SetParent", "!activator", 0, boss, sound);
		local hp = 55000;
		if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
			hp = 20000;
		} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
			hp = 30000;
		} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
			hp = 40000;
		} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
			hp = 50000;	
		} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
			hp = 60000;
		}
		boss.SetMaxHealth(hp);
		boss.SetHealth(hp);
		boss.SetModel("models/swarm/buzzer/buzzer.mdl");
		NetProps.SetPropFloat(boss, "m_flModelScale", 7);
		NetProps.SetPropInt(boss, "m_bFreezable", 0);
		NetProps.SetPropInt(boss, "m_bTeslable", 0);
		NetProps.SetPropInt(boss, "m_bFlammable", 0);
		boss.ValidateScriptScope();
		local bossScope = boss.GetScriptScope();
		bossScope.selfOrigin <- boss.GetOrigin();
		bossScope.sound <- sound;
		bossScope.IncludeScript("0fun_ParticleSpawn");
		bossScope.i <- 0;
		bossScope.i2 <- 0;
		bossScope.hHealthbar <- AddHealthBar(boss, "222 222 1 210", "4", "0", "1", "", 0, 0, 150);
		function OnDeath(){
			DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
			self.DisconnectOutput("OnDeath", "OnDeath");
			return;
		}
		self.ConnectOutput("OnDeath", "OnDeath");
		
		bossScope.Teleport <- function(){
			local marine = null;
			marines <- [];
			while ((marine = Entities.FindByClassname(marine, "asw_marine")) != null)
				marines.push(marine);
			if (!marines.len())
				return;
			local RandomMarine = marines[RandomInt(0, marines.len()-1)];
			self.SetOrigin(RandomMarine.GetOrigin() + Vector(0,0,80));
			ParticleSpawn(2, 0, 0, 20, self, "stungrenade_core", "ASW_Blink.Teleport", "", "", 0, "", 0, "", "");
			ParticleSpawn(2, 0, 0, 20, self, "vindicator_grenade_warp", "ASW_Blink.Teleport", "", "", 0, "", 0, "", "");
			return;
		}
		
		bossScope.die <- function(){
			if (!self || !self.IsValid())
				return 1;

			local hNearEnt = null;
			local bNearbyMarine = false;
			while ((hNearEnt = Entities.FindInSphere(hNearEnt, self.GetOrigin(), 500)) != null){
				if (hNearEnt.GetClassname() == "asw_marine"){
					bNearbyMarine = true;
					break;
				}
			}
			
			if (!bNearbyMarine)
				Teleport();
			
			local selfOriginActual = self.GetOrigin();
			local sOx = selfOrigin.x.tointeger();
			local sOy = selfOrigin.y.tointeger();
			local sOAx = selfOriginActual.x.tointeger();
			local sOAy = selfOriginActual.y.tointeger();
			local pogreshnost = 8;
			if (sOx <= sOAx + pogreshnost && sOx >= sOAx - pogreshnost && sOy <= sOAy + pogreshnost && sOy >= sOAy - pogreshnost){
				if (i >= 3){
					Teleport();
					i = 0;
				} else i += 1;
			} else i = 0;
			selfOrigin = selfOriginActual;
			
			if (i2){//spit
				i2 -= 1;
				return 0.5;
			}
			
			local hMarineTarget = null;
			marines <- [];
			while((hMarineTarget = Entities.FindByClassnameWithin(hMarineTarget, "asw_marine", selfOrigin, 500)) != null){
				if (hMarineTarget.IsValid()){
					if ((hMarineTarget.GetMarineName() == "Wildcat" && NetProps.GetPropFloat(hMarineTarget, "m_flModelScale") == 0) 
						|| ((TraceLine(selfOrigin, hMarineTarget.GetOrigin(), null) != 1)))
						continue;
					marines.push(hMarineTarget);
				}
			}
			
			if (!marines.len())
				return 0.5;
			
			local particle = ParticleSpawn("", 0, 0, 0, self, "ranger_projectile_main_trail", "ASW_Ranger_Projectile.Spawned", "ASW_MortarBug.Spit", "", 0, "", 0, "", self);
			local particle2 = ParticleSpawn("", 0, 0, 0, self, "disease_buff", "", "", particle, 0, "", 0, "", "");
			local particle3 = ParticleSpawn("", 0, 0, 0, self, "ground_fire_large", "", "", particle, 0, "", 0, "", "");
			sound.EmitSound("NPC_AntlionGuard.Pain_Roar");
			sound.EmitSound("NPC_AntlionGuard.Pain_Roar");
			local RandomMarine = marines[RandomInt(0, marines.len()-1)];
			particle.ValidateScriptScope();
			local particleScope = particle.GetScriptScope();
			particleScope.RandomMarine <- RandomMarine;
			particleScope.attacker <- self;
			particleScope.ParticleSpawn <- ParticleSpawn;
			particleScope.DestroyParticle <- function(self){
				self.StopSound("ASW_Ranger_Projectile.Spawned");
				self.EmitSound("Ranger.projectileImpactWorld");
				ParticleSpawn(2, 0, 0, 0, self, "grubsack_death_splat", "", "", "", 0, "", 0, "", "");
				ParticleSpawn(2, 0, 0, 0, self, "ms_explosion", "ASWRocket.Explosion", "", "", 0, "", 0, "", "");
				DoEntFire("!self", "Kill", "", 0, null, self);
				return;
			}
			particleScope.MoveForward <- function(){
				if (self)
					selfOriginMF <- self.GetOrigin();
				
				if (!self.IsValid() || !RandomMarine || !RandomMarine.IsValid() 
					|| (TraceLine(selfOriginMF, selfOriginMF + self.GetForwardVector()*6, null) != 1)){
					DestroyParticle(self);
					return 1;
				}
				local hMarineTarget = null;
				while ((hMarineTarget = Entities.FindByClassnameWithin(hMarineTarget, "asw_marine", selfOriginMF, 15)) != null){
					local vecDir = hMarineTarget.GetOrigin() - selfOriginMF;
					local vecDir = vecDir * (1/vecDir.Length());
					local pushVector = Vector(vecDir.x, vecDir.y, 0) * 200 + Vector(0,0,200);
					hMarineTarget.TakeDamage(40, 131072, attacker);
					hMarineTarget.Knockdown(pushVector);
					DestroyParticle(self);
					return 1;
				}
				local vecDir = RandomMarine.GetOrigin() + Vector(0,0,60) - selfOriginMF;
				vecDir = vecDir * (1/vecDir.Length());
				self.SetForwardVector(vecDir);
				self.SetOrigin(selfOriginMF + self.GetForwardVector()*6);
				return 0.01;
			}
			AddThinkToEnt(particle, "MoveForward");
			i2 = 6;
			return 0.5;
		}
		
		AddThinkToEnt(boss, "die");
		
		self.TakeDamage(300000, 4098, null);
		return 9999999;
	} else i += 1;
	
	size += 0.07;
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	local hbOrigin = hEggHealthbar.GetOrigin();
	local strOrigin = "origin " + hbOrigin.x.tostring() + " " + hbOrigin.y.tostring() + " " + (hbOrigin.z + 1.5).tostring();
	DoEntFire("!self", "AddOutput", strOrigin, 0, null, hEggHealthbar);
	DoEntFire("!self", "AddOutput", "scale " + (size + 0.2).tostring(), 0, null, hEggHealthbar);
	
	return 1;
}

local A = self.GetOrigin();
local egg = Entities.CreateByClassname("prop_dynamic_override");
local sound = Entities.CreateByClassname("info_target");
egg.__KeyValueFromString("solid", "2");
egg.__KeyValueFromString("model", "models/aliens/egg/egg.mdl");
egg.__KeyValueFromString("health", "30000");
egg.SetOrigin(A);
sound.SetOrigin(A);
//EntFireByHandle(egg, "Color", "224 100 100", 0, self, self);
NetProps.SetPropFloat(egg, "m_flModelScale", 4);
egg.__KeyValueFromString("minhealthdmg", "3");
egg.SetSize(Vector(-220,-220,0), Vector(220,220,900));
egg.SetCollisionGroup(24);
DoEntFire("!self", "SetAnimation", "fire_open", 0,  self, egg);
DoEntFire("!self", "SetPlaybackRate", "2.5", 0,  self, egg);
egg.ValidateScriptScope();
local eggScope = egg.GetScriptScope();
eggScope.Damage <- Damage;
eggScope.sound <- sound;
eggScope.size <- 1;
eggScope.delay <- Time() + 0.5;
eggScope.health <- egg.GetHealth();
eggScope.BossSpawn <- BossSpawn;
eggScope.IncludeScript("0fun_ParticleSpawn");
eggScope.i <- 0;
eggScope.AddHealthBar <- AddHealthBar;
egg.ConnectOutput("OnTakeDamage", "Damage");
egg.Spawn();
eggScope.hEggHealthbar <- AddHealthBar(egg, "222 222 1 210", "2", "0", "1", "", 0, 0, 120);
/*
SpawnVisEgg(egg, 20, "0.6");
SpawnVisEgg(egg, 50, "0.7");
SpawnVisEgg(egg, 80, "0.8");
SpawnVisEgg(egg, 120, "0.9");
SpawnVisEgg(egg, 160, "0.4");
SpawnVisEgg(egg, 200, "1");
SpawnVisEgg(egg, 250, "1.1");
SpawnVisEgg(egg, 270, "1.2");
SpawnVisEgg(egg, 320, "1.3");
*/
local marine = null;
local minLen = 0.0;
local closmarine = null;
while ((marine = Entities.FindByClassname(marine, "asw_marine")) != null){
	local B = marine.GetOrigin();
	local fDistance = (A - B).Length();
	if (minLen == 0.0){
		minLen = fDistance;
		closmarine = marine;
	} else if (fDistance < minLen){
		minLen = fDistance;
		closmarine = marine;
	}
}
local player = null;
while((player = Entities.FindByClassname(player, "player")) != null)
	ClientPrint(player, 3, closmarine.GetMarineName() + ": Êæ∂—áÁ≤çÈìöÂÇõÓÑúÈç¶„Ñ•ÓÑÆÈçñ?);

AddThinkToEnt(egg, "BossSpawn");

self.Destroy();r <- ( RandomInt( 55, 155 )).tostring();
g <- ( RandomInt( 155, 200 )).tostring();
b <- ( RandomInt( 55, 155 )).tostring();
colour <- r + " " + g + " " + b;
EntFireByHandle(self, "Color", colour, 0, self, self);if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

hp <- 6000;
size <- 2;
healthbarSize <- "2";
up <- 150;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 3000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 3500;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 4000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 4500;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 5000;
}

if (self.GetName() != ""){
	hp = 7000;
	size = 2.3;
	up = 200;
	healthbarSize = "3";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "200 200 0", 0, self, self);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "200 200 0 210", healthbarSize, "0", "1", "", 0, 0, up);IncludeScript("0fun_declaration.nut");
sargeAng <- RandomFloat(-84.5, 0)
switch ( Convars.GetFloat( "asw_skill" ) )
{
	case 1:
	case 2:
	difficultyCorrect <- 5;
	difficultyCorrectFist <- 2;
	break;

	case 3:
	difficultyCorrect <- 0;
	difficultyCorrectFist <- 3;
	break;

	case 4:
	case 5:
	difficultyCorrect <- -5;
	difficultyCorrectFist <- 4;
	break;
}

function dealDamageToAlienFunc(radius, origin, dmg, dmgType, attacker){
	local hNearEnt = null;
	while ((hNearEnt = Entities.FindInSphere(hNearEnt, origin.GetOrigin(), radius)) != null){
		if (hNearEnt.IsValid() && hNearEnt != origin && hNearEnt.IsAlien())
			hNearEnt.TakeDamage(dmg, dmgType, attacker);
	}
	return;
}

function PushToCursor(hEnt, marine, flightTime, gravity){
	local vector = NetProps.GetPropVector(marine.GetCommander(), "m_vecCrosshairTracePos");
	hEnt.SetVelocity(LaunchVector(marine.GetOrigin(), vector, gravity, flightTime));
	return vector;
}

function SetParentDelay(){
	local origin = toget.GetOrigin();
	local strOrigin = "origin " + origin.x.tostring() + " " + origin.y.tostring() + " " + origin.z.tostring();
	DoEntFire("!self", "AddOutput", strOrigin, 0, null, toset);
	self.Destroy();
	return;
}

function bubbleSpawn(high, kill, angle){
	local bubble = Entities.CreateByClassname("prop_dynamic");
	bubble.__KeyValueFromString("model", "models/items/shield_bubble/shield_bubble.mdl");
	bubble.__KeyValueFromString("renderfx", "11");
	bubble.__KeyValueFromString("angles", angle.tostring() + " 0 0");
	bubble.SetOrigin(hMarineInDamageAmpPlacedEvent.GetOrigin() + Vector(0, 0, high));
	if (hAmp.GetOwner().GetMarineName() == "Jaeger"){
		local timerScope = Timer(0.1, SetParentDelay);
		timerScope.toget <- hMarineInDamageAmpPlacedEvent;
		timerScope.toset <- bubble;
		DoEntFire("!self", "SetParent", "!activator", 0, hMarineInDamageAmpPlacedEvent, bubble);
	} else NetProps.SetPropFloat(bubble, "m_flModelScale", 2.5);
	bubble.Spawn();
	DoEntFire("!self", "Kill", "", kill, null, bubble);
	return bubble;
}

function DestroyViaDamageDelay(delay, hEnt, damage, damageType){
	local entScope = GetScrScope(hEnt);
	entScope.damage <- damage;
	entScope.damageType <- damageType;
	entScope.destroy <- function(){
		self.TakeDamage(damage, damageType, null);
		//self.DisconnectOutput("OnUser1", "destroy");
		return;
	}
	hEnt.ConnectOutput("OnUser1", "destroy");
	EntFireByHandle(hEnt, "FireUser1", "", delay, self, self);
	return entScope;
}

function Jaeger(){
	self.StopSound("ASW_ElectrifiedSuit.Loop");
	g_ModeScript.immortalOwner <- null;
	self.DisconnectOutput("OnUser1", "destroy");
	return;
}

function Sarge(){
	g_ModeScript.vecProtectionBubble <- null;
	self.DisconnectOutput("OnUser1", "destroy");
	return;
}

function BubbleDuration(delay, hEnt, func){
	GetScrScope(hEnt).destroy <- func;
	hEnt.ConnectOutput("OnUser1", "destroy");
	EntFireByHandle(hEnt, "FireUser1", "", delay, self, self);
	return;
}

function SpawnFullDome(duration){
	bubbleSpawn(40, duration - 2, 90);
	bubbleSpawn(40, duration - 2, -90);
	bubbleSpawn(40, duration - 2, 60);
	bubbleSpawn(40, duration - 2, -60);
	bubbleSpawn(40, duration - 1, 30);
	bubbleSpawn(40, duration - 1, -30);
	bubbleSpawn(20, duration - 1, 10);
	bubbleSpawn(20, duration - 1, -10);
	local base = bubbleSpawn(0, duration, 0);
	return base;
}

function IsExtraEquipped(classname, marine){
	local hExtra = NetProps.GetPropEntityArray(marine, "m_hMyWeapons", 2);
	if (hExtra && hExtra.GetClassname() == classname)
		return true;
	return false;
}

function toggleWildcatInvis(hWildcat, AiTable, modelscale, powerup){
	if (AiTable != "" && wildcatInvisibility + 0.2 >= Time())
		return;
	local hNearEntitie = null;
	while ((hNearEntitie = Entities.FindInSphere(hNearEntitie, hWildcat.GetOrigin(), 220)) != null){
		local hNearEntitieClassname = hNearEntitie.GetClassname();
		if (hNearEntitieClassname != "asw_marine" && hNearEntitieClassname != "asw_door"){
			if (hNearEntitie.IsAlien())
				hNearEntitie.Ignite(1);
			hNearEntitie.TakeDamage(650, 8, null);
		} else if (hNearEntitieClassname == "asw_marine" && hNearEntitie != hWildcat){
			if (!hNearEntitie.IsInhabited()){
				hNearEntitie.TakeDamage(10, 64, null);
				hNearEntitie.Ignite(7);
			} else hNearEntitie.TakeDamage(10, 8, null);
		}
	}
	ParticleSpawn(0.2, 0, 0, 0, hWildcat, "vindicator_grenade", "ASWGrenade.Incendiary", "", hWildcat, 0, "", 0, "", "");
	hWildcat.EmitSound("ASW_BuffGrenade.GrenadeActivate");
	NetProps.SetPropInt(hWildcat, "m_iPowerupType", powerup);
	NetProps.SetPropFloat(hWildcat, "m_flModelScale", modelscale);
	if (AiTable != ""){
		foreach (ai in AiTable){
			DoEntFire("!self", "RevertToDefaultRelationship", "", 0, null, ai);
			DoEntFire("!self", "Kill", "", 0.01, null, ai);
		}
		g_ModeScript.hWildcat <- null;
		g_ModeScript.AiTable <- {};
	}
	return;
}

function GetScrScope(entitie){
	entitie.ValidateScriptScope();
	local entitieScope = entitie.GetScriptScope();
	return entitieScope;
}

function Timer(RefireTime, timerFunction){
	local timer = Entities.CreateByClassname("logic_timer");
	timer.__KeyValueFromFloat("RefireTime", RefireTime);
	DoEntFire("!self", "Disable", "", 0, null, timer);
	timer.ValidateScriptScope();
	local timerScope = timer.GetScriptScope();
	timerScope.timerFunction <- timerFunction;
	timer.ConnectOutput("OnTimer", "timerFunction");
	DoEntFire("!self", "Enable", "", 0, null, timer);
	return timerScope;
}


function max(One, Two){
	if (One > Two)
		return One;
	return Two;
}

function LaunchVector( src, dest, gravity, flightTime ){
	if ( flightTime == 0.0 )
	{
		flightTime = max( 0.8, sqrt( ( (dest - src).Length() * 1.5 ) / gravity ) );
	}

	// delta high from start to end
	local H = dest.z - src.z ;
	// azimuth vector
	local azimuth = dest-src;
	azimuth.z = 0;
	// get horizontal distance start to end
	local D = azimuth.Length();
	// normalize azimuth
	azimuth *= 1/D;

	local Vy = ( H / flightTime + 0.5 * gravity * flightTime );
	local Vx = ( D / flightTime );
	local ret = azimuth * Vx;
	ret.z = Vy;
	return ret;
}

function MarineAngles(marine){
	local angles = null;
	angles = NetProps.GetPropVector(marine.GetCommander(), "m_angEyeAngles");
	if (!angles)
		angles = marine.GetAngles();
	return angles;
}

function PrintToAllPlayers(message){
	local player = null;
	while((player = Entities.FindByClassname(player, "player")) != null)
		ClientPrint(player, 3, message);
	return;
}

function helpFunc(){
	PrintToAllPlayers("Âßù„ÇÜƒÅÁºÅÂã≠Êï±Èêú‚ïÅÓÜç<ÈçóÊ•ÅÊüü>ÈçöÂ†ùËãü,Èêú‚ïÅÓÜç<J K>ÊµºÊ®∫ÂØ≤ÈäÜÂÇöÓõßÈèàÂ§êÊ£∂Ê£∞Ê®øÓá¨ÈçôÂ∂âÓõ≠Èîõ?);
	self.Destroy();
}

IncludeScript("0fun_cvars.nut");
IncludeScript("0fun_bfg.nut");
IncludeScript("0fun_OnGameEvent.nut");
IncludeScript("0fun_alien_spawn_changer.nut");
IncludeScript("0fun_precache.nut");
IncludeScript("0fun_grenade_cluster.nut");
IncludeScript("0fun_adrenaline.nut");
IncludeScript("0fun_ParticleSpawn.nut");
IncludeScript("0fun_OnTakeDamage.nut");
IncludeScript("0fun2_Update.nut");
IncludeScript("0fun_player_say.nut");

//------------------------------------------------------|
//------------------ OnGameplayStart -------------------|
//------------------------------------------------------|
function OnGameplayStart(){

// Preload
local hMarine = null;
hMarine = Entities.FindByClassname(hMarine, "asw_marine");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "disease_buff");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "powerup_chemical_bullets");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_huge_k");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "stungrenade_arc_sprites");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "boomer_drop_shockwave1");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_shockwave1");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "antlion_gib_02_trailsB");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ammo_satchel_take_lrg");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "embers_medium_0New");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ms_explosion_groundring");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "melee_suck_in_release");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "antlion_spit_02");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "Explosion_FloatieEmbers");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "mortar_explosion_debrisburst");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "powerup_pickup_generic");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_grenade");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "marine_hit_spark_master");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "blink");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_sparks");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "marine_resurrection_glow2");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_vind_a");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "vindicator_grenade_fire_flash");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "boomer_drop_FloatieEmbers");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "freeze_statue_mist");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "asw_env_explosion");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_grenade_heat");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ElevatorShaftFire");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_sparks");





	local marine = null;
	while((marine = Entities.FindByClassname(marine, "asw_marine")) != null){
		marinesTable[marine] <- marine;
		if (IsExtraEquipped("asw_weapon_flashlight", marine))
			isFlashlightActive[NetProps.GetPropEntityArray(marine, "m_hMyWeapons", 2)] <- true;
	}

	Timer(2, helpFunc).PrintToAllPlayers <- PrintToAllPlayers;

	return;
}

//------------------------------------------------------|
//------------- Damage filter for doors ----------------|
//------------------------------------------------------|
local filter_activator_class = Entities.CreateByClassname("filter_activator_class");
filter_activator_class.__KeyValueFromString("filterclass", "asw_marine");
filter_activator_class.__KeyValueFromString("Negated", "1");
filter_activator_class.__KeyValueFromString("targetname", "filter");
filter_activator_class.Spawn();
local door = null;
while ((door = Entities.FindByClassname(door, "asw_door")) != null)
	DoEntFire("!self", "SetDamageFilter", "filter", 0, null, door);

//------------------------------------------------------|
//------------------- Relationship ---------------------|
//------------------------------------------------------|
local ai_relationship = Entities.CreateByClassname("ai_relationship");
ai_relationship.__KeyValueFromString("disposition", "3");
ai_relationship.__KeyValueFromString("rank", "99");
ai_relationship.__KeyValueFromString("target", "asw_mortarbug");
ai_relationship.__KeyValueFromString("subject", "asw_marine");
DoEntFire("!self", "ApplyRelationship", "", 0, null, ai_relationship);

//------------------------------------------------------|
//-------------------- 0.01 Thinker --------------------|
//------------------------------------------------------|
local target9 = Entities.CreateByClassname("info_target");
local targetScope = GetScrScope(target9);
targetScope.RollInvTable <- {};
targetScope.invRollTime <- invRollTime;
targetScope.marinesTable <- marinesTable;
targetScope.ParticleSpawn <- ParticleSpawn;
targetScope.target9 <- targetScope;
targetScope.MeleeParticleTable <- MeleeParticleTable;
targetScope.IsExtraEquipped <- IsExtraEquipped;
targetScope.GetScrScope <- GetScrScope;
targetScope.think <- function(){
	local time = Time();
	foreach (marine in marinesTable){
		local iMeleeAttackID = NetProps.GetPropInt(marine, "m_iMeleeAttackID");
		if (iMeleeAttackID == 11){
			if (!(RollInvTable.rawin(marine)) || RollInvTable[marine] + 0.3 < time){
				local particle = ParticleSpawn(0.5, 0, 0, 0, "", "mine_fire_ignite_glow", "NPC_SScanner.DiveBombFlyby", "NPC_SScanner.DiveBombFlyby", marine, 0, "Center", 0.02, "", marine);
				local angles = marine.GetAngles();
				particle.SetAngles(angles.x, angles.y, angles.z);
				GetScrScope(particle).Rotate <- function(){
					self.SetLocalAngles(0, 0, 90);
					self.SetLocalOrigin(Vector(0,0,15));
					self.DisconnectOutput("OnUser1", "Rotate");
				}
				particle.ConnectOutput("OnUser1", "Rotate");
				EntFireByHandle(particle, "FireUser1", "", 0.02, self, self);
				invRollTime[marine] <- time;
				g_ModeScript.invRollTime <- invRollTime;
			}
			RollInvTable[marine] <- time;
		} else if (iMeleeAttackID == 2){
			if (!(MeleeParticleTable.rawin(marine))){
				MeleeParticleTable[marine] <- ParticleSpawn("", 0, 0, 0, "", "thorns_marine_buff_start", "", "ASW_ElectrifiedSuit.TurnOn", marine, 0, "LHand", 0, "", marine);
				MeleeParticleTable[marine].SetOwner(marine);
				local particleScope = GetScrScope(MeleeParticleTable[marine]);
				particleScope.MeleeParticleTable <- MeleeParticleTable;
				particleScope.target9 <- target9;
				particleScope.Melee <- function(){
					if (self && self.IsValid()){
						local marine = self.GetOwner();
						if (NetProps.GetPropInt(marine, "m_iMeleeAttackID") != 2){
							MeleeParticleTable.rawdelete(marine);
							target9.MeleeParticleTable <- MeleeParticleTable;
							self.Destroy();
						}
					}
					return 0.01;
				}
				AddThinkToEnt(MeleeParticleTable[marine], "Melee");
				ParticleSpawn(0.8, 0, 0, 0, "", "electric_weapon_zap_cp1", "", "", marine, 0, "LHand", 0, MeleeParticleTable[marine], "");
				ParticleSpawn(0.3, 0, 0, 0, "", "electric_field_ground", "", "", marine, 0, "LHand", 0, "", "");
				local hNearEnt = null;
				local radius = 30;
				local iDamage = 40;
				local marineOrigin = marine.GetOrigin();
				if (IsExtraEquipped("asw_weapon_fist", marine)){
					radius = 100;
					iDamage = 300
					ParticleSpawn(0.3, 0, 0, 0, marine, "welding_door_cut", "", "", marine, 0, "LHand", 0, "", "");
				}
				while ((hNearEnt = Entities.FindInSphere(hNearEnt, marineOrigin + marine.GetForwardVector()*30, radius)) != null){
					if (hNearEnt.IsValid() && (hNearEnt.IsAlien() || hNearEnt.GetClassname() == "asw_alien_goo")){
						if (TraceLine(marineOrigin, hNearEnt.GetOrigin(), null) >= 1){
							hNearEnt.ElectroStun(1);
							hNearEnt.TakeDamage(iDamage, 8, marine);
						}
					} else if (hNearEnt.GetClassname() == "asw_door")
						hNearEnt.TakeDamage(hNearEnt.GetMaxHealth()/20, 4098, null);
				}
			}
		}
	}
	return 0.01; //instead of hooks which doesn't exist
}
AddThinkToEnt(target9, "think");

//------------------------------------------------------|
//-------------------- 0.1 Thinker ---------------------|
//------------------------------------------------------|
function underslungShotHook(){
	foreach (marine in marinesTable){
		local invData = {};
		marine.GetInventoryTable(invData);
		foreach (slot, weapon in invData){
			local weaponClassname = weapon.GetClassname();
			local time = Time();
			if (weaponClassname == "asw_weapon_devastator" && NetProps.GetPropInt(weapon, "m_bFastFire")
				&& (!(timeTable.rawin(weapon)) || timeTable[weapon] + 0.3 < time)){
				timeTable[weapon] <- time;
				local point1 = Entities.CreateByClassname("info_target");
				DoEntFire("!self", "SetParent", "!activator", 0, weapon, point1);
				DoEntFire("!self", "SetParentAttachment", "muzzle", 0, weapon, point1);
				local point1Scope = GetScrScope(point1);
				point1Scope.IncludeScript("0fun_ParticleSpawn.nut");
				point1Scope.aliensArray <- aliensArray;
				point1Scope.charmedAliens <- charmedAliens;
				point1Scope.marine <- marine;
				point1Scope.weapon <- weapon;
				point1Scope.MarineAngles <- MarineAngles;
				point1Scope.Point1SetLocalOrigin <- function(){
					if (self && self.IsValid()){
						if (NetProps.GetPropEntity(marine, "m_hActiveWeapon") != weapon){
							DoEntFire("!self", "Kill", "", 0, null, self);
							return;
						}

						local angles = MarineAngles(marine);
						local hIncGrenade = Entities.CreateByClassname("asw_boomer_blob");
						hIncGrenade.SetOrigin(self.GetOrigin() + Vector(0,0,7));
						hIncGrenade.SetLocalAngles(angles.x, angles.y, 0);
						DoEntFire("!self", "Color", "255 47 250", 0, null, hIncGrenade);
						hIncGrenade.Spawn();
						hIncGrenade.Activate();
						NetProps.SetPropFloat(hIncGrenade, "m_fDetonateTime", 1337);
						hIncGrenade.SetModel("models/swarm/grenades/HandGrenadeProjectile.mdl");
						NetProps.SetPropFloat(hIncGrenade, "m_flModelScale", 0.7);
						hIncGrenade.SetCollisionGroup(32);

						local vecCur = NetProps.GetPropVector(marine.GetCommander(), "m_vecCrosshairTracePos");
						local marineOrigin = marine.GetOrigin();
						local vecCurLen = (marineOrigin - vecCur).Length();
						if (vecCurLen > 600 || vecCur.tostring() == "(vector : (0.000000, 0.000000, 0.000000))")
							vecCurLen = 600;
						hIncGrenade.SetVelocity(hIncGrenade.GetForwardVector() * vecCurLen*1.3 + Vector(0,0,150));
						ParticleSpawn("", 0, 0, 0, hIncGrenade, "ent_on_fire_embers", "ASW_Weapon_Rifle.Grenade", "", hIncGrenade, 0, "", 0, "", "");
						ParticleSpawn("", 0, 0, 0, hIncGrenade, "lifesteal2", "ASW_Weapon_Rifle.Grenade", "", hIncGrenade, 0, "", 0, "", "");
						ParticleSpawn(1, 0, 0, 0, hIncGrenade, "lifesteal_stealhealth", "", "", hIncGrenade, 0, "", 0, "", "");
						local particle = ParticleSpawn(2, 0, 0, 0, self, "muzzleflash_grenadelauncher_main", "", "", self, 0, "", 0, "", "");
						particle.SetLocalAngles(0, angles.y, 0);
						hIncGrenade.ValidateScriptScope();
						local grenadeScope = hIncGrenade.GetScriptScope();
						grenadeScope.charmedAliens <- charmedAliens;
						grenadeScope.ParticleSpawn <- ParticleSpawn;
						grenadeScope.aliensArray <- aliensArray;
						grenadeScope.selfOrigin <- hIncGrenade.GetOrigin();
						grenadeScope.thinkfuncti <- function(){
							if (!self || !self.IsValid())
								return 1;
							if (selfOrigin == self.GetOrigin())
								return 0.1;
							local hNearEnt = null;
							while ((hNearEnt = Entities.FindInSphere(hNearEnt, self.GetOrigin(), 25)) != null){
								if (hNearEnt.IsValid() && hNearEnt.IsAlien()){
									Charm();
									DoEntFire("!self", "Kill", "", 0, null, self);
									return 1;
								}
							}
							selfOrigin = self.GetOrigin();
							return 0.1;
						}

						grenadeScope.Detonate <- function(){
							if (!self || !self.IsValid())
								return;
							Charm();
							DoEntFire("!self", "Kill", "", 0, null, self);
						}

						grenadeScope.Charm <- function(){
							ParticleSpawn(2, 0, 0, 0, self, "vindicator_grenade_init_flash", "PropaneTank.Burst", "", "", 0, "", 0, "", "");
							ParticleSpawn(0.3, 0, 0, 0, self, "ms_explosion_smoke_post", "PropaneTank.Burst", "", "", 0, "", 0, "", "");
							ParticleSpawn(0.3, 0, 0, 0, self, "explosion_grenade_heat", "ASW_Door.BulkheadStop", "", "", 0, "", 0, "", "");
							ParticleSpawn(2, 0, 0, 0, self, "Explosion_FloatieEmbers", "ASW_Door.BulkheadStop", "", "", 0, "", 0, "", "");
							ParticleSpawn(0.2, 0, 0, 10, self, "marine_gib_body_spark", "", "", "", 0, "", 0, "", "");
							local hNearEnt = null;
							local selfOrigin = self.GetOrigin();
							while ((hNearEnt = Entities.FindInSphere(hNearEnt, selfOrigin, 460)) != null){
								if (hNearEnt.IsValid() && hNearEnt.IsAlien()){
									if (TraceLine(selfOrigin, hNearEnt.GetOrigin(), null) >= 1){
										if (hNearEnt in charmedAliens)
											continue;
										//ParticleSpawn(0.7, 0, 0, 5, self, "drop_health_tracer_start", "", "", "", 0, "", 0, hNearEnt, "");
										//to do: better realisation of cpoint in ParticleSpawn function
										charmedAliens[hNearEnt] <- hNearEnt;
										DoEntFire("!self", "SetRelationship", "asw_marine D_NU 1", 0, null, hNearEnt);
										DoEntFire("!self", "SetRelationship", "asw_marine D_HT 1", 10, null, hNearEnt);

										foreach (alien in aliensArray){
											DoEntFire("!self", "SetRelationship", alien + " D_LI 1", 10, null, hNearEnt);
											DoEntFire("!self", "SetRelationship", alien + " D_HT 1", 0, null, hNearEnt);
											DoEntFire("!self", "Color", hNearEnt.GetKeyValue("rendercolor"), 10, null, hNearEnt);
											DoEntFire("!self", "Color", "255 47 250", 0, null, hNearEnt);
										}
									}
								}
							}
							return;
						}
						hIncGrenade.ConnectOutput("OnUser1", "Detonate");
						EntFireByHandle(hIncGrenade, "FireUser1", "", 3, self, self);
						AddThinkToEnt(hIncGrenade, "thinkfuncti");

						DoEntFire("!self", "Kill", "", 0.2, null, self);
						self.DisconnectOutput("OnUser1", "Point1SetLocalOrigin");
					}
					return;
				}
				point1.ConnectOutput("OnUser1", "Point1SetLocalOrigin");
				EntFireByHandle(point1, "FireUser1", "", 0.1, self, self);
			}
		}
	}
	return;
}
local underslungShotHookTimer = Timer(0.1,underslungShotHook);
underslungShotHookTimer.marinesTable <- marinesTable;
underslungShotHookTimer.GetScrScope <- GetScrScope;
underslungShotHookTimer.aliensArray <- aliensArray;
underslungShotHookTimer.charmedAliens <- charmedAliens;
underslungShotHookTimer.MarineAngles <- MarineAngles;
underslungShotHookTimer.timeTable <- {};
if (!self || !self.IsValid())
	return;

IncludeScript("0fun_asw_health_bar");

hp <- 10000;
size <- 1.3;
healthbarSize <- "3";
up <- 180;

if ( Convars.GetFloat( "asw_skill" ) == 1 ) { // easy
	hp = 8000;
} else if ( Convars.GetFloat( "asw_skill" ) == 2 ) { // normal
	hp = 9000;
} else if ( Convars.GetFloat( "asw_skill" ) == 3 ) { // hard
	hp = 10000;
} else if ( Convars.GetFloat( "asw_skill" ) == 4 ) { // insane
	hp = 11000;	
} else if ( Convars.GetFloat( "asw_skill" ) == 5 ) { // brutal
	hp = 12000;
}

if (self.GetName() != ""){
	hp = 130000;
	size = 1.6;
	up = 210;
	healthbarSize = "5";
}

function Delay(){
	if (!self || !self.IsValid())
		return;
	self.SetHealth(self.GetHealth() + hp);
	self.SetMaxHealth(self.GetHealth());
	self.__KeyValueFromString("speedscale", "0.8");
	self.__KeyValueFromString("flinchable", "0");
	EntFireByHandle(self, "Color", "121 154 94", 0, self, self);
	self.SetCollisionGroup(24);
	NetProps.SetPropFloat(self, "m_flModelScale", size);
	self.DisconnectOutput("OnUser3", "Delay");
}
self.ConnectOutput("OnUser3", "Delay");
EntFireByHandle(self, "FireUser3", "", 0, self, self);

function OnDeath(){
	DoEntFire("!self", "Kill", "", 0, null, hHealthbar);
	self.DisconnectOutput("OnDeath", "OnDeath");
	return;
}
self.ConnectOutput("OnDeath", "OnDeath");

hHealthbar <- AddHealthBar(self, "121 154 94 210", healthbarSize, "0", "1", "", 0, 0, up);
function Update()
{

	local time = Time();
	
	foreach (classname in ammoEntities){
		local ammo = null;
		while ( ( ammo = Entities.FindByClassname( ammo, classname ) ) != null ){
			//if ( !(map == "rd-ad4_forbidden_outpost" && classname == "asw_weapon_jump_jet") )
				ammo.Destroy();
		}
	}

	local hDoor = null;
	while ( (hDoor = Entities.FindByClassname( hDoor, "asw_door" )) != null ){
		if (hDoor.GetHealth() <= 0)
			DoEntFire("!self", "Kill", "", 2, null, hDoor);
	}

	local minDelay = 0.3;
	foreach (marine in marinesTable){
	
		if (rd_challenge == "0fun2"){
		
			//ÈçôÂÇù‚Ç¨?fun2
			//Êæ∂Â∂ÜÊ§øÈçö?ÁªâÊéìÊ£§ÈèÅ?
			if (incDelayTable.rawin(marine)){ //timer for invulnerability after revive
				if (noInstaDeathAfterReviveTable[marine] && incDelayTable[marine] + 3 < time)
					noInstaDeathAfterReviveTable[marine] <- 0;
			}
		}
		
		//printl(marine);
        for (local weapon = marine.FirstMoveChild(); weapon != null; weapon = weapon.NextMovePeer()){
			local weaponClass = weapon.GetClassname();

			if (weaponClass == "asw_weapon_medkit" && weapon.Clip1() == 1 && isawaliable.rawin(weapon) && !isawaliable[weapon])
				isawaliable[weapon] <- true;

			if (weaponClass == "asw_weapon_railgun" || weaponClass == "asw_weapon_sniper_rifle"){
				if (weapon.GetClips() < 2){
					weapon.SetClips(2);
					continue;
				}
			}

			if ( !( "GetMaxClip1" in weapon ) )
				continue;

			local maxClip1 = weapon.GetMaxClip1();
			if (weaponClass in infWeapon){
				if (weapon.Clip1() < maxClip1)
					weapon.SetClip1(maxClip1);
			} else {
				local clips1 = weapon.GetMaxAmmo1() / maxClip1;
				if (clips1 < noClipPenalty){
					if (weaponClass in ammoCount)
						maxClip1 = ammoCount[weaponClass];
					else maxClip1 = ceil( maxClip1 * ( 1 - singleClipPenalty / clips1 ) );
				}

				if ( weapon.Clip1() > maxClip1 )
					weapon.SetClip1( maxClip1 );

				if ( !( weapon.entindex() in nextRefillTick1 ) ){
					nextRefillTick1[weapon.entindex()] <- Time();
					lastClip1[weapon.entindex()] <- weapon.Clip1();
					continue;
				}

				local timeBetweenInverse1 = 75;
				if (weaponClass in regenInterval)
					timeBetweenInverse1 = regenInterval[weaponClass];

				if ( weapon.Clip1() != lastClip1[weapon.entindex()] ){
					local timeAfterShoot1 = 5;
					if (weaponClass in regenDelay)
						timeAfterShoot1 = regenDelay[weaponClass];
					lastClip1[weapon.entindex()] = weapon.Clip1();
					nextRefillTick1[weapon.entindex()] = Time() + timeAfterShoot1 + timeBetweenInverse1 / weapon.GetMaxAmmo1();
				}

				if ( nextRefillTick1[weapon.entindex()] <= Time() && weapon.Clip1() < maxClip1 ){
					weapon.SetClip1( weapon.Clip1() + 1 );
					lastClip1[weapon.entindex()] = weapon.Clip1();
					delay <- timeBetweenRefill1 + timeBetweenInverse1 / weapon.GetMaxAmmo1();
					nextRefillTick1[weapon.entindex()] = Time() + delay;
					if ( delay < minDelay )
						minDelay = delay;
				}
			}

			if (weaponClass in regenInterval2 || weaponClass in undCount || weaponClass in undRegenDelay){
                if ( !( weapon.entindex() in nextRefillTick2 ) ){
                    nextRefillTick2[weapon.entindex()] <- Time();
                    lastClip2[weapon.entindex()] <- weapon.Clip2();
                    continue;
                }

				if ( weapon.GetMaxClip2() <= 0 )
					continue;

				local maxClip2 = weapon.GetMaxClip2();
				if (weaponClass in undCount)
					maxClip2 = undCount[weaponClass];

				if ( weapon.Clip2() > maxClip2 )
					weapon.SetClip2( maxClip2 );

				local timeBetweenInverse2 = 5;
				if (weaponClass in regenInterval2)
					timeBetweenInverse2 = regenInterval2[weaponClass];

				if ( weapon.Clip2() != lastClip2[weapon.entindex()] ){
					local timeAfterShoot2 = 10;
					if (weaponClass in undRegenDelay)
						timeAfterShoot2 = undRegenDelay[weaponClass];
					lastClip2[weapon.entindex()] = weapon.Clip2();
					nextRefillTick2[weapon.entindex()] = Time() + timeAfterShoot2 + timeBetweenInverse2 / weapon.GetMaxAmmo2();
				}

				if ( nextRefillTick2[weapon.entindex()] <= Time() && weapon.Clip2() < weapon.GetDefaultClip2() ){
					weapon.SetClip2( weapon.Clip2() + 1 );
					lastClip2[weapon.entindex()] = weapon.Clip2();
					delay <- timeBetweenRefill2 + timeBetweenInverse2 / weapon.GetMaxAmmo2();
					nextRefillTick2[weapon.entindex()] = Time() + delay;
					if ( delay < minDelay )
						minDelay = delay;
				}
			}
        }
    }

	return minDelay;
}


function OnGameEvent_heal_beacon_placed(params)
{
	local hOldBeacon = EntIndexToHScript(params["entindex"]);
	local marine = EntIndexToHScript(params["marine"]);
	
	if (rd_challenge == "0funx"){
		if (marine.GetMarineName() == "Faith")
		{
			local hHealBeacon = PlaceHealBeacon(300, 6, 0, 16, 120, hOldBeacon.GetOrigin() );
		}else
		{
			local hHealBeacon = PlaceHealBeacon(200, 6, 0, 11, 100, hOldBeacon.GetOrigin() );
		}		
		
	}else{
		if (marine.GetMarineName() == "Faith")
		{
			local hHealBeacon = PlaceHealBeacon(200, 6, 0, 16, 120, hOldBeacon.GetOrigin() );
		}else
		{
			local hHealBeacon = PlaceHealBeacon(150, 6, 0, 11, 100, hOldBeacon.GetOrigin() );
		}		
	}
	

	
	
	//Â®åËç§ÊûüÈñ≤?,Èçã„É•ÊÇçÈêòË∑∫Âñå,Èé∞ÁÜ∏ÁÖãÂ®åÁªòÂâ§Èñ≤?Èé∏‰Ω∫ÁîªÈèÉÂ†ïÊ£ø,ÈëºÂÜ®Ê¥ø?  , ÈçßÊÑ≠Áà£Èêê?
	//PushToCursor(hHealBeacon, marine, 0.0, 800.0);
	hOldBeacon.Destroy();
	return;
}/*|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| DECLARATION |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/

IncludeScript("0fun_script.nut");

sargeAng <- RandomFloat(-84.5, 0)
switch ( Convars.GetFloat( "asw_skill" ) )
{
	case 1:
	case 2:
	difficultyCorrect <- 5;
	difficultyCorrectFist <- 2;
	break;

	case 3:
	difficultyCorrect <- 0;
	difficultyCorrectFist <- 3;
	break;

	case 4:
	case 5:
	difficultyCorrect <- -5;
	difficultyCorrectFist <- 4;
	break;
}

infWeapon <- {
	asw_weapon_rifle=0
	asw_weapon_vindicator=0
	asw_weapon_prifle=0
	asw_weapon_minigun=0
	asw_weapon_50calmg=0
	asw_weapon_autogun=0
	asw_weapon_deagle=0
	asw_weapon_devastator=0
	asw_weapon_flamer=0
	asw_weapon_mining_laser=0
	asw_weapon_pdw=0
	asw_weapon_pistol=0
	asw_weapon_ricochet=0
	asw_weapon_shotgun=0
	asw_weapon_tesla_gun=0
	asw_weapon_medrifle=0
	asw_weapon_heavy_rifle=0
	asw_weapon_combat_rifle=0
	asw_weapon_grenade_launcher=0
	asw_weapon_stim=0
};

regenInterval <- {
	asw_weapon_tesla_trap=20
	asw_weapon_stim=0
	asw_weapon_heal_grenade=0
	asw_weapon_electrified_armor=50
	asw_weapon_hornet_barrage=0
	asw_weapon_grenades=100
	asw_weapon_mines=0
	asw_weapon_medical_satchel=20
	asw_weapon_medkit=0
	asw_weapon_laser_mines=20
	asw_weapon_freeze_grenades=15
	asw_weapon_flares=0
	asw_weapon_gas_grenades=0
	asw_weapon_sniper_rifle=7
}

ammoCount <- {
	asw_weapon_tesla_trap=2
	asw_weapon_stim=1
	asw_weapon_heal_grenade=5
	asw_weapon_electrified_armor=2
	asw_weapon_hornet_barrage=1
	asw_weapon_grenades=2
	asw_weapon_mines=3
	asw_weapon_medical_satchel=2
	asw_weapon_medkit=3
	asw_weapon_laser_mines=10
	asw_weapon_freeze_grenades=3
	asw_weapon_flares=1
	asw_weapon_gas_grenades=3
	asw_weapon_sniper_rifle=10
}

regenDelay <- {
	asw_weapon_tesla_trap=5
	asw_weapon_stim=30
	asw_weapon_heal_grenade=5
	asw_weapon_electrified_armor=25
	asw_weapon_hornet_barrage=50
	asw_weapon_grenades=60
	asw_weapon_mines=50
	asw_weapon_medical_satchel=20
	asw_weapon_medkit=60
	asw_weapon_laser_mines=20
	asw_weapon_freeze_grenades=15
	asw_weapon_flares=3
	asw_weapon_gas_grenades=50
	asw_weapon_sniper_rifle=3
}

damageTable <- {
	asw_weapon_shotgun=300
	asw_weapon_ricochet=80
	asw_weapon_prifle=0
	asw_weapon_devastator=20
	asw_weapon_rifle=80
	asw_weapon_combat_rifle=80
	asw_weapon_minigun=50
	asw_weapon_deagle=0
	asw_weapon_50calmg=90
	asw_weapon_vindicator=30
	asw_weapon_flamer=0
	asw_weapon_railgun=1
	asw_weapon_electrified_armor=300
	asw_weapon_tesla_trap=15
	asw_weapon_sniper_rifle=0
	asw_weapon_chainsaw=200
	asw_weapon_pistol=0
	asw_weapon_hornet_barrage=0
	asw_weapon_smart_bomb=0
	asw_weapon_tesla_gun=0
	asw_weapon_pdw=0
	asw_weapon_grenades=2000
	asw_weapon_mining_laser=0
	asw_weapon_autogun=0
	asw_weapon_medrifle=0
	asw_weapon_heavy_rifle=0
	asw_sentry_top_cannon=600
	asw_sentry_top_flamer=60
}

friendlyDamageTable <- {
	asw_weapon_shotgun=10
	asw_weapon_ricochet=10
	asw_weapon_prifle=10
	asw_weapon_devastator=2
	asw_weapon_rifle=10
	asw_weapon_combat_rifle=10
	asw_weapon_minigun=3
	asw_weapon_deagle=10
	asw_weapon_50calmg=10
	asw_weapon_vindicator=3
	asw_weapon_flamer=0
	asw_weapon_railgun=70
	asw_weapon_electrified_armor=0
	asw_weapon_tesla_trap=0
	asw_weapon_sniper_rifle=10
	asw_weapon_chainsaw=10
	asw_weapon_pistol=5
	asw_weapon_hornet_barrage=0
	asw_weapon_smart_bomb=0
	asw_weapon_tesla_gun=0
	asw_weapon_pdw=5
	asw_weapon_grenades=0
	asw_weapon_mining_laser=10
	asw_weapon_autogun=10
	asw_weapon_medrifle=5
	asw_weapon_heavy_rifle=10
	asw_sentry_top_cannon=0
	asw_sentry_top_flamer=0
}

backfireDamageTable <- {
	asw_weapon_shotgun=5
	asw_weapon_ricochet=5
	asw_weapon_prifle=5
	asw_weapon_devastator=2
	asw_weapon_rifle=5
	asw_weapon_combat_rifle=5
	asw_weapon_minigun=5
	asw_weapon_deagle=20
	asw_weapon_50calmg=20
	asw_weapon_vindicator=2
	asw_weapon_flamer=0
	asw_weapon_railgun=70
	asw_weapon_electrified_armor=0
	asw_weapon_tesla_trap=0
	asw_weapon_sniper_rifle=10
	asw_weapon_chainsaw=10
	asw_weapon_pistol=5
	asw_weapon_hornet_barrage=0
	asw_weapon_smart_bomb=0
	asw_weapon_tesla_gun=0
	asw_weapon_pdw=5
	asw_weapon_grenades=0
	asw_weapon_mining_laser=15
	asw_weapon_autogun=10
	asw_weapon_medrifle=5
	asw_weapon_heavy_rifle=5
	asw_sentry_top_cannon=0
	asw_sentry_top_flamer=0
}

regenInterval2 <- {
	asw_weapon_heavy_rifle=100
	asw_weapon_rifle=160
}

undCount <- {
	asw_weapon_heavy_rifle=2
	asw_weapon_vindicator=5
	asw_weapon_rifle=5
	asw_weapon_prifle=5
	asw_weapon_combat_rifle=5
}

undRegenDelay <- {
	asw_weapon_heavy_rifle=100
	asw_weapon_rifle=60
}

nextRefillTick1 <- {};
nextRefillTick2 <- {};
lastClip1 <- {};
lastClip2 <- {};
timeforexplosion <- {};

timeBetweenRefill1 <- 0.1;
timeBetweenRefill2 <- 5;
singleClipPenalty <- 0.55;
noClipPenalty <- 4;
asw_game_resource <- null;
asw_game_resource = Entities.FindByClassname(asw_game_resource, "asw_game_resource");
map <- GetMapName();
bFF <- true;
if (FileToString("ff") == "0")
	bFF = false;

ammoEntities <- [
	"asw_ammo_drop",
	"asw_ammo_rifle",
	"asw_ammo_autogun",
	"asw_ammo_shotgun",
	"asw_ammo_vindicator",
	"asw_ammo_flamer",
	"asw_ammo_pistol",
	"asw_ammo_mining_laser",
	"asw_ammo_railgun",
	"asw_ammo_chainsaw",
	"asw_ammo_pdw",
	"asw_weapon_ammo_satchel",
	"asw_pickup_ammo_satchel",
	"asw_weapon_blink",
	"asw_weapon_t75",
	//"asw_weapon_jump_jet"
];



function CreateParticleFunc(flAliveTime, VecOrigin, VecAngles, strParticleClass)
{
	local hParticle = Entities.CreateByClassname("info_particle_system");
	hParticle.__KeyValueFromString("effect_name", strParticleClass);
	hParticle.__KeyValueFromString("start_active", "1");
	hParticle.SetOrigin(VecOrigin);
	hParticle.SetAnglesVector(VecAngles);
	hParticle.Spawn();
	hParticle.Activate();
	DoEntFire("!self", "Kill", "", flAliveTime, null, hParticle);
}

/*|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/

local target = Entities.CreateByClassname("info_target");
target.PrecacheModel("models/swarm/harvester/Harvester.mdl");
target.PrecacheModel("models/swarm/buzzer/buzzer.mdl");

function dealDamageToAlienFunc(radius, origin, dmg, dmgType, attckr)
{
	local hNearEnt = null;
	while ((hNearEnt = Entities.FindInSphere(hNearEnt, origin.GetOrigin(), radius)) != null){
		if (hNearEnt.IsValid() && hNearEnt != origin && hNearEnt.IsAlien())
			hNearEnt.TakeDamage(dmg, dmgType, attckr);
	}
	return;
}

function IsMarineInfested() //destroy parasite prop
{
	local isInfested = NetProps.GetPropFloat( hVictim, "m_fInfestedTime" );
	if (isInfested == 0)
		self.Destroy();
	return;
}

function RotateToMarineNeck() //rotate parasite
{
	self.SetLocalAngles(40, 90, 0);
	self.SetLocalOrigin(Vector(0, -3, 0));
	self.DisconnectOutput("OnUser1", "RotateToMarineNeck");
	return;
}

function OnGameEvent_mission_failed(params){
	local classes = ["asw_drone",
		"asw_buzzer",
		"asw_parasite",
		"asw_shieldbug",
		"asw_grub",
		"asw_drone_jumper",
		"asw_harvester",
		"asw_parasite_defanged",
		"asw_queen",
		"asw_boomer",
		"asw_ranger",
		"asw_mortarbug",
		"asw_shaman",
		"asw_drone_uber",
		"npc_antlionguard_normal",
		"npc_antlionguard_cavern"];
	foreach (classname in classes){
		local ent = null;
		while ((ent = Entities.FindByClassname(ent, classname)) != null){
			DoEntFire("!self", "Kill", "", 0, null, ent);
		}
	}

	function Restart()
		Director.RestartMission();
	local target = Timer(1, Restart);

	return;
}


function OnGameEvent_sentry_complete(params)
{
	local sentry = EntIndexToHScript( params["entindex"] );
	sentry.SetCollisionGroup(24);
	sentry.SetSize( Vector(0,0,0), Vector(0,0,0));
	return;
}

function OnGameEvent_sentry_start_building(params)
{
	local sentry = EntIndexToHScript( params["entindex"] );
	sentry.SetCollisionGroup(24);
	sentry.SetSize( Vector(0,0,0), Vector(0,0,0));
	return;
}

function OnGameEvent_weapon_reload_finish(params)
{
	local marine = EntIndexToHScript( params["marine"] );
	local hActiveWeapon = NetProps.GetPropEntity(marine, "m_hActiveWeapon");
	if (hActiveWeapon && hActiveWeapon.GetClassname() == "asw_weapon_sniper_rifle")
		hActiveWeapon.SetClip1(8);
	return;
}

isawaliable <- {};
function OnGameEvent_weapon_offhand_activate(params)
{
	local weapon = EntIndexToHScript(params["weapon"]);
	local marine = EntIndexToHScript(params["marine"]);
	if (weapon.GetClassname() == "asw_weapon_medkit" && weapon.Clip1() == 0 && (!isawaliable.rawin(weapon) || isawaliable[weapon])){
		marine.SetHealth(marine.GetMaxHealth());
		marine.CureInfestation();
		isawaliable[weapon] <- false;
	}
	return;
}

function OnGameEvent_item_pickup(params)
{
	local weapon = EntIndexToHScript(params["entindex"]);
	if (weapon.GetClassname() == "asw_weapon_medkit" && weapon.Clip1() >= 2)
		weapon.SetClip1(1);
	return;
}

function PrintToAllPlayers(message){
	local player = null;
	while((player = Entities.FindByClassname(player, "player")) != null)
		ClientPrint(player, 3, message);
	return;
}

function Timer(RefireTime, timerFunction){
	local timer = Entities.CreateByClassname("logic_timer");
	timer.__KeyValueFromFloat("RefireTime", RefireTime);
	DoEntFire("!self", "Disable", "", 0, null, timer);
	timer.ValidateScriptScope();
	local timerScope = timer.GetScriptScope();
	timerScope.timerFunction <- timerFunction;
	timer.ConnectOutput("OnTimer", "timerFunction");
	DoEntFire("!self", "Enable", "", 0, null, timer);
	return timerScope;
}

marinesTable <- {};
function OnGameplayStart(){
	local marine = null;
	while ((marine = Entities.FindByClassname(marine, "asw_marine")) != null){
		marinesTable[marine] <- marine;
	}

	local sniper = null;
	while ((sniper = Entities.FindByClassname(sniper, "asw_weapon_sniper_rifle")) != null){
		sniper.SetClip1(8);
	}

	local hMarine = null;
	hMarine = Entities.FindByClassname(hMarine, "asw_marine");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "disease_buff");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "powerup_chemical_bullets");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_huge_k");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "stungrenade_arc_sprites");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "boomer_drop_shockwave1");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_shockwave1");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "antlion_gib_02_trailsB");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ammo_satchel_take_lrg");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "embers_medium_0New");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ms_explosion_groundring");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "melee_suck_in_release");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "antlion_spit_02");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "Explosion_FloatieEmbers");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "mortar_explosion_debrisburst");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "powerup_pickup_generic");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_grenade");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "marine_hit_spark_master");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "blink");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_sparks");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "marine_resurrection_glow2");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_vind_a");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "vindicator_grenade_fire_flash");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "boomer_drop_FloatieEmbers");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "freeze_statue_mist");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "asw_env_explosion");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_grenade_heat");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ElevatorShaftFire");
	CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_sparks");
  PrintToAllPlayers("Âßù„ÇÜƒÅÁºÅÂã≠Êï±Èêú‚ïÅÓÜç<ÈçóÊ•ÅÊüü>ÈçöÂ†ùËãü,Èêú‚ïÅÓÜç<J K>ÊµºÊ®∫ÂØ≤ÈäÜÂÇöÓõßÈèàÂ§êÊ£∂Ê£∞Ê®øÓá¨ÈçôÂ∂âÓõ≠Èîõ?);


	return;
}

/*|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| INCLUDE ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
IncludeScript("0fun_player_say.nut");
IncludeScript("0fun_alien_spawn_changer.nut");
IncludeScript("0fun_cvars.nut");
IncludeScript("0fun_ParticleSpawn.nut");
IncludeScript("0fun_fun_power_damage.nut");
IncludeScript("0fun_fun_power_kill.nut");
/*|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/

// full life 140 125 80 40


function OnGameEvent_fast_reload(params)
{
	local marine = EntIndexToHScript(params["marine"]);

	for (local checkWeapon = marine.FirstMoveChild(); checkWeapon != null; checkWeapon = checkWeapon.NextMovePeer())
	{
		if(checkWeapon.GetClassname() == "asw_weapon_welder")
		{
			marine.EmitSound("ASW_Tesla_Laser.Damage");

			//CreateParticleFunc(2, marine.GetOrigin(), Vector(0, 0, 0), "stungrenade_arc_sprites");
			CreateParticleFunc(2, marine.GetOrigin() + Vector(0, 0, 0), Vector(0, 0, 0), "blink");
			CreateParticleFunc(2, marine.GetOrigin() + Vector(0, 0, 0), Vector(0, 0, 0), "blink");
			CreateParticleFunc(2, marine.GetOrigin() + Vector(0, 0, 0), Vector(0, 0, 0), "blink");

			local nearTarget = null;
			while((nearTarget = Entities.FindInSphere(nearTarget, marine.GetOrigin(), 120)) != null)
			{
				if ( nearTarget.IsAlien() )
					nearTarget.ElectroStun(0.75);
			}
			break;
		}
	}
	return;
}

function OnGameEvent_item_pickup(params)
{
//		"userid"	"short"		// user ID on server
//		"entindex"	"long"		// item entindex
//		"classname"	"string"	// item name
//		"slot"		"short"		// slot the item was put in
//		"replace"	"bool"		// did it replace another weapon
//		"offhand"	"bool"		// can it be offhanded?	
	//local classname = EntIndexToHScript(params["classname"]);
	//local userid = EntIndexToHScript(params["userid"]);
	//local entindex = EntIndexToHScript(params["entindex"]);
	//local slot = EntIndexToHScript(params["slot"]);
	//local replace = EntIndexToHScript(params["replace"]);
	//local offhand = EntIndexToHScript(params["offhand"]);
	//ClientPrint(null, 3, "classname " +  classname + " uid " +  userid );
	//ClientPrint(null, 3, "classname " +  classname );
	
	//print("classname: " + params["classname"] + " UID " +  params["userid"]  );
	
}

function CreateParticleFunc(flAliveTime, VecOrigin, VecAngles, strParticleClass)
{
	local hParticle = Entities.CreateByClassname("info_particle_system");
	hParticle.__KeyValueFromString("effect_name", strParticleClass);
	hParticle.__KeyValueFromString("start_active", "1");
	hParticle.SetOrigin(VecOrigin);
	hParticle.SetAnglesVector(VecAngles);
	hParticle.Spawn();
	hParticle.Activate();
	DoEntFire("!self", "Kill", "", flAliveTime, null, hParticle);
}



IncludeScript("0fun_Update.nut");IncludeScript("0fun_declaration.nut");
sargeAng <- RandomFloat(-84.5, 0)
switch ( Convars.GetFloat( "asw_skill" ) )
{
	case 1:
	case 2:
	difficultyCorrect <- 5;
	difficultyCorrectFist <- 2;
	break;

	case 3:
	difficultyCorrect <- 0;
	difficultyCorrectFist <- 3;
	break;

	case 4:
	case 5:
	difficultyCorrect <- -5;
	difficultyCorrectFist <- 4;
	break;
}

function dealDamageToAlienFunc(radius, origin, dmg, dmgType, attacker){
	local hNearEnt = null;
	while ((hNearEnt = Entities.FindInSphere(hNearEnt, origin.GetOrigin(), radius)) != null){
		if (hNearEnt.IsValid() && hNearEnt != origin && hNearEnt.IsAlien())
			hNearEnt.TakeDamage(dmg, dmgType, attacker);
	}
	return;
}

function PushToCursor(hEnt, marine, flightTime, gravity){
	local vector = NetProps.GetPropVector(marine.GetCommander(), "m_vecCrosshairTracePos");
	hEnt.SetVelocity(LaunchVector(marine.GetOrigin(), vector, gravity, flightTime));
	return vector;
}

function SetParentDelay(){
	local origin = toget.GetOrigin();
	local strOrigin = "origin " + origin.x.tostring() + " " + origin.y.tostring() + " " + origin.z.tostring();
	DoEntFire("!self", "AddOutput", strOrigin, 0, null, toset);
	self.Destroy();
	return;
}

function bubbleSpawn(high, kill, angle){
	local bubble = Entities.CreateByClassname("prop_dynamic");
	bubble.__KeyValueFromString("model", "models/items/shield_bubble/shield_bubble.mdl");
	bubble.__KeyValueFromString("renderfx", "11");
	bubble.__KeyValueFromString("angles", angle.tostring() + " 0 0");
	bubble.SetOrigin(hMarineInDamageAmpPlacedEvent.GetOrigin() + Vector(0, 0, high));
	if (hAmp.GetOwner().GetMarineName() == "Jaeger"){
		local timerScope = Timer(0.1, SetParentDelay);
		timerScope.toget <- hMarineInDamageAmpPlacedEvent;
		timerScope.toset <- bubble;
		DoEntFire("!self", "SetParent", "!activator", 0, hMarineInDamageAmpPlacedEvent, bubble);
	} else NetProps.SetPropFloat(bubble, "m_flModelScale", 2.5);
	bubble.Spawn();
	DoEntFire("!self", "Kill", "", kill, null, bubble);
	return bubble;
}

function DestroyViaDamageDelay(delay, hEnt, damage, damageType){
	local entScope = GetScrScope(hEnt);
	entScope.damage <- damage;
	entScope.damageType <- damageType;
	entScope.destroy <- function(){
		self.TakeDamage(damage, damageType, null);
		//self.DisconnectOutput("OnUser1", "destroy");
		return;
	}
	hEnt.ConnectOutput("OnUser1", "destroy");
	EntFireByHandle(hEnt, "FireUser1", "", delay, self, self);
	return entScope;
}

function Jaeger(){
	self.StopSound("ASW_ElectrifiedSuit.Loop");
	g_ModeScript.immortalOwner <- null;
	self.DisconnectOutput("OnUser1", "destroy");
	return;
}

function Sarge(){
	g_ModeScript.vecProtectionBubble <- null;
	self.DisconnectOutput("OnUser1", "destroy");
	return;
}

function BubbleDuration(delay, hEnt, func){
	GetScrScope(hEnt).destroy <- func;
	hEnt.ConnectOutput("OnUser1", "destroy");
	EntFireByHandle(hEnt, "FireUser1", "", delay, self, self);
	return;
}

function SpawnFullDome(duration){
	bubbleSpawn(40, duration - 2, 90);
	bubbleSpawn(40, duration - 2, -90);
	bubbleSpawn(40, duration - 2, 60);
	bubbleSpawn(40, duration - 2, -60);
	bubbleSpawn(40, duration - 1, 30);
	bubbleSpawn(40, duration - 1, -30);
	bubbleSpawn(20, duration - 1, 10);
	bubbleSpawn(20, duration - 1, -10);
	local base = bubbleSpawn(0, duration, 0);
	return base;
}

function IsExtraEquipped(classname, marine){
	local hExtra = NetProps.GetPropEntityArray(marine, "m_hMyWeapons", 2);
	if (hExtra && hExtra.GetClassname() == classname)
		return true;
	return false;
}

function toggleWildcatInvis(hWildcat, AiTable, modelscale, powerup){
	if (AiTable != "" && wildcatInvisibility + 0.2 >= Time())
		return;
	local hNearEntitie = null;
	while ((hNearEntitie = Entities.FindInSphere(hNearEntitie, hWildcat.GetOrigin(), 220)) != null){
		local hNearEntitieClassname = hNearEntitie.GetClassname();
		if (hNearEntitieClassname != "asw_marine" && hNearEntitieClassname != "asw_door"){
			if (hNearEntitie.IsAlien())
				hNearEntitie.Ignite(1);
			hNearEntitie.TakeDamage(650, 8, null);
		} else if (hNearEntitieClassname == "asw_marine" && hNearEntitie != hWildcat){
			if (!hNearEntitie.IsInhabited()){
				hNearEntitie.TakeDamage(10, 64, null);
				hNearEntitie.Ignite(7);
			} else hNearEntitie.TakeDamage(10, 8, null);
		}
	}
	ParticleSpawn(0.2, 0, 0, 0, hWildcat, "vindicator_grenade", "ASWGrenade.Incendiary", "", hWildcat, 0, "", 0, "", "");
	hWildcat.EmitSound("ASW_BuffGrenade.GrenadeActivate");
	NetProps.SetPropInt(hWildcat, "m_iPowerupType", powerup);
	NetProps.SetPropFloat(hWildcat, "m_flModelScale", modelscale);
	if (AiTable != ""){
		foreach (ai in AiTable){
			DoEntFire("!self", "RevertToDefaultRelationship", "", 0, null, ai);
			DoEntFire("!self", "Kill", "", 0.01, null, ai);
		}
		g_ModeScript.hWildcat <- null;
		g_ModeScript.AiTable <- {};
	}
	return;
}

function GetScrScope(entitie){
	entitie.ValidateScriptScope();
	local entitieScope = entitie.GetScriptScope();
	return entitieScope;
}

function Timer(RefireTime, timerFunction){
	local timer = Entities.CreateByClassname("logic_timer");
	timer.__KeyValueFromFloat("RefireTime", RefireTime);
	DoEntFire("!self", "Disable", "", 0, null, timer);
	timer.ValidateScriptScope();
	local timerScope = timer.GetScriptScope();
	timerScope.timerFunction <- timerFunction;
	timer.ConnectOutput("OnTimer", "timerFunction");
	DoEntFire("!self", "Enable", "", 0, null, timer);
	return timerScope;
}


function max(One, Two){
	if (One > Two)
		return One;
	return Two;
}

function LaunchVector( src, dest, gravity, flightTime ){
	if ( flightTime == 0.0 )
	{
		flightTime = max( 0.8, sqrt( ( (dest - src).Length() * 1.5 ) / gravity ) );
	}

	// delta high from start to end
	local H = dest.z - src.z ;
	// azimuth vector
	local azimuth = dest-src;
	azimuth.z = 0;
	// get horizontal distance start to end
	local D = azimuth.Length();
	// normalize azimuth
	azimuth *= 1/D;

	local Vy = ( H / flightTime + 0.5 * gravity * flightTime );
	local Vx = ( D / flightTime );
	local ret = azimuth * Vx;
	ret.z = Vy;
	return ret;
}

function MarineAngles(marine){
	local angles = null;
	angles = NetProps.GetPropVector(marine.GetCommander(), "m_angEyeAngles");
	if (!angles)
		angles = marine.GetAngles();
	return angles;
}

function PrintToAllPlayers(message){
	local player = null;
	while((player = Entities.FindByClassname(player, "player")) != null)
		ClientPrint(player, 3, message);
	return;
}

function helpFunc(){
	PrintToAllPlayers("Âßù„ÇÜƒÅÁºÅÂã≠Êï±Èêú‚ïÅÓÜç<ÈçóÊ•ÅÊüü>ÈçöÂ†ùËãü,Èêú‚ïÅÓÜç<J K>ÊµºÊ®∫ÂØ≤ÈäÜÂÇöÓõßÈèàÂ§êÊ£∂Ê£∞Ê®øÓá¨ÈçôÂ∂âÓõ≠Èîõ?);
	self.Destroy();
}

IncludeScript("0fun_cvars.nut");
IncludeScript("0fun_bfg.nut");
IncludeScript("0fun_OnGameEvent.nut");
IncludeScript("0fun_alien_spawn_changer.nut");
IncludeScript("0fun_precache.nut");
IncludeScript("0fun_grenade_cluster.nut");
IncludeScript("0fun_adrenaline.nut");
IncludeScript("0fun_ParticleSpawn.nut");
IncludeScript("0fun_OnTakeDamage.nut");
IncludeScript("0fun2_Update.nut");
IncludeScript("0fun_player_say.nut");

//------------------------------------------------------|
//------------------ OnGameplayStart -------------------|
//------------------------------------------------------|
function OnGameplayStart(){

// Preload
local hMarine = null;
hMarine = Entities.FindByClassname(hMarine, "asw_marine");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "disease_buff");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "powerup_chemical_bullets");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_huge_k");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "stungrenade_arc_sprites");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "boomer_drop_shockwave1");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_shockwave1");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "antlion_gib_02_trailsB");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ammo_satchel_take_lrg");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "embers_medium_0New");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ms_explosion_groundring");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "melee_suck_in_release");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "antlion_spit_02");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "Explosion_FloatieEmbers");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "mortar_explosion_debrisburst");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "powerup_pickup_generic");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_grenade");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "marine_hit_spark_master");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "blink");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_sparks");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "marine_resurrection_glow2");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_vind_a");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "vindicator_grenade_fire_flash");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "boomer_drop_FloatieEmbers");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "freeze_statue_mist");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "asw_env_explosion");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_grenade_heat");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "ElevatorShaftFire");
CreateParticleFunc(2, hMarine.GetOrigin() + Vector(0, -5000, 0), Vector(0, 0, 0), "explosion_sparks");





	local marine = null;
	while((marine = Entities.FindByClassname(marine, "asw_marine")) != null){
		marinesTable[marine] <- marine;
		if (IsExtraEquipped("asw_weapon_flashlight", marine))
			isFlashlightActive[NetProps.GetPropEntityArray(marine, "m_hMyWeapons", 2)] <- true;
	}

	Timer(0, helpFunc).PrintToAllPlayers <- PrintToAllPlayers;

	return;
}

//------------------------------------------------------|
//------------- Damage filter for doors ----------------|
//------------------------------------------------------|
local filter_activator_class = Entities.CreateByClassname("filter_activator_class");
filter_activator_class.__KeyValueFromString("filterclass", "asw_marine");
filter_activator_class.__KeyValueFromString("Negated", "1");
filter_activator_class.__KeyValueFromString("targetname", "filter");
filter_activator_class.Spawn();
local door = null;
while ((door = Entities.FindByClassname(door, "asw_door")) != null)
	DoEntFire("!self", "SetDamageFilter", "filter", 0, null, door);

//------------------------------------------------------|
//------------------- Relationship ---------------------|
//------------------------------------------------------|
local ai_relationship = Entities.CreateByClassname("ai_relationship");
ai_relationship.__KeyValueFromString("disposition", "3");
ai_relationship.__KeyValueFromString("rank", "99");
ai_relationship.__KeyValueFromString("target", "asw_mortarbug");
ai_relationship.__KeyValueFromString("subject", "asw_marine");
DoEntFire("!self", "ApplyRelationship", "", 0, null, ai_relationship);

//------------------------------------------------------|
//-------------------- 0.01 Thinker --------------------|
//------------------------------------------------------|
local target9 = Entities.CreateByClassname("info_target");
local targetScope = GetScrScope(target9);
targetScope.RollInvTable <- {};
targetScope.invRollTime <- invRollTime;
targetScope.marinesTable <- marinesTable;
targetScope.ParticleSpawn <- ParticleSpawn;
targetScope.target9 <- targetScope;
targetScope.MeleeParticleTable <- MeleeParticleTable;
targetScope.IsExtraEquipped <- IsExtraEquipped;
targetScope.GetScrScope <- GetScrScope;
targetScope.think <- function(){
	local time = Time();
	foreach (marine in marinesTable){
		local iMeleeAttackID = NetProps.GetPropInt(marine, "m_iMeleeAttackID");
		if (iMeleeAttackID == 11){
			if (!(RollInvTable.rawin(marine)) || RollInvTable[marine] + 0.3 < time){
				local particle = ParticleSpawn(0.5, 0, 0, 0, "", "mine_fire_ignite_glow", "NPC_SScanner.DiveBombFlyby", "NPC_SScanner.DiveBombFlyby", marine, 0, "Center", 0.02, "", marine);
				local angles = marine.GetAngles();
				particle.SetAngles(angles.x, angles.y, angles.z);
				GetScrScope(particle).Rotate <- function(){
					self.SetLocalAngles(0, 0, 90);
					self.SetLocalOrigin(Vector(0,0,15));
					self.DisconnectOutput("OnUser1", "Rotate");
				}
				particle.ConnectOutput("OnUser1", "Rotate");
				EntFireByHandle(particle, "FireUser1", "", 0.02, self, self);
				invRollTime[marine] <- time;
				g_ModeScript.invRollTime <- invRollTime;
			}
			RollInvTable[marine] <- time;
		} else if (iMeleeAttackID == 2){
			if (!(MeleeParticleTable.rawin(marine))){
				MeleeParticleTable[marine] <- ParticleSpawn("", 0, 0, 0, "", "thorns_marine_buff_start", "", "ASW_ElectrifiedSuit.TurnOn", marine, 0, "LHand", 0, "", marine);
				MeleeParticleTable[marine].SetOwner(marine);
				local particleScope = GetScrScope(MeleeParticleTable[marine]);
				particleScope.MeleeParticleTable <- MeleeParticleTable;
				particleScope.target9 <- target9;
				particleScope.Melee <- function(){
					if (self && self.IsValid()){
						local marine = self.GetOwner();
						if (NetProps.GetPropInt(marine, "m_iMeleeAttackID") != 2){
							MeleeParticleTable.rawdelete(marine);
							target9.MeleeParticleTable <- MeleeParticleTable;
							self.Destroy();
						}
					}
					return 0.01;
				}
				AddThinkToEnt(MeleeParticleTable[marine], "Melee");
				ParticleSpawn(0.8, 0, 0, 0, "", "electric_weapon_zap_cp1", "", "", marine, 0, "LHand", 0, MeleeParticleTable[marine], "");
				ParticleSpawn(0.3, 0, 0, 0, "", "electric_field_ground", "", "", marine, 0, "LHand", 0, "", "");
				local hNearEnt = null;
				local radius = 30;
				local iDamage = 40;
				local marineOrigin = marine.GetOrigin();
				if (IsExtraEquipped("asw_weapon_fist", marine)){
					radius = 100;
					iDamage = 300
					ParticleSpawn(0.3, 0, 0, 0, marine, "welding_door_cut", "", "", marine, 0, "LHand", 0, "", "");
				}
				while ((hNearEnt = Entities.FindInSphere(hNearEnt, marineOrigin + marine.GetForwardVector()*30, radius)) != null){
					if (hNearEnt.IsValid() && (hNearEnt.IsAlien() || hNearEnt.GetClassname() == "asw_alien_goo")){
						if (TraceLine(marineOrigin, hNearEnt.GetOrigin(), null) >= 1){
							hNearEnt.ElectroStun(1);
							hNearEnt.TakeDamage(iDamage, 8, marine);
						}
					} else if (hNearEnt.GetClassname() == "asw_door")
						hNearEnt.TakeDamage(hNearEnt.GetMaxHealth()/20, 4098, null);
				}
			}
		}
	}
	return 0.01; //instead of hooks which doesn't exist
}
AddThinkToEnt(target9, "think");

//------------------------------------------------------|
//-------------------- 0.1 Thinker ---------------------|
//------------------------------------------------------|
function underslungShotHook(){
	foreach (marine in marinesTable){
		local invData = {};
		marine.GetInventoryTable(invData);
		foreach (slot, weapon in invData){
			local weaponClassname = weapon.GetClassname();
			local time = Time();
			if (weaponClassname == "asw_weapon_heavy_rifle" && NetProps.GetPropInt(weapon, "m_bFastFire")
				&& (!(timeTable.rawin(weapon)) || timeTable[weapon] + 0.3 < time)){
				timeTable[weapon] <- time;
				local point1 = Entities.CreateByClassname("info_target");
				DoEntFire("!self", "SetParent", "!activator", 0, weapon, point1);
				DoEntFire("!self", "SetParentAttachment", "muzzle", 0, weapon, point1);
				local point1Scope = GetScrScope(point1);
				point1Scope.IncludeScript("0fun_ParticleSpawn.nut");
				point1Scope.aliensArray <- aliensArray;
				point1Scope.charmedAliens <- charmedAliens;
				point1Scope.marine <- marine;
				point1Scope.weapon <- weapon;
				point1Scope.MarineAngles <- MarineAngles;
				point1Scope.Point1SetLocalOrigin <- function(){
					if (self && self.IsValid()){
						if (NetProps.GetPropEntity(marine, "m_hActiveWeapon") != weapon){
							DoEntFire("!self", "Kill", "", 0, null, self);
							return;
						}

						local angles = MarineAngles(marine);
						local hIncGrenade = Entities.CreateByClassname("asw_boomer_blob");
						hIncGrenade.SetOrigin(self.GetOrigin() + Vector(0,0,7));
						hIncGrenade.SetLocalAngles(angles.x, angles.y, 0);
						DoEntFire("!self", "Color", "255 47 250", 0, null, hIncGrenade);
						hIncGrenade.Spawn();
						hIncGrenade.Activate();
						NetProps.SetPropFloat(hIncGrenade, "m_fDetonateTime", 1337);
						hIncGrenade.SetModel("models/swarm/grenades/HandGrenadeProjectile.mdl");
						NetProps.SetPropFloat(hIncGrenade, "m_flModelScale", 0.7);
						hIncGrenade.SetCollisionGroup(32);

						local vecCur = NetProps.GetPropVector(marine.GetCommander(), "m_vecCrosshairTracePos");
						local marineOrigin = marine.GetOrigin();
						local vecCurLen = (marineOrigin - vecCur).Length();
						if (vecCurLen > 600 || vecCur.tostring() == "(vector : (0.000000, 0.000000, 0.000000))")
							vecCurLen = 600;
						hIncGrenade.SetVelocity(hIncGrenade.GetForwardVector() * vecCurLen*1.3 + Vector(0,0,150));
						ParticleSpawn("", 0, 0, 0, hIncGrenade, "ent_on_fire_embers", "ASW_Weapon_Rifle.Grenade", "", hIncGrenade, 0, "", 0, "", "");
						ParticleSpawn("", 0, 0, 0, hIncGrenade, "lifesteal2", "ASW_Weapon_Rifle.Grenade", "", hIncGrenade, 0, "", 0, "", "");
						ParticleSpawn(1, 0, 0, 0, hIncGrenade, "lifesteal_stealhealth", "", "", hIncGrenade, 0, "", 0, "", "");
						local particle = ParticleSpawn(2, 0, 0, 0, self, "muzzleflash_grenadelauncher_main", "", "", self, 0, "", 0, "", "");
						particle.SetLocalAngles(0, angles.y, 0);
						hIncGrenade.ValidateScriptScope();
						local grenadeScope = hIncGrenade.GetScriptScope();
						grenadeScope.charmedAliens <- charmedAliens;
						grenadeScope.ParticleSpawn <- ParticleSpawn;
						grenadeScope.aliensArray <- aliensArray;
						grenadeScope.selfOrigin <- hIncGrenade.GetOrigin();
						grenadeScope.thinkfuncti <- function(){
							if (!self || !self.IsValid())
								return 1;
							if (selfOrigin == self.GetOrigin())
								return 0.1;
							local hNearEnt = null;
							while ((hNearEnt = Entities.FindInSphere(hNearEnt, self.GetOrigin(), 25)) != null){
								if (hNearEnt.IsValid() && hNearEnt.IsAlien()){
									Charm();
									DoEntFire("!self", "Kill", "", 0, null, self);
									return 1;
								}
							}
							selfOrigin = self.GetOrigin();
							return 0.1;
						}

						grenadeScope.Detonate <- function(){
							if (!self || !self.IsValid())
								return;
							Charm();
							DoEntFire("!self", "Kill", "", 0, null, self);
						}

						grenadeScope.Charm <- function(){
							ParticleSpawn(2, 0, 0, 0, self, "vindicator_grenade_init_flash", "PropaneTank.Burst", "", "", 0, "", 0, "", "");
							ParticleSpawn(0.3, 0, 0, 0, self, "ms_explosion_smoke_post", "PropaneTank.Burst", "", "", 0, "", 0, "", "");
							ParticleSpawn(0.3, 0, 0, 0, self, "explosion_grenade_heat", "ASW_Door.BulkheadStop", "", "", 0, "", 0, "", "");
							ParticleSpawn(2, 0, 0, 0, self, "Explosion_FloatieEmbers", "ASW_Door.BulkheadStop", "", "", 0, "", 0, "", "");
							ParticleSpawn(0.2, 0, 0, 10, self, "marine_gib_body_spark", "", "", "", 0, "", 0, "", "");
							local hNearEnt = null;
							local selfOrigin = self.GetOrigin();
							while ((hNearEnt = Entities.FindInSphere(hNearEnt, selfOrigin, 460)) != null){
								if (hNearEnt.IsValid() && hNearEnt.IsAlien()){
									if (TraceLine(selfOrigin, hNearEnt.GetOrigin(), null) >= 1){
										if (hNearEnt in charmedAliens)
											continue;
										//ParticleSpawn(0.7, 0, 0, 5, self, "drop_health_tracer_start", "", "", "", 0, "", 0, hNearEnt, "");
										//to do: better realisation of cpoint in ParticleSpawn function
										charmedAliens[hNearEnt] <- hNearEnt;
										DoEntFire("!self", "SetRelationship", "asw_marine D_NU 1", 0, null, hNearEnt);
										DoEntFire("!self", "SetRelationship", "asw_marine D_HT 1", 10, null, hNearEnt);

										foreach (alien in aliensArray){
											DoEntFire("!self", "SetRelationship", alien + " D_LI 1", 10, null, hNearEnt);
											DoEntFire("!self", "SetRelationship", alien + " D_HT 1", 0, null, hNearEnt);
											DoEntFire("!self", "Color", hNearEnt.GetKeyValue("rendercolor"), 10, null, hNearEnt);
											DoEntFire("!self", "Color", "255 47 250", 0, null, hNearEnt);
										}
									}
								}
							}
							return;
						}
						hIncGrenade.ConnectOutput("OnUser1", "Detonate");
						EntFireByHandle(hIncGrenade, "FireUser1", "", 3, self, self);
						AddThinkToEnt(hIncGrenade, "thinkfuncti");

						DoEntFire("!self", "Kill", "", 0.2, null, self);
						self.DisconnectOutput("OnUser1", "Point1SetLocalOrigin");
					}
					return;
				}
				point1.ConnectOutput("OnUser1", "Point1SetLocalOrigin");
				EntFireByHandle(point1, "FireUser1", "", 0.1, self, self);
			}
		}
	}
	return;
}
local underslungShotHookTimer = Timer(0.1,underslungShotHook);
underslungShotHookTimer.marinesTable <- marinesTable;
underslungShotHookTimer.GetScrScope <- GetScrScope;
underslungShotHookTimer.aliensArray <- aliensArray;
underslungShotHookTimer.charmedAliens <- charmedAliens;
underslungShotHookTimer.MarineAngles <- MarineAngles;
underslungShotHookTimer.timeTable <- {};

